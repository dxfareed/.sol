{
	"id": "757cc98e46d5dcef1fca160bd473b154",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/effct3testnet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.8.0;\n\ninterface IERC20 {\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n}\n\ncontract TriviaBase {\n\n    //base testnet!\n    address private immutable ADMIN;\n    address private immutable MOCK_USDC;\n    address private immutable BANK_ADMIN;\n    address private immutable deployer;\n\n    constructor(){\n        ADMIN = 0x70ca4a44A227645BB4815AE4d68098eA68aB926F;\n        MOCK_USDC = 0x1241676d45b1Cb5B573b6258C4A838e149A1D191;\n        BANK_ADMIN =  0x81881d97EA9a855025Bd0E38C7CCC2DE7074A1B7;\n        deployer = 0x52c043C7120d7DA35fFdDF6C5c2359d503ceE5F8;\n    }\n\n\n    event RewardsDistributed(address[3] winners, uint[3] rewards);\n\n    error InsufficientContractBalance();\n\n    function EmergencyWithdrawalAdmin() external onlyAddress{\n        uint contractBalance = IERC20(MOCK_USDC).balanceOf(address(this));\n        IERC20(MOCK_USDC).transfer(ADMIN, contractBalance);\n    }\n\n    function ReturnContractBalnc() external view returns(uint){\n        return IERC20(MOCK_USDC).balanceOf(address(this));\n    }\n\n    function RewardWinners(address[3] memory _users) external{\n        //key to randomize lmao;\n        require(msg.sender == deployer, \"Not deployer Address\");\n        uint contractBalance = IERC20(MOCK_USDC).balanceOf(address(this));\n        if (contractBalance == 0) revert InsufficientContractBalance();\n\n        uint[3] memory user_reward = [\n            (48 * contractBalance) / 100,\n            (29 * contractBalance) / 100,\n            (19 * contractBalance) / 100\n        ];\n\n        uint admin_reward = (4 * contractBalance) / 100;\n\n        for (uint i = 0; i < 3; i++) {\n            IERC20(MOCK_USDC).transfer(_users[i], user_reward[i]);\n        }\n        \n        IERC20(MOCK_USDC).transfer(BANK_ADMIN, admin_reward);\n        emit RewardsDistributed(_users, user_reward);\n    }\n\n    modifier onlyAddress() {\n        require(msg.sender == ADMIN, \"Only admin wallet!\");\n        _;\n    }\n}\n\n//[0x52c043C7120d7DA35fFdDF6C5c2359d503ceE5F8,0x52c043C7120d7DA35fFdDF6C5c2359d503ceE5F8,0x52c043C7120d7DA35fFdDF6C5c2359d503ceE5F8]\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\ncontract TriviaBaseFactory {\n    address private immutable TRIVIA = 0xa0302bF514b261bB46403d8C3044e7Ef1565C1E6;\n\n    event EmitNewTriviaContract( address _TriviaBase );\n\n    function createTriviaContract() external returns (address) {\n        address newconstTrivia = Clones.clone(TRIVIA);\n        emit EmitNewTriviaContract(newconstTrivia);\n        return newconstTrivia;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "CloneArgumentsTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11843  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11843  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201df8df097098f1fa99be17fb3776e599235a35bdd0a4f4adf54ccc3e5882acdc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201df8df097098f1fa99be17fb3776e599235a35bdd0a4f4adf54ccc3e5882acdc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xF8 0xDF MULMOD PUSH17 0x98F1FA99BE17FB3776E599235A35BDD0A4 DELEGATECALL 0xAD CREATE2 0x4C 0xCC RETURNDATACOPY PC DUP3 0xAC 0xDC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "817:11026:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201df8df097098f1fa99be17fb3776e599235a35bdd0a4f4adf54ccc3e5882acdc64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xF8 0xDF MULMOD PUSH17 0x98F1FA99BE17FB3776E599235A35BDD0A4 DELEGATECALL 0xAD CREATE2 0x4C 0xCC RETURNDATACOPY PC DUP3 0xAC 0xDC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "817:11026:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_cloneCodeWithImmutableArgs(address,bytes memory)": "infinite",
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory,uint256)": "infinite",
								"fetchCloneArgs(address)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11843,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201df8df097098f1fa99be17fb3776e599235a35bdd0a4f4adf54ccc3e5882acdc64736f6c634300081a0033",
									".code": [
										{
											"begin": 817,
											"end": 11843,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11843,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/effct3testnet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188\",\"dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [
						{
							"inputs": [],
							"name": "Create2EmptyBytecode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"errors": {
							"Create2EmptyBytecode()": [
								{
									"details": "There's no code to deploy."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4B 0x2D CALLCODE MCOPY SWAP14 MLOAD GASPRICE 0xA6 0xC9 MCOPY OR PUSH3 0x461E2C OR MSTORE8 PUSH15 0xEB62AA9BDB6011B3D03F6D259B6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4B 0x2D CALLCODE MCOPY SWAP14 MLOAD GASPRICE 0xA6 0xC9 MCOPY OR PUSH3 0x461E2C OR MSTORE8 PUSH15 0xEB62AA9BDB6011B3D03F6D259B6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f4b2df25e9d513aa6c95e1762461e2c17536eeb62aa9bdb6011b3d03f6d259b64736f6c634300081a0033",
									".code": [
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/effct3testnet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/effct3testnet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/effct3testnet.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/effct3testnet.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188\",\"dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/effct3testnet.sol\":{\"keccak256\":\"0xa62e007f3f74ddaeeaece786ee0d18c2028f173027527c09ed2657103a842819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1502676bf29d05925970c85bb163603a7c6998dde56ca7edc8dedeeb0202beb8\",\"dweb:/ipfs/QmV1dNtEscwmkjhoUGYRDmtNnNVQH92n496DsDzDAcythT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TriviaBase": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientContractBalance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[3]",
									"name": "winners",
									"type": "address[3]"
								},
								{
									"indexed": false,
									"internalType": "uint256[3]",
									"name": "rewards",
									"type": "uint256[3]"
								}
							],
							"name": "RewardsDistributed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "EmergencyWithdrawalAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ReturnContractBalnc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[3]",
									"name": "_users",
									"type": "address[3]"
								}
							],
							"name": "RewardWinners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/effct3testnet.sol\":338:2164  contract TriviaBase {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/effct3testnet.sol\":546:819  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/effct3testnet.sol\":577:619  0x70ca4a44A227645BB4815AE4d68098eA68aB926F */\n  0x70ca4a44a227645bb4815ae4d68098ea68ab926f\n    /* \"contracts/effct3testnet.sol\":569:619  ADMIN = 0x70ca4a44A227645BB4815AE4d68098eA68aB926F */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/effct3testnet.sol\":641:683  0x1241676d45b1Cb5B573b6258C4A838e149A1D191 */\n  0x1241676d45b1cb5b573b6258c4a838e149a1d191\n    /* \"contracts/effct3testnet.sol\":629:683  MOCK_USDC = 0x1241676d45b1Cb5B573b6258C4A838e149A1D191 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/effct3testnet.sol\":707:749  0x81881d97EA9a855025Bd0E38C7CCC2DE7074A1B7 */\n  0x81881d97ea9a855025bd0e38c7ccc2de7074a1b7\n    /* \"contracts/effct3testnet.sol\":693:749  BANK_ADMIN =  0x81881d97EA9a855025Bd0E38C7CCC2DE7074A1B7 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/effct3testnet.sol\":770:812  0x52c043C7120d7DA35fFdDF6C5c2359d503ceE5F8 */\n  0x52c043c7120d7da35ffddf6c5c2359d503cee5f8\n    /* \"contracts/effct3testnet.sol\":759:812  deployer = 0x52c043C7120d7DA35fFdDF6C5c2359d503ceE5F8 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/effct3testnet.sol\":338:2164  contract TriviaBase {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2208a16c73715b9b46b6a43eb7945ef73c11236cc17a73d6e0af3980c7c3c293\")\n  0x00\n  assignImmutable(\"0x22615f586e4a86b23ead367df957a03709c50c3e9f8d9d951d77eb93984a0744\")\n  0x00\n  assignImmutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n  0x00\n  assignImmutable(\"0x5a93a2dc92091af230683d15d3257a435cf66aed689fda6017f4307513f6d5be\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/effct3testnet.sol\":338:2164  contract TriviaBase {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x90decdae\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb321e227\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfe272fd9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/effct3testnet.sol\":936:1134  function EmergencyWithdrawalAdmin() external onlyAddress{... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/effct3testnet.sol\":1140:1264  function ReturnContractBalnc() external view returns(uint){... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/effct3testnet.sol\":1270:2055  function RewardWinners(address[3] memory _users) external{... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/effct3testnet.sol\":936:1134  function EmergencyWithdrawalAdmin() external onlyAddress{... */\n    tag_7:\n        /* \"contracts/effct3testnet.sol\":2116:2121  ADMIN */\n      immutable(\"0x5a93a2dc92091af230683d15d3257a435cf66aed689fda6017f4307513f6d5be\")\n        /* \"contracts/effct3testnet.sol\":2102:2121  msg.sender == ADMIN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/effct3testnet.sol\":2102:2112  msg.sender */\n      caller\n        /* \"contracts/effct3testnet.sol\":2102:2121  msg.sender == ADMIN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/effct3testnet.sol\":2094:2144  require(msg.sender == ADMIN, \"Only admin wallet!\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contracts/effct3testnet.sol\":1002:1022  uint contractBalance */\n      0x00\n        /* \"contracts/effct3testnet.sol\":1032:1041  MOCK_USDC */\n      immutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n        /* \"contracts/effct3testnet.sol\":1025:1052  IERC20(MOCK_USDC).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/effct3testnet.sol\":1061:1065  this */\n      address\n        /* \"contracts/effct3testnet.sol\":1025:1067  IERC20(MOCK_USDC).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"contracts/effct3testnet.sol\":1002:1067  uint contractBalance = IERC20(MOCK_USDC).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/effct3testnet.sol\":1084:1093  MOCK_USDC */\n      immutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n        /* \"contracts/effct3testnet.sol\":1077:1103  IERC20(MOCK_USDC).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/effct3testnet.sol\":1104:1109  ADMIN */\n      immutable(\"0x5a93a2dc92091af230683d15d3257a435cf66aed689fda6017f4307513f6d5be\")\n        /* \"contracts/effct3testnet.sol\":1111:1126  contractBalance */\n      dup4\n        /* \"contracts/effct3testnet.sol\":1077:1127  IERC20(MOCK_USDC).transfer(ADMIN, contractBalance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      pop\n        /* \"contracts/effct3testnet.sol\":992:1134  {... */\n      pop\n        /* \"contracts/effct3testnet.sol\":936:1134  function EmergencyWithdrawalAdmin() external onlyAddress{... */\n      jump\t// out\n        /* \"contracts/effct3testnet.sol\":1140:1264  function ReturnContractBalnc() external view returns(uint){... */\n    tag_9:\n        /* \"contracts/effct3testnet.sol\":1193:1197  uint */\n      0x00\n        /* \"contracts/effct3testnet.sol\":1222:1231  MOCK_USDC */\n      immutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n        /* \"contracts/effct3testnet.sol\":1215:1242  IERC20(MOCK_USDC).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/effct3testnet.sol\":1251:1255  this */\n      address\n        /* \"contracts/effct3testnet.sol\":1215:1257  IERC20(MOCK_USDC).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n        /* \"contracts/effct3testnet.sol\":1208:1257  return IERC20(MOCK_USDC).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/effct3testnet.sol\":1140:1264  function ReturnContractBalnc() external view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"contracts/effct3testnet.sol\":1270:2055  function RewardWinners(address[3] memory _users) external{... */\n    tag_15:\n        /* \"contracts/effct3testnet.sol\":1392:1400  deployer */\n      immutable(\"0x2208a16c73715b9b46b6a43eb7945ef73c11236cc17a73d6e0af3980c7c3c293\")\n        /* \"contracts/effct3testnet.sol\":1378:1400  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/effct3testnet.sol\":1378:1388  msg.sender */\n      caller\n        /* \"contracts/effct3testnet.sol\":1378:1400  msg.sender == deployer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/effct3testnet.sol\":1370:1425  require(msg.sender == deployer, \"Not deployer Address\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"contracts/effct3testnet.sol\":1435:1455  uint contractBalance */\n      0x00\n        /* \"contracts/effct3testnet.sol\":1465:1474  MOCK_USDC */\n      immutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n        /* \"contracts/effct3testnet.sol\":1458:1485  IERC20(MOCK_USDC).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/effct3testnet.sol\":1494:1498  this */\n      address\n        /* \"contracts/effct3testnet.sol\":1458:1500  IERC20(MOCK_USDC).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_42:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n        /* \"contracts/effct3testnet.sol\":1435:1500  uint contractBalance = IERC20(MOCK_USDC).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/effct3testnet.sol\":1533:1534  0 */\n      0x00\n        /* \"contracts/effct3testnet.sol\":1514:1529  contractBalance */\n      dup2\n        /* \"contracts/effct3testnet.sol\":1514:1534  contractBalance == 0 */\n      sub\n        /* \"contracts/effct3testnet.sol\":1510:1572  if (contractBalance == 0) revert InsufficientContractBalance() */\n      tag_46\n      jumpi\n        /* \"contracts/effct3testnet.sol\":1543:1572  InsufficientContractBalance() */\n      mload(0x40)\n      0x786e0a9900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/effct3testnet.sol\":1510:1572  if (contractBalance == 0) revert InsufficientContractBalance() */\n    tag_46:\n        /* \"contracts/effct3testnet.sol\":1583:1609  uint[3] memory user_reward */\n      0x00\n        /* \"contracts/effct3testnet.sol\":1583:1748  uint[3] memory user_reward = [... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/effct3testnet.sol\":1651:1654  100 */\n      0x64\n        /* \"contracts/effct3testnet.sol\":1632:1647  contractBalance */\n      dup5\n        /* \"contracts/effct3testnet.sol\":1627:1629  48 */\n      0x30\n        /* \"contracts/effct3testnet.sol\":1627:1647  48 * contractBalance */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/effct3testnet.sol\":1626:1654  (48 * contractBalance) / 100 */\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"contracts/effct3testnet.sol\":1583:1748  uint[3] memory user_reward = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/effct3testnet.sol\":1693:1696  100 */\n      0x64\n        /* \"contracts/effct3testnet.sol\":1674:1689  contractBalance */\n      dup5\n        /* \"contracts/effct3testnet.sol\":1669:1671  29 */\n      0x1d\n        /* \"contracts/effct3testnet.sol\":1669:1689  29 * contractBalance */\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n        /* \"contracts/effct3testnet.sol\":1668:1696  (29 * contractBalance) / 100 */\n      tag_52\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_52:\n        /* \"contracts/effct3testnet.sol\":1583:1748  uint[3] memory user_reward = [... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/effct3testnet.sol\":1735:1738  100 */\n      0x64\n        /* \"contracts/effct3testnet.sol\":1716:1731  contractBalance */\n      dup5\n        /* \"contracts/effct3testnet.sol\":1711:1713  19 */\n      0x13\n        /* \"contracts/effct3testnet.sol\":1711:1731  19 * contractBalance */\n      tag_53\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"contracts/effct3testnet.sol\":1710:1738  (19 * contractBalance) / 100 */\n      tag_54\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_54:\n        /* \"contracts/effct3testnet.sol\":1583:1748  uint[3] memory user_reward = [... */\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/effct3testnet.sol\":1759:1776  uint admin_reward */\n      0x00\n        /* \"contracts/effct3testnet.sol\":1803:1806  100 */\n      0x64\n        /* \"contracts/effct3testnet.sol\":1784:1799  contractBalance */\n      dup4\n        /* \"contracts/effct3testnet.sol\":1780:1781  4 */\n      0x04\n        /* \"contracts/effct3testnet.sol\":1780:1799  4 * contractBalance */\n      tag_55\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_55:\n        /* \"contracts/effct3testnet.sol\":1779:1806  (4 * contractBalance) / 100 */\n      tag_56\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_56:\n        /* \"contracts/effct3testnet.sol\":1759:1806  uint admin_reward = (4 * contractBalance) / 100 */\n      swap1\n      pop\n        /* \"contracts/effct3testnet.sol\":1822:1828  uint i */\n      0x00\n        /* \"contracts/effct3testnet.sol\":1817:1924  for (uint i = 0; i < 3; i++) {... */\n    tag_57:\n        /* \"contracts/effct3testnet.sol\":1838:1839  3 */\n      0x03\n        /* \"contracts/effct3testnet.sol\":1834:1835  i */\n      dup2\n        /* \"contracts/effct3testnet.sol\":1834:1839  i < 3 */\n      lt\n        /* \"contracts/effct3testnet.sol\":1817:1924  for (uint i = 0; i < 3; i++) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"contracts/effct3testnet.sol\":1867:1876  MOCK_USDC */\n      immutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n        /* \"contracts/effct3testnet.sol\":1860:1886  IERC20(MOCK_USDC).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/effct3testnet.sol\":1887:1893  _users */\n      dup7\n        /* \"contracts/effct3testnet.sol\":1894:1895  i */\n      dup4\n        /* \"contracts/effct3testnet.sol\":1887:1896  _users[i] */\n      0x03\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n    tag_60:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/effct3testnet.sol\":1898:1909  user_reward */\n      dup6\n        /* \"contracts/effct3testnet.sol\":1910:1911  i */\n      dup5\n        /* \"contracts/effct3testnet.sol\":1898:1912  user_reward[i] */\n      0x03\n      dup2\n      lt\n      tag_63\n      jumpi\n      tag_64\n      tag_62\n      jump\t// in\n    tag_64:\n    tag_63:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/effct3testnet.sol\":1860:1913  IERC20(MOCK_USDC).transfer(_users[i], user_reward[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_68:\n      pop\n        /* \"contracts/effct3testnet.sol\":1841:1844  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/effct3testnet.sol\":1817:1924  for (uint i = 0; i < 3; i++) {... */\n      jump(tag_57)\n    tag_58:\n      pop\n        /* \"contracts/effct3testnet.sol\":1949:1958  MOCK_USDC */\n      immutable(\"0xa46665548394c5816a813de8fb4459a0749dc37e4f6d2d629612997abd1cb8f3\")\n        /* \"contracts/effct3testnet.sol\":1942:1968  IERC20(MOCK_USDC).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/effct3testnet.sol\":1969:1979  BANK_ADMIN */\n      immutable(\"0x22615f586e4a86b23ead367df957a03709c50c3e9f8d9d951d77eb93984a0744\")\n        /* \"contracts/effct3testnet.sol\":1981:1993  admin_reward */\n      dup4\n        /* \"contracts/effct3testnet.sol\":1942:1994  IERC20(MOCK_USDC).transfer(BANK_ADMIN, admin_reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_69:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      pop\n        /* \"contracts/effct3testnet.sol\":2009:2048  RewardsDistributed(_users, user_reward) */\n      0x6b6ef27261dfd975a881981cb28adc6afe7963673c859bce73d79e0e09be34b0\n        /* \"contracts/effct3testnet.sol\":2028:2034  _users */\n      dup5\n        /* \"contracts/effct3testnet.sol\":2036:2047  user_reward */\n      dup4\n        /* \"contracts/effct3testnet.sol\":2009:2048  RewardsDistributed(_users, user_reward) */\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/effct3testnet.sol\":1327:2055  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/effct3testnet.sol\":1270:2055  function RewardWinners(address[3] memory _users) external{... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_75:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_76:\n        /* \"#utility.yul\":177:201   */\n      tag_123\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_75\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_125\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_76\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:517   */\n    tag_77:\n        /* \"#utility.yul\":475:481   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x40\n        /* \"#utility.yul\":502:511   */\n      mload\n        /* \"#utility.yul\":492:511   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:517   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_78:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:886   */\n    tag_80:\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":875:876   */\n      dup1\n        /* \"#utility.yul\":868:880   */\n      revert\n        /* \"#utility.yul\":892:994   */\n    tag_81:\n        /* \"#utility.yul\":933:939   */\n      0x00\n        /* \"#utility.yul\":984:986   */\n      0x1f\n        /* \"#utility.yul\":980:987   */\n      not\n        /* \"#utility.yul\":975:977   */\n      0x1f\n        /* \"#utility.yul\":968:973   */\n      dup4\n        /* \"#utility.yul\":964:978   */\n      add\n        /* \"#utility.yul\":960:988   */\n      and\n        /* \"#utility.yul\":950:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":892:994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1180   */\n    tag_82:\n        /* \"#utility.yul\":1048:1125   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1045:1046   */\n      0x00\n        /* \"#utility.yul\":1038:1126   */\n      mstore\n        /* \"#utility.yul\":1145:1149   */\n      0x41\n        /* \"#utility.yul\":1142:1143   */\n      0x04\n        /* \"#utility.yul\":1135:1150   */\n      mstore\n        /* \"#utility.yul\":1169:1173   */\n      0x24\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1159:1174   */\n      revert\n        /* \"#utility.yul\":1186:1467   */\n    tag_83:\n        /* \"#utility.yul\":1269:1296   */\n      tag_133\n        /* \"#utility.yul\":1291:1295   */\n      dup3\n        /* \"#utility.yul\":1269:1296   */\n      tag_81\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1261:1267   */\n      dup2\n        /* \"#utility.yul\":1257:1297   */\n      add\n        /* \"#utility.yul\":1399:1405   */\n      dup2\n        /* \"#utility.yul\":1387:1397   */\n      dup2\n        /* \"#utility.yul\":1384:1406   */\n      lt\n        /* \"#utility.yul\":1363:1381   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1351:1361   */\n      dup3\n        /* \"#utility.yul\":1348:1382   */\n      gt\n        /* \"#utility.yul\":1345:1407   */\n      or\n        /* \"#utility.yul\":1342:1430   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1410:1428   */\n      tag_135\n      tag_82\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1342:1430   */\n    tag_134:\n        /* \"#utility.yul\":1450:1460   */\n      dup1\n        /* \"#utility.yul\":1446:1448   */\n      0x40\n        /* \"#utility.yul\":1439:1461   */\n      mstore\n        /* \"#utility.yul\":1229:1467   */\n      pop\n        /* \"#utility.yul\":1186:1467   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1473:1602   */\n    tag_84:\n        /* \"#utility.yul\":1507:1513   */\n      0x00\n        /* \"#utility.yul\":1534:1554   */\n      tag_137\n      tag_77\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1524:1554   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1596   */\n      tag_138\n        /* \"#utility.yul\":1591:1595   */\n      dup3\n        /* \"#utility.yul\":1583:1589   */\n      dup3\n        /* \"#utility.yul\":1563:1596   */\n      tag_83\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1473:1602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1608:1857   */\n    tag_85:\n        /* \"#utility.yul\":1683:1687   */\n      0x00\n        /* \"#utility.yul\":1773:1791   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1765:1771   */\n      dup3\n        /* \"#utility.yul\":1762:1792   */\n      gt\n        /* \"#utility.yul\":1759:1815   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":1795:1813   */\n      tag_141\n      tag_82\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1759:1815   */\n    tag_140:\n        /* \"#utility.yul\":1845:1849   */\n      0x20\n        /* \"#utility.yul\":1837:1843   */\n      dup3\n        /* \"#utility.yul\":1833:1850   */\n      mul\n        /* \"#utility.yul\":1825:1850   */\n      swap1\n      pop\n        /* \"#utility.yul\":1608:1857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1863:1980   */\n    tag_86:\n        /* \"#utility.yul\":1972:1973   */\n      0x00\n        /* \"#utility.yul\":1969:1970   */\n      dup1\n        /* \"#utility.yul\":1962:1974   */\n      revert\n        /* \"#utility.yul\":1986:2112   */\n    tag_87:\n        /* \"#utility.yul\":2023:2030   */\n      0x00\n        /* \"#utility.yul\":2063:2105   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2056:2061   */\n      dup3\n        /* \"#utility.yul\":2052:2106   */\n      and\n        /* \"#utility.yul\":2041:2106   */\n      swap1\n      pop\n        /* \"#utility.yul\":1986:2112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2118:2214   */\n    tag_88:\n        /* \"#utility.yul\":2155:2162   */\n      0x00\n        /* \"#utility.yul\":2184:2208   */\n      tag_145\n        /* \"#utility.yul\":2202:2207   */\n      dup3\n        /* \"#utility.yul\":2184:2208   */\n      tag_87\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2173:2208   */\n      swap1\n      pop\n        /* \"#utility.yul\":2118:2214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2220:2342   */\n    tag_89:\n        /* \"#utility.yul\":2293:2317   */\n      tag_147\n        /* \"#utility.yul\":2311:2316   */\n      dup2\n        /* \"#utility.yul\":2293:2317   */\n      tag_88\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2286:2291   */\n      dup2\n        /* \"#utility.yul\":2283:2318   */\n      eq\n        /* \"#utility.yul\":2273:2336   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2332:2333   */\n      0x00\n        /* \"#utility.yul\":2329:2330   */\n      dup1\n        /* \"#utility.yul\":2322:2334   */\n      revert\n        /* \"#utility.yul\":2273:2336   */\n    tag_148:\n        /* \"#utility.yul\":2220:2342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2348:2487   */\n    tag_90:\n        /* \"#utility.yul\":2394:2399   */\n      0x00\n        /* \"#utility.yul\":2432:2438   */\n      dup2\n        /* \"#utility.yul\":2419:2439   */\n      calldataload\n        /* \"#utility.yul\":2410:2439   */\n      swap1\n      pop\n        /* \"#utility.yul\":2448:2481   */\n      tag_150\n        /* \"#utility.yul\":2475:2480   */\n      dup2\n        /* \"#utility.yul\":2448:2481   */\n      tag_89\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2348:2487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:3154   */\n    tag_91:\n        /* \"#utility.yul\":2605:2610   */\n      0x00\n        /* \"#utility.yul\":2630:2709   */\n      tag_152\n        /* \"#utility.yul\":2646:2708   */\n      tag_153\n        /* \"#utility.yul\":2701:2707   */\n      dup5\n        /* \"#utility.yul\":2646:2708   */\n      tag_85\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2630:2709   */\n      tag_84\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2621:2709   */\n      swap1\n      pop\n        /* \"#utility.yul\":2729:2734   */\n      dup1\n        /* \"#utility.yul\":2782:2786   */\n      0x20\n        /* \"#utility.yul\":2774:2780   */\n      dup5\n        /* \"#utility.yul\":2770:2787   */\n      mul\n        /* \"#utility.yul\":2762:2768   */\n      dup4\n        /* \"#utility.yul\":2758:2788   */\n      add\n        /* \"#utility.yul\":2811:2814   */\n      dup6\n        /* \"#utility.yul\":2803:2809   */\n      dup2\n        /* \"#utility.yul\":2800:2815   */\n      gt\n        /* \"#utility.yul\":2797:2919   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2830:2909   */\n      tag_155\n      tag_86\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2797:2919   */\n    tag_154:\n        /* \"#utility.yul\":2945:2951   */\n      dup4\n        /* \"#utility.yul\":2928:3148   */\n    tag_156:\n        /* \"#utility.yul\":2962:2968   */\n      dup2\n        /* \"#utility.yul\":2957:2960   */\n      dup2\n        /* \"#utility.yul\":2954:2969   */\n      lt\n        /* \"#utility.yul\":2928:3148   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":3037:3040   */\n      dup1\n        /* \"#utility.yul\":3066:3103   */\n      tag_159\n        /* \"#utility.yul\":3099:3102   */\n      dup9\n        /* \"#utility.yul\":3087:3097   */\n      dup3\n        /* \"#utility.yul\":3066:3103   */\n      tag_90\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3061:3064   */\n      dup5\n        /* \"#utility.yul\":3054:3104   */\n      mstore\n        /* \"#utility.yul\":3133:3137   */\n      0x20\n        /* \"#utility.yul\":3128:3131   */\n      dup5\n        /* \"#utility.yul\":3124:3138   */\n      add\n        /* \"#utility.yul\":3117:3138   */\n      swap4\n      pop\n        /* \"#utility.yul\":3004:3148   */\n      pop\n        /* \"#utility.yul\":2988:2992   */\n      0x20\n        /* \"#utility.yul\":2983:2986   */\n      dup2\n        /* \"#utility.yul\":2979:2993   */\n      add\n        /* \"#utility.yul\":2972:2993   */\n      swap1\n      pop\n        /* \"#utility.yul\":2928:3148   */\n      jump(tag_156)\n    tag_158:\n        /* \"#utility.yul\":2932:2953   */\n      pop\n        /* \"#utility.yul\":2611:3154   */\n      pop\n      pop\n        /* \"#utility.yul\":2511:3154   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3517   */\n    tag_92:\n        /* \"#utility.yul\":3247:3252   */\n      0x00\n        /* \"#utility.yul\":3296:3299   */\n      dup3\n        /* \"#utility.yul\":3289:3293   */\n      0x1f\n        /* \"#utility.yul\":3281:3287   */\n      dup4\n        /* \"#utility.yul\":3277:3294   */\n      add\n        /* \"#utility.yul\":3273:3300   */\n      slt\n        /* \"#utility.yul\":3263:3385   */\n      tag_161\n      jumpi\n        /* \"#utility.yul\":3304:3383   */\n      tag_162\n      tag_80\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3263:3385   */\n    tag_161:\n        /* \"#utility.yul\":3408:3412   */\n      0x03\n        /* \"#utility.yul\":3430:3511   */\n      tag_163\n        /* \"#utility.yul\":3507:3510   */\n      dup5\n        /* \"#utility.yul\":3499:3505   */\n      dup3\n        /* \"#utility.yul\":3491:3497   */\n      dup6\n        /* \"#utility.yul\":3430:3511   */\n      tag_91\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3421:3511   */\n      swap2\n      pop\n        /* \"#utility.yul\":3253:3517   */\n      pop\n        /* \"#utility.yul\":3178:3517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3523:3898   */\n    tag_14:\n        /* \"#utility.yul\":3605:3611   */\n      0x00\n        /* \"#utility.yul\":3654:3656   */\n      0x60\n        /* \"#utility.yul\":3642:3651   */\n      dup3\n        /* \"#utility.yul\":3633:3640   */\n      dup5\n        /* \"#utility.yul\":3629:3652   */\n      sub\n        /* \"#utility.yul\":3625:3657   */\n      slt\n        /* \"#utility.yul\":3622:3741   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":3660:3739   */\n      tag_166\n      tag_78\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3622:3741   */\n    tag_165:\n        /* \"#utility.yul\":3780:3781   */\n      0x00\n        /* \"#utility.yul\":3805:3881   */\n      tag_167\n        /* \"#utility.yul\":3873:3880   */\n      dup5\n        /* \"#utility.yul\":3864:3870   */\n      dup3\n        /* \"#utility.yul\":3853:3862   */\n      dup6\n        /* \"#utility.yul\":3849:3871   */\n      add\n        /* \"#utility.yul\":3805:3881   */\n      tag_92\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3795:3881   */\n      swap2\n      pop\n        /* \"#utility.yul\":3751:3891   */\n      pop\n        /* \"#utility.yul\":3523:3898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3904:4073   */\n    tag_93:\n        /* \"#utility.yul\":3988:3999   */\n      0x00\n        /* \"#utility.yul\":4022:4028   */\n      dup3\n        /* \"#utility.yul\":4017:4020   */\n      dup3\n        /* \"#utility.yul\":4010:4029   */\n      mstore\n        /* \"#utility.yul\":4062:4066   */\n      0x20\n        /* \"#utility.yul\":4057:4060   */\n      dup3\n        /* \"#utility.yul\":4053:4067   */\n      add\n        /* \"#utility.yul\":4038:4067   */\n      swap1\n      pop\n        /* \"#utility.yul\":3904:4073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4079:4247   */\n    tag_94:\n        /* \"#utility.yul\":4219:4239   */\n      0x4f6e6c792061646d696e2077616c6c6574210000000000000000000000000000\n        /* \"#utility.yul\":4215:4216   */\n      0x00\n        /* \"#utility.yul\":4207:4213   */\n      dup3\n        /* \"#utility.yul\":4203:4217   */\n      add\n        /* \"#utility.yul\":4196:4240   */\n      mstore\n        /* \"#utility.yul\":4079:4247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4253:4619   */\n    tag_95:\n        /* \"#utility.yul\":4395:4398   */\n      0x00\n        /* \"#utility.yul\":4416:4483   */\n      tag_171\n        /* \"#utility.yul\":4480:4482   */\n      0x12\n        /* \"#utility.yul\":4475:4478   */\n      dup4\n        /* \"#utility.yul\":4416:4483   */\n      tag_93\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4409:4483   */\n      swap2\n      pop\n        /* \"#utility.yul\":4492:4585   */\n      tag_172\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4492:4585   */\n      tag_94\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4610:4612   */\n      0x20\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4601:4613   */\n      add\n        /* \"#utility.yul\":4594:4613   */\n      swap1\n      pop\n        /* \"#utility.yul\":4253:4619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4625:5044   */\n    tag_19:\n        /* \"#utility.yul\":4791:4795   */\n      0x00\n        /* \"#utility.yul\":4829:4831   */\n      0x20\n        /* \"#utility.yul\":4818:4827   */\n      dup3\n        /* \"#utility.yul\":4814:4832   */\n      add\n        /* \"#utility.yul\":4806:4832   */\n      swap1\n      pop\n        /* \"#utility.yul\":4878:4887   */\n      dup2\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4868:4888   */\n      sub\n        /* \"#utility.yul\":4864:4865   */\n      0x00\n        /* \"#utility.yul\":4853:4862   */\n      dup4\n        /* \"#utility.yul\":4849:4866   */\n      add\n        /* \"#utility.yul\":4842:4889   */\n      mstore\n        /* \"#utility.yul\":4906:5037   */\n      tag_174\n        /* \"#utility.yul\":5032:5036   */\n      dup2\n        /* \"#utility.yul\":4906:5037   */\n      tag_95\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4898:5037   */\n      swap1\n      pop\n        /* \"#utility.yul\":4625:5044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5168   */\n    tag_96:\n        /* \"#utility.yul\":5137:5161   */\n      tag_176\n        /* \"#utility.yul\":5155:5160   */\n      dup2\n        /* \"#utility.yul\":5137:5161   */\n      tag_88\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5132:5135   */\n      dup3\n        /* \"#utility.yul\":5125:5162   */\n      mstore\n        /* \"#utility.yul\":5050:5168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5174:5396   */\n    tag_22:\n        /* \"#utility.yul\":5267:5271   */\n      0x00\n        /* \"#utility.yul\":5305:5307   */\n      0x20\n        /* \"#utility.yul\":5294:5303   */\n      dup3\n        /* \"#utility.yul\":5290:5308   */\n      add\n        /* \"#utility.yul\":5282:5308   */\n      swap1\n      pop\n        /* \"#utility.yul\":5318:5389   */\n      tag_178\n        /* \"#utility.yul\":5386:5387   */\n      0x00\n        /* \"#utility.yul\":5375:5384   */\n      dup4\n        /* \"#utility.yul\":5371:5388   */\n      add\n        /* \"#utility.yul\":5362:5368   */\n      dup5\n        /* \"#utility.yul\":5318:5389   */\n      tag_96\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5174:5396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5402:5524   */\n    tag_97:\n        /* \"#utility.yul\":5475:5499   */\n      tag_180\n        /* \"#utility.yul\":5493:5498   */\n      dup2\n        /* \"#utility.yul\":5475:5499   */\n      tag_75\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5468:5473   */\n      dup2\n        /* \"#utility.yul\":5465:5500   */\n      eq\n        /* \"#utility.yul\":5455:5518   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":5514:5515   */\n      0x00\n        /* \"#utility.yul\":5511:5512   */\n      dup1\n        /* \"#utility.yul\":5504:5516   */\n      revert\n        /* \"#utility.yul\":5455:5518   */\n    tag_181:\n        /* \"#utility.yul\":5402:5524   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5673   */\n    tag_98:\n        /* \"#utility.yul\":5587:5592   */\n      0x00\n        /* \"#utility.yul\":5618:5624   */\n      dup2\n        /* \"#utility.yul\":5612:5625   */\n      mload\n        /* \"#utility.yul\":5603:5625   */\n      swap1\n      pop\n        /* \"#utility.yul\":5634:5667   */\n      tag_183\n        /* \"#utility.yul\":5661:5666   */\n      dup2\n        /* \"#utility.yul\":5634:5667   */\n      tag_97\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5530:5673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5679:6030   */\n    tag_26:\n        /* \"#utility.yul\":5749:5755   */\n      0x00\n        /* \"#utility.yul\":5798:5800   */\n      0x20\n        /* \"#utility.yul\":5786:5795   */\n      dup3\n        /* \"#utility.yul\":5777:5784   */\n      dup5\n        /* \"#utility.yul\":5773:5796   */\n      sub\n        /* \"#utility.yul\":5769:5801   */\n      slt\n        /* \"#utility.yul\":5766:5885   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":5804:5883   */\n      tag_186\n      tag_78\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5766:5885   */\n    tag_185:\n        /* \"#utility.yul\":5924:5925   */\n      0x00\n        /* \"#utility.yul\":5949:6013   */\n      tag_187\n        /* \"#utility.yul\":6005:6012   */\n      dup5\n        /* \"#utility.yul\":5996:6002   */\n      dup3\n        /* \"#utility.yul\":5985:5994   */\n      dup6\n        /* \"#utility.yul\":5981:6003   */\n      add\n        /* \"#utility.yul\":5949:6013   */\n      tag_98\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5939:6013   */\n      swap2\n      pop\n        /* \"#utility.yul\":5895:6023   */\n      pop\n        /* \"#utility.yul\":5679:6030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6036:6368   */\n    tag_28:\n        /* \"#utility.yul\":6157:6161   */\n      0x00\n        /* \"#utility.yul\":6195:6197   */\n      0x40\n        /* \"#utility.yul\":6184:6193   */\n      dup3\n        /* \"#utility.yul\":6180:6198   */\n      add\n        /* \"#utility.yul\":6172:6198   */\n      swap1\n      pop\n        /* \"#utility.yul\":6208:6279   */\n      tag_189\n        /* \"#utility.yul\":6276:6277   */\n      0x00\n        /* \"#utility.yul\":6265:6274   */\n      dup4\n        /* \"#utility.yul\":6261:6278   */\n      add\n        /* \"#utility.yul\":6252:6258   */\n      dup6\n        /* \"#utility.yul\":6208:6279   */\n      tag_96\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6289:6361   */\n      tag_190\n        /* \"#utility.yul\":6357:6359   */\n      0x20\n        /* \"#utility.yul\":6346:6355   */\n      dup4\n        /* \"#utility.yul\":6342:6360   */\n      add\n        /* \"#utility.yul\":6333:6339   */\n      dup5\n        /* \"#utility.yul\":6289:6361   */\n      tag_76\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6036:6368   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6374:6464   */\n    tag_99:\n        /* \"#utility.yul\":6408:6415   */\n      0x00\n        /* \"#utility.yul\":6451:6456   */\n      dup2\n        /* \"#utility.yul\":6444:6457   */\n      iszero\n        /* \"#utility.yul\":6437:6458   */\n      iszero\n        /* \"#utility.yul\":6426:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6374:6464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6586   */\n    tag_100:\n        /* \"#utility.yul\":6540:6561   */\n      tag_193\n        /* \"#utility.yul\":6555:6560   */\n      dup2\n        /* \"#utility.yul\":6540:6561   */\n      tag_99\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6533:6538   */\n      dup2\n        /* \"#utility.yul\":6530:6562   */\n      eq\n        /* \"#utility.yul\":6520:6580   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":6576:6577   */\n      0x00\n        /* \"#utility.yul\":6573:6574   */\n      dup1\n        /* \"#utility.yul\":6566:6578   */\n      revert\n        /* \"#utility.yul\":6520:6580   */\n    tag_194:\n        /* \"#utility.yul\":6470:6586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6592:6729   */\n    tag_101:\n        /* \"#utility.yul\":6646:6651   */\n      0x00\n        /* \"#utility.yul\":6677:6683   */\n      dup2\n        /* \"#utility.yul\":6671:6684   */\n      mload\n        /* \"#utility.yul\":6662:6684   */\n      swap1\n      pop\n        /* \"#utility.yul\":6693:6723   */\n      tag_196\n        /* \"#utility.yul\":6717:6722   */\n      dup2\n        /* \"#utility.yul\":6693:6723   */\n      tag_100\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6592:6729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6735:7080   */\n    tag_32:\n        /* \"#utility.yul\":6802:6808   */\n      0x00\n        /* \"#utility.yul\":6851:6853   */\n      0x20\n        /* \"#utility.yul\":6839:6848   */\n      dup3\n        /* \"#utility.yul\":6830:6837   */\n      dup5\n        /* \"#utility.yul\":6826:6849   */\n      sub\n        /* \"#utility.yul\":6822:6854   */\n      slt\n        /* \"#utility.yul\":6819:6938   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":6857:6936   */\n      tag_199\n      tag_78\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6819:6938   */\n    tag_198:\n        /* \"#utility.yul\":6977:6978   */\n      0x00\n        /* \"#utility.yul\":7002:7063   */\n      tag_200\n        /* \"#utility.yul\":7055:7062   */\n      dup5\n        /* \"#utility.yul\":7046:7052   */\n      dup3\n        /* \"#utility.yul\":7035:7044   */\n      dup6\n        /* \"#utility.yul\":7031:7053   */\n      add\n        /* \"#utility.yul\":7002:7063   */\n      tag_101\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6992:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":6948:7073   */\n      pop\n        /* \"#utility.yul\":6735:7080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7086:7256   */\n    tag_102:\n        /* \"#utility.yul\":7226:7248   */\n      0x4e6f74206465706c6f7965722041646472657373000000000000000000000000\n        /* \"#utility.yul\":7222:7223   */\n      0x00\n        /* \"#utility.yul\":7214:7220   */\n      dup3\n        /* \"#utility.yul\":7210:7224   */\n      add\n        /* \"#utility.yul\":7203:7249   */\n      mstore\n        /* \"#utility.yul\":7086:7256   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7262:7628   */\n    tag_103:\n        /* \"#utility.yul\":7404:7407   */\n      0x00\n        /* \"#utility.yul\":7425:7492   */\n      tag_203\n        /* \"#utility.yul\":7489:7491   */\n      0x14\n        /* \"#utility.yul\":7484:7487   */\n      dup4\n        /* \"#utility.yul\":7425:7492   */\n      tag_93\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7418:7492   */\n      swap2\n      pop\n        /* \"#utility.yul\":7501:7594   */\n      tag_204\n        /* \"#utility.yul\":7590:7593   */\n      dup3\n        /* \"#utility.yul\":7501:7594   */\n      tag_102\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7619:7621   */\n      0x20\n        /* \"#utility.yul\":7614:7617   */\n      dup3\n        /* \"#utility.yul\":7610:7622   */\n      add\n        /* \"#utility.yul\":7603:7622   */\n      swap1\n      pop\n        /* \"#utility.yul\":7262:7628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7634:8053   */\n    tag_41:\n        /* \"#utility.yul\":7800:7804   */\n      0x00\n        /* \"#utility.yul\":7838:7840   */\n      0x20\n        /* \"#utility.yul\":7827:7836   */\n      dup3\n        /* \"#utility.yul\":7823:7841   */\n      add\n        /* \"#utility.yul\":7815:7841   */\n      swap1\n      pop\n        /* \"#utility.yul\":7887:7896   */\n      dup2\n        /* \"#utility.yul\":7881:7885   */\n      dup2\n        /* \"#utility.yul\":7877:7897   */\n      sub\n        /* \"#utility.yul\":7873:7874   */\n      0x00\n        /* \"#utility.yul\":7862:7871   */\n      dup4\n        /* \"#utility.yul\":7858:7875   */\n      add\n        /* \"#utility.yul\":7851:7898   */\n      mstore\n        /* \"#utility.yul\":7915:8046   */\n      tag_206\n        /* \"#utility.yul\":8041:8045   */\n      dup2\n        /* \"#utility.yul\":7915:8046   */\n      tag_103\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7907:8046   */\n      swap1\n      pop\n        /* \"#utility.yul\":7634:8053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8059:8239   */\n    tag_104:\n        /* \"#utility.yul\":8107:8184   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8104:8105   */\n      0x00\n        /* \"#utility.yul\":8097:8185   */\n      mstore\n        /* \"#utility.yul\":8204:8208   */\n      0x11\n        /* \"#utility.yul\":8201:8202   */\n      0x04\n        /* \"#utility.yul\":8194:8209   */\n      mstore\n        /* \"#utility.yul\":8228:8232   */\n      0x24\n        /* \"#utility.yul\":8225:8226   */\n      0x00\n        /* \"#utility.yul\":8218:8233   */\n      revert\n        /* \"#utility.yul\":8245:8655   */\n    tag_48:\n        /* \"#utility.yul\":8285:8292   */\n      0x00\n        /* \"#utility.yul\":8308:8328   */\n      tag_209\n        /* \"#utility.yul\":8326:8327   */\n      dup3\n        /* \"#utility.yul\":8308:8328   */\n      tag_75\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8303:8328   */\n      swap2\n      pop\n        /* \"#utility.yul\":8342:8362   */\n      tag_210\n        /* \"#utility.yul\":8360:8361   */\n      dup4\n        /* \"#utility.yul\":8342:8362   */\n      tag_75\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8337:8362   */\n      swap3\n      pop\n        /* \"#utility.yul\":8397:8398   */\n      dup3\n        /* \"#utility.yul\":8394:8395   */\n      dup3\n        /* \"#utility.yul\":8390:8399   */\n      mul\n        /* \"#utility.yul\":8419:8449   */\n      tag_211\n        /* \"#utility.yul\":8437:8448   */\n      dup2\n        /* \"#utility.yul\":8419:8449   */\n      tag_75\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8408:8449   */\n      swap2\n      pop\n        /* \"#utility.yul\":8598:8599   */\n      dup3\n        /* \"#utility.yul\":8589:8596   */\n      dup3\n        /* \"#utility.yul\":8585:8600   */\n      div\n        /* \"#utility.yul\":8582:8583   */\n      dup5\n        /* \"#utility.yul\":8579:8601   */\n      eq\n        /* \"#utility.yul\":8559:8560   */\n      dup4\n        /* \"#utility.yul\":8552:8561   */\n      iszero\n        /* \"#utility.yul\":8532:8615   */\n      or\n        /* \"#utility.yul\":8509:8648   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":8628:8646   */\n      tag_213\n      tag_104\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8509:8648   */\n    tag_212:\n        /* \"#utility.yul\":8293:8655   */\n      pop\n        /* \"#utility.yul\":8245:8655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8661:8841   */\n    tag_105:\n        /* \"#utility.yul\":8709:8786   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8706:8707   */\n      0x00\n        /* \"#utility.yul\":8699:8787   */\n      mstore\n        /* \"#utility.yul\":8806:8810   */\n      0x12\n        /* \"#utility.yul\":8803:8804   */\n      0x04\n        /* \"#utility.yul\":8796:8811   */\n      mstore\n        /* \"#utility.yul\":8830:8834   */\n      0x24\n        /* \"#utility.yul\":8827:8828   */\n      0x00\n        /* \"#utility.yul\":8820:8835   */\n      revert\n        /* \"#utility.yul\":8847:9032   */\n    tag_50:\n        /* \"#utility.yul\":8887:8888   */\n      0x00\n        /* \"#utility.yul\":8904:8924   */\n      tag_216\n        /* \"#utility.yul\":8922:8923   */\n      dup3\n        /* \"#utility.yul\":8904:8924   */\n      tag_75\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":8899:8924   */\n      swap2\n      pop\n        /* \"#utility.yul\":8938:8958   */\n      tag_217\n        /* \"#utility.yul\":8956:8957   */\n      dup4\n        /* \"#utility.yul\":8938:8958   */\n      tag_75\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8933:8958   */\n      swap3\n      pop\n        /* \"#utility.yul\":8977:8978   */\n      dup3\n        /* \"#utility.yul\":8967:9002   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":8982:9000   */\n      tag_219\n      tag_105\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8967:9002   */\n    tag_218:\n        /* \"#utility.yul\":9024:9025   */\n      dup3\n        /* \"#utility.yul\":9021:9022   */\n      dup3\n        /* \"#utility.yul\":9017:9026   */\n      div\n        /* \"#utility.yul\":9012:9026   */\n      swap1\n      pop\n        /* \"#utility.yul\":8847:9032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9038:9218   */\n    tag_62:\n        /* \"#utility.yul\":9086:9163   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9083:9084   */\n      0x00\n        /* \"#utility.yul\":9076:9164   */\n      mstore\n        /* \"#utility.yul\":9183:9187   */\n      0x32\n        /* \"#utility.yul\":9180:9181   */\n      0x04\n        /* \"#utility.yul\":9173:9188   */\n      mstore\n        /* \"#utility.yul\":9207:9211   */\n      0x24\n        /* \"#utility.yul\":9204:9205   */\n      0x00\n        /* \"#utility.yul\":9197:9212   */\n      revert\n        /* \"#utility.yul\":9224:9328   */\n    tag_106:\n        /* \"#utility.yul\":9289:9295   */\n      0x00\n        /* \"#utility.yul\":9317:9321   */\n      0x03\n        /* \"#utility.yul\":9307:9321   */\n      swap1\n      pop\n        /* \"#utility.yul\":9224:9328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9334:9477   */\n    tag_107:\n        /* \"#utility.yul\":9431:9442   */\n      0x00\n        /* \"#utility.yul\":9468:9471   */\n      dup2\n        /* \"#utility.yul\":9453:9471   */\n      swap1\n      pop\n        /* \"#utility.yul\":9334:9477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9483:9581   */\n    tag_108:\n        /* \"#utility.yul\":9548:9552   */\n      0x00\n        /* \"#utility.yul\":9571:9574   */\n      dup2\n        /* \"#utility.yul\":9563:9574   */\n      swap1\n      pop\n        /* \"#utility.yul\":9483:9581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9695   */\n    tag_109:\n        /* \"#utility.yul\":9664:9688   */\n      tag_225\n        /* \"#utility.yul\":9682:9687   */\n      dup2\n        /* \"#utility.yul\":9664:9688   */\n      tag_88\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":9659:9662   */\n      dup3\n        /* \"#utility.yul\":9652:9689   */\n      mstore\n        /* \"#utility.yul\":9587:9695   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9701:9880   */\n    tag_110:\n        /* \"#utility.yul\":9770:9780   */\n      0x00\n        /* \"#utility.yul\":9791:9837   */\n      tag_227\n        /* \"#utility.yul\":9833:9836   */\n      dup4\n        /* \"#utility.yul\":9825:9831   */\n      dup4\n        /* \"#utility.yul\":9791:9837   */\n      tag_109\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9869:9873   */\n      0x20\n        /* \"#utility.yul\":9864:9867   */\n      dup4\n        /* \"#utility.yul\":9860:9874   */\n      add\n        /* \"#utility.yul\":9846:9874   */\n      swap1\n      pop\n        /* \"#utility.yul\":9701:9880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:9997   */\n    tag_111:\n        /* \"#utility.yul\":9954:9958   */\n      0x00\n        /* \"#utility.yul\":9986:9990   */\n      0x20\n        /* \"#utility.yul\":9981:9984   */\n      dup3\n        /* \"#utility.yul\":9977:9991   */\n      add\n        /* \"#utility.yul\":9969:9991   */\n      swap1\n      pop\n        /* \"#utility.yul\":9886:9997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10035:10729   */\n    tag_112:\n        /* \"#utility.yul\":10171:10223   */\n      tag_230\n        /* \"#utility.yul\":10217:10222   */\n      dup2\n        /* \"#utility.yul\":10171:10223   */\n      tag_106\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":10239:10323   */\n      tag_231\n        /* \"#utility.yul\":10316:10322   */\n      dup2\n        /* \"#utility.yul\":10311:10314   */\n      dup5\n        /* \"#utility.yul\":10239:10323   */\n      tag_107\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":10232:10323   */\n      swap3\n      pop\n        /* \"#utility.yul\":10347:10401   */\n      tag_232\n        /* \"#utility.yul\":10395:10400   */\n      dup3\n        /* \"#utility.yul\":10347:10401   */\n      tag_108\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":10424:10431   */\n      dup1\n        /* \"#utility.yul\":10455:10456   */\n      0x00\n        /* \"#utility.yul\":10440:10722   */\n    tag_233:\n        /* \"#utility.yul\":10465:10471   */\n      dup4\n        /* \"#utility.yul\":10462:10463   */\n      dup2\n        /* \"#utility.yul\":10459:10472   */\n      lt\n        /* \"#utility.yul\":10440:10722   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":10541:10547   */\n      dup2\n        /* \"#utility.yul\":10535:10548   */\n      mload\n        /* \"#utility.yul\":10568:10631   */\n      tag_236\n        /* \"#utility.yul\":10627:10630   */\n      dup8\n        /* \"#utility.yul\":10612:10625   */\n      dup3\n        /* \"#utility.yul\":10568:10631   */\n      tag_110\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":10561:10631   */\n      swap7\n      pop\n        /* \"#utility.yul\":10654:10712   */\n      tag_237\n        /* \"#utility.yul\":10705:10711   */\n      dup4\n        /* \"#utility.yul\":10654:10712   */\n      tag_111\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":10644:10712   */\n      swap3\n      pop\n        /* \"#utility.yul\":10500:10722   */\n      pop\n        /* \"#utility.yul\":10487:10488   */\n      0x01\n        /* \"#utility.yul\":10484:10485   */\n      dup2\n        /* \"#utility.yul\":10480:10489   */\n      add\n        /* \"#utility.yul\":10475:10489   */\n      swap1\n      pop\n        /* \"#utility.yul\":10440:10722   */\n      jump(tag_233)\n    tag_235:\n        /* \"#utility.yul\":10444:10458   */\n      pop\n        /* \"#utility.yul\":10147:10729   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10035:10729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10735:10839   */\n    tag_113:\n        /* \"#utility.yul\":10800:10806   */\n      0x00\n        /* \"#utility.yul\":10828:10832   */\n      0x03\n        /* \"#utility.yul\":10818:10832   */\n      swap1\n      pop\n        /* \"#utility.yul\":10735:10839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10845:10988   */\n    tag_114:\n        /* \"#utility.yul\":10942:10953   */\n      0x00\n        /* \"#utility.yul\":10979:10982   */\n      dup2\n        /* \"#utility.yul\":10964:10982   */\n      swap1\n      pop\n        /* \"#utility.yul\":10845:10988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10994:11092   */\n    tag_115:\n        /* \"#utility.yul\":11059:11063   */\n      0x00\n        /* \"#utility.yul\":11082:11085   */\n      dup2\n        /* \"#utility.yul\":11074:11085   */\n      swap1\n      pop\n        /* \"#utility.yul\":10994:11092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11098:11206   */\n    tag_116:\n        /* \"#utility.yul\":11175:11199   */\n      tag_242\n        /* \"#utility.yul\":11193:11198   */\n      dup2\n        /* \"#utility.yul\":11175:11199   */\n      tag_75\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":11170:11173   */\n      dup3\n        /* \"#utility.yul\":11163:11200   */\n      mstore\n        /* \"#utility.yul\":11098:11206   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11212:11391   */\n    tag_117:\n        /* \"#utility.yul\":11281:11291   */\n      0x00\n        /* \"#utility.yul\":11302:11348   */\n      tag_244\n        /* \"#utility.yul\":11344:11347   */\n      dup4\n        /* \"#utility.yul\":11336:11342   */\n      dup4\n        /* \"#utility.yul\":11302:11348   */\n      tag_116\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":11380:11384   */\n      0x20\n        /* \"#utility.yul\":11375:11378   */\n      dup4\n        /* \"#utility.yul\":11371:11385   */\n      add\n        /* \"#utility.yul\":11357:11385   */\n      swap1\n      pop\n        /* \"#utility.yul\":11212:11391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11397:11508   */\n    tag_118:\n        /* \"#utility.yul\":11465:11469   */\n      0x00\n        /* \"#utility.yul\":11497:11501   */\n      0x20\n        /* \"#utility.yul\":11492:11495   */\n      dup3\n        /* \"#utility.yul\":11488:11502   */\n      add\n        /* \"#utility.yul\":11480:11502   */\n      swap1\n      pop\n        /* \"#utility.yul\":11397:11508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11546:12240   */\n    tag_119:\n        /* \"#utility.yul\":11682:11734   */\n      tag_247\n        /* \"#utility.yul\":11728:11733   */\n      dup2\n        /* \"#utility.yul\":11682:11734   */\n      tag_113\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":11750:11834   */\n      tag_248\n        /* \"#utility.yul\":11827:11833   */\n      dup2\n        /* \"#utility.yul\":11822:11825   */\n      dup5\n        /* \"#utility.yul\":11750:11834   */\n      tag_114\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":11743:11834   */\n      swap3\n      pop\n        /* \"#utility.yul\":11858:11912   */\n      tag_249\n        /* \"#utility.yul\":11906:11911   */\n      dup3\n        /* \"#utility.yul\":11858:11912   */\n      tag_115\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":11935:11942   */\n      dup1\n        /* \"#utility.yul\":11966:11967   */\n      0x00\n        /* \"#utility.yul\":11951:12233   */\n    tag_250:\n        /* \"#utility.yul\":11976:11982   */\n      dup4\n        /* \"#utility.yul\":11973:11974   */\n      dup2\n        /* \"#utility.yul\":11970:11983   */\n      lt\n        /* \"#utility.yul\":11951:12233   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":12052:12058   */\n      dup2\n        /* \"#utility.yul\":12046:12059   */\n      mload\n        /* \"#utility.yul\":12079:12142   */\n      tag_253\n        /* \"#utility.yul\":12138:12141   */\n      dup8\n        /* \"#utility.yul\":12123:12136   */\n      dup3\n        /* \"#utility.yul\":12079:12142   */\n      tag_117\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":12072:12142   */\n      swap7\n      pop\n        /* \"#utility.yul\":12165:12223   */\n      tag_254\n        /* \"#utility.yul\":12216:12222   */\n      dup4\n        /* \"#utility.yul\":12165:12223   */\n      tag_118\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":12155:12223   */\n      swap3\n      pop\n        /* \"#utility.yul\":12011:12233   */\n      pop\n        /* \"#utility.yul\":11998:11999   */\n      0x01\n        /* \"#utility.yul\":11995:11996   */\n      dup2\n        /* \"#utility.yul\":11991:12000   */\n      add\n        /* \"#utility.yul\":11986:12000   */\n      swap1\n      pop\n        /* \"#utility.yul\":11951:12233   */\n      jump(tag_250)\n    tag_252:\n        /* \"#utility.yul\":11955:11969   */\n      pop\n        /* \"#utility.yul\":11658:12240   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11546:12240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12246:12763   */\n    tag_74:\n        /* \"#utility.yul\":12459:12463   */\n      0x00\n        /* \"#utility.yul\":12497:12500   */\n      0xc0\n        /* \"#utility.yul\":12486:12495   */\n      dup3\n        /* \"#utility.yul\":12482:12501   */\n      add\n        /* \"#utility.yul\":12474:12501   */\n      swap1\n      pop\n        /* \"#utility.yul\":12511:12628   */\n      tag_256\n        /* \"#utility.yul\":12625:12626   */\n      0x00\n        /* \"#utility.yul\":12614:12623   */\n      dup4\n        /* \"#utility.yul\":12610:12627   */\n      add\n        /* \"#utility.yul\":12601:12607   */\n      dup6\n        /* \"#utility.yul\":12511:12628   */\n      tag_112\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":12638:12756   */\n      tag_257\n        /* \"#utility.yul\":12752:12754   */\n      0x60\n        /* \"#utility.yul\":12741:12750   */\n      dup4\n        /* \"#utility.yul\":12737:12755   */\n      add\n        /* \"#utility.yul\":12728:12734   */\n      dup5\n        /* \"#utility.yul\":12638:12756   */\n      tag_119\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":12246:12763   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e5016b3b14d5d46558ebbe1b181e2023f85420eee324bbe4db654f8c5870306864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_577": {
									"entryPoint": null,
									"id": 577,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610100604052348015610010575f80fd5b507370ca4a44a227645bb4815ae4d68098ea68ab926f73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050731241676d45b1cb5b573b6258c4a838e149a1d19173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250507381881d97ea9a855025bd0e38c7ccc2de7074a1b773ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250507352c043c7120d7da35ffddf6c5c2359d503cee5f873ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff168152505060805160a05160c05160e051610d5361018d5f395f61030f01525f61061201525f8181610118015281816101b2015281816102720152818161039e015281816104fe01526105d601525f8181608901526101ee0152610d535ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806390decdae14610043578063b321e2271461004d578063fe272fd91461006b575b5f80fd5b61004b610087565b005b61005561026f565b60405161006291906106e7565b60405180910390f35b610085600480360381019061008091906108a5565b61030d565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010c9061092a565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161016f9190610957565b602060405180830381865afa15801561018a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ae919061099a565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161022b9291906109c5565b6020604051808303815f875af1158015610247573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026b9190610a21565b5050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102c99190610957565b602060405180830381865afa1580156102e4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610308919061099a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290610a96565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103f59190610957565b602060405180830381865afa158015610410573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610434919061099a565b90505f810361046f576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6040518060600160405280606484603061048a9190610ae1565b6104949190610b4f565b8152602001606484601d6104a89190610ae1565b6104b29190610b4f565b815260200160648460136104c69190610ae1565b6104d09190610b4f565b81525090505f60648360046104e59190610ae1565b6104ef9190610b4f565b90505f5b60038110156105d3577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86836003811061054b5761054a610b7f565b5b602002015185846003811061056357610562610b7f565b5b60200201516040518363ffffffff1660e01b81526004016105859291906109c5565b6020604051808303815f875af11580156105a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c59190610a21565b5080806001019150506104f3565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161064f9291906109c5565b6020604051808303815f875af115801561066b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068f9190610a21565b507f6b6ef27261dfd975a881981cb28adc6afe7963673c859bce73d79e0e09be34b084836040516106c1929190610cf6565b60405180910390a150505050565b5f819050919050565b6106e1816106cf565b82525050565b5f6020820190506106fa5f8301846106d8565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61075782610711565b810181811067ffffffffffffffff8211171561077657610775610721565b5b80604052505050565b5f610788610700565b9050610794828261074e565b919050565b5f67ffffffffffffffff8211156107b3576107b2610721565b5b602082029050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107eb826107c2565b9050919050565b6107fb816107e1565b8114610805575f80fd5b50565b5f81359050610816816107f2565b92915050565b5f61082e61082984610799565b61077f565b90508060208402830185811115610848576108476107be565b5b835b81811015610871578061085d8882610808565b84526020840193505060208101905061084a565b5050509392505050565b5f82601f83011261088f5761088e61070d565b5b600361089c84828561081c565b91505092915050565b5f606082840312156108ba576108b9610709565b5b5f6108c78482850161087b565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c792061646d696e2077616c6c65742100000000000000000000000000005f82015250565b5f6109146012836108d0565b915061091f826108e0565b602082019050919050565b5f6020820190508181035f83015261094181610908565b9050919050565b610951816107e1565b82525050565b5f60208201905061096a5f830184610948565b92915050565b610979816106cf565b8114610983575f80fd5b50565b5f8151905061099481610970565b92915050565b5f602082840312156109af576109ae610709565b5b5f6109bc84828501610986565b91505092915050565b5f6040820190506109d85f830185610948565b6109e560208301846106d8565b9392505050565b5f8115159050919050565b610a00816109ec565b8114610a0a575f80fd5b50565b5f81519050610a1b816109f7565b92915050565b5f60208284031215610a3657610a35610709565b5b5f610a4384828501610a0d565b91505092915050565b7f4e6f74206465706c6f79657220416464726573730000000000000000000000005f82015250565b5f610a806014836108d0565b9150610a8b82610a4c565b602082019050919050565b5f6020820190508181035f830152610aad81610a74565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610aeb826106cf565b9150610af6836106cf565b9250828202610b04816106cf565b91508282048414831517610b1b57610b1a610ab4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b59826106cf565b9150610b64836106cf565b925082610b7457610b73610b22565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60039050919050565b5f81905092915050565b5f819050919050565b610bd2816107e1565b82525050565b5f610be38383610bc9565b60208301905092915050565b5f602082019050919050565b610c0481610bac565b610c0e8184610bb6565b9250610c1982610bc0565b805f5b83811015610c49578151610c308782610bd8565b9650610c3b83610bef565b925050600181019050610c1c565b505050505050565b5f60039050919050565b5f81905092915050565b5f819050919050565b610c77816106cf565b82525050565b5f610c888383610c6e565b60208301905092915050565b5f602082019050919050565b610ca981610c51565b610cb38184610c5b565b9250610cbe82610c65565b805f5b83811015610cee578151610cd58782610c7d565b9650610ce083610c94565b925050600181019050610cc1565b505050505050565b5f60c082019050610d095f830185610bfb565b610d166060830184610ca0565b939250505056fea2646970667358221220e5016b3b14d5d46558ebbe1b181e2023f85420eee324bbe4db654f8c5870306864736f6c634300081a0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH20 0x70CA4A44A227645BB4815AE4D68098EA68AB926F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0x1241676D45B1CB5B573B6258C4A838E149A1D191 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0x81881D97EA9A855025BD0E38C7CCC2DE7074A1B7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0x52C043C7120D7DA35FFDDF6C5C2359D503CEE5F8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0xD53 PUSH2 0x18D PUSH0 CODECOPY PUSH0 PUSH2 0x30F ADD MSTORE PUSH0 PUSH2 0x612 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x118 ADD MSTORE DUP2 DUP2 PUSH2 0x1B2 ADD MSTORE DUP2 DUP2 PUSH2 0x272 ADD MSTORE DUP2 DUP2 PUSH2 0x39E ADD MSTORE DUP2 DUP2 PUSH2 0x4FE ADD MSTORE PUSH2 0x5D6 ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0x89 ADD MSTORE PUSH2 0x1EE ADD MSTORE PUSH2 0xD53 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90DECDAE EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xB321E227 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xFE272FD9 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP3 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x247 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x410 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 DUP5 PUSH1 0x30 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x494 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP5 PUSH1 0x1D PUSH2 0x4A8 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP5 PUSH1 0x13 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH1 0x64 DUP4 PUSH1 0x4 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5D3 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x563 JUMPI PUSH2 0x562 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x585 SWAP3 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4F3 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP3 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68F SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST POP PUSH32 0x6B6EF27261DFD975A881981CB28ADC6AFE7963673C859BCE73D79E0E09BE34B0 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6C1 SWAP3 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E1 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6FA PUSH0 DUP4 ADD DUP5 PUSH2 0x6D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x757 DUP3 PUSH2 0x711 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x721 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x788 PUSH2 0x700 JUMP JUMPDEST SWAP1 POP PUSH2 0x794 DUP3 DUP3 PUSH2 0x74E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7B3 JUMPI PUSH2 0x7B2 PUSH2 0x721 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7EB DUP3 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FB DUP2 PUSH2 0x7E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x805 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x816 DUP2 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x82E PUSH2 0x829 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x847 PUSH2 0x7BE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x871 JUMPI DUP1 PUSH2 0x85D DUP9 DUP3 PUSH2 0x808 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x84A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x88F JUMPI PUSH2 0x88E PUSH2 0x70D JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH2 0x89C DUP5 DUP3 DUP6 PUSH2 0x81C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BA JUMPI PUSH2 0x8B9 PUSH2 0x709 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8C7 DUP5 DUP3 DUP6 ADD PUSH2 0x87B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2077616C6C6574210000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x914 PUSH1 0x12 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x91F DUP3 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x941 DUP2 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x951 DUP2 PUSH2 0x7E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96A PUSH0 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x979 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP2 EQ PUSH2 0x983 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x994 DUP2 PUSH2 0x970 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AE PUSH2 0x709 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9BC DUP5 DUP3 DUP6 ADD PUSH2 0x986 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9D8 PUSH0 DUP4 ADD DUP6 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x9E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP2 EQ PUSH2 0xA0A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA1B DUP2 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x709 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA43 DUP5 DUP3 DUP6 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206465706C6F7965722041646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA80 PUSH1 0x14 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0xA8B DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAAD DUP2 PUSH2 0xA74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAEB DUP3 PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP PUSH2 0xAF6 DUP4 PUSH2 0x6CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB04 DUP2 PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP PUSH2 0xB64 DUP4 PUSH2 0x6CF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x7E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBE3 DUP4 DUP4 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC04 DUP2 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0xC0E DUP2 DUP5 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 POP PUSH2 0xC19 DUP3 PUSH2 0xBC0 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC49 JUMPI DUP2 MLOAD PUSH2 0xC30 DUP8 DUP3 PUSH2 0xBD8 JUMP JUMPDEST SWAP7 POP PUSH2 0xC3B DUP4 PUSH2 0xBEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC1C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC77 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC88 DUP4 DUP4 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA9 DUP2 PUSH2 0xC51 JUMP JUMPDEST PUSH2 0xCB3 DUP2 DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP3 POP PUSH2 0xCBE DUP3 PUSH2 0xC65 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCEE JUMPI DUP2 MLOAD PUSH2 0xCD5 DUP8 DUP3 PUSH2 0xC7D JUMP JUMPDEST SWAP7 POP PUSH2 0xCE0 DUP4 PUSH2 0xC94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xD09 PUSH0 DUP4 ADD DUP6 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0xD16 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xCA0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 ADD PUSH12 0x3B14D5D46558EBBE1B181E20 0x23 0xF8 SLOAD KECCAK256 0xEE 0xE3 0x24 0xBB 0xE4 0xDB PUSH6 0x4F8C58703068 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "338:1826:3:-:0;;;546:273;;;;;;;;;;577:42;569:50;;;;;;;;;;641:42;629:54;;;;;;;;;;707:42;693:56;;;;;;;;;;770:42;759:53;;;;;;;;;;338:1826;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@EmergencyWithdrawalAdmin_615": {
									"entryPoint": 135,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ReturnContractBalnc_631": {
									"entryPoint": 623,
									"id": 631,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@RewardWinners_738": {
									"entryPoint": 781,
									"id": 738,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_address_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$3_memory_ptr": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 2988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$3_memory_ptr": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$3_memory_ptr": {
									"entryPoint": 3220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack": {
									"entryPoint": 2998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12766:4",
										"nodeType": "YulBlock",
										"src": "0:12766:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:4",
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nativeSrc": "62:16:4",
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:4",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nativeSrc": "155:53:4",
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nativeSrc": "177:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nativeSrc": "165:37:4",
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nativeSrc": "165:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:4",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:4",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nativeSrc": "312:124:4",
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nativeSrc": "322:26:4",
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:4",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nativeSrc": "330:18:4",
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:4",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nativeSrc": "411:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nativeSrc": "358:71:4",
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nativeSrc": "358:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:4",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:4",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:4",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nativeSrc": "482:35:4",
													"nodeType": "YulBlock",
													"src": "482:35:4",
													"statements": [
														{
															"nativeSrc": "492:19:4",
															"nodeType": "YulAssignment",
															"src": "492:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:4",
																		"nodeType": "YulLiteral",
																		"src": "508:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:4"
																},
																"nativeSrc": "502:9:4",
																"nodeType": "YulFunctionCall",
																"src": "502:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:4",
														"nodeType": "YulTypedName",
														"src": "475:6:4",
														"type": ""
													}
												],
												"src": "442:75:4"
											},
											{
												"body": {
													"nativeSrc": "612:28:4",
													"nodeType": "YulBlock",
													"src": "612:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:4",
																		"nodeType": "YulLiteral",
																		"src": "629:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:4",
																		"nodeType": "YulLiteral",
																		"src": "632:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:4"
																},
																"nativeSrc": "622:12:4",
																"nodeType": "YulFunctionCall",
																"src": "622:12:4"
															},
															"nativeSrc": "622:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:4"
											},
											{
												"body": {
													"nativeSrc": "735:28:4",
													"nodeType": "YulBlock",
													"src": "735:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:4",
																		"nodeType": "YulLiteral",
																		"src": "752:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:4",
																		"nodeType": "YulLiteral",
																		"src": "755:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:4"
																},
																"nativeSrc": "745:12:4",
																"nodeType": "YulFunctionCall",
																"src": "745:12:4"
															},
															"nativeSrc": "745:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:4"
											},
											{
												"body": {
													"nativeSrc": "858:28:4",
													"nodeType": "YulBlock",
													"src": "858:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "875:1:4",
																		"nodeType": "YulLiteral",
																		"src": "875:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "878:1:4",
																		"nodeType": "YulLiteral",
																		"src": "878:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "868:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:4"
																},
																"nativeSrc": "868:12:4",
																"nodeType": "YulFunctionCall",
																"src": "868:12:4"
															},
															"nativeSrc": "868:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "868:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "769:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "769:117:4"
											},
											{
												"body": {
													"nativeSrc": "940:54:4",
													"nodeType": "YulBlock",
													"src": "940:54:4",
													"statements": [
														{
															"nativeSrc": "950:38:4",
															"nodeType": "YulAssignment",
															"src": "950:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "968:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "968:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "975:2:4",
																				"nodeType": "YulLiteral",
																				"src": "975:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "964:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "964:3:4"
																		},
																		"nativeSrc": "964:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "964:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "984:2:4",
																				"nodeType": "YulLiteral",
																				"src": "984:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "980:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "980:3:4"
																		},
																		"nativeSrc": "980:7:4",
																		"nodeType": "YulFunctionCall",
																		"src": "980:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "960:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "960:3:4"
																},
																"nativeSrc": "960:28:4",
																"nodeType": "YulFunctionCall",
																"src": "960:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "950:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "892:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "923:5:4",
														"nodeType": "YulTypedName",
														"src": "923:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "933:6:4",
														"nodeType": "YulTypedName",
														"src": "933:6:4",
														"type": ""
													}
												],
												"src": "892:102:4"
											},
											{
												"body": {
													"nativeSrc": "1028:152:4",
													"nodeType": "YulBlock",
													"src": "1028:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1045:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1045:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:77:4",
																		"nodeType": "YulLiteral",
																		"src": "1048:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1038:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1038:6:4"
																},
																"nativeSrc": "1038:88:4",
																"nodeType": "YulFunctionCall",
																"src": "1038:88:4"
															},
															"nativeSrc": "1038:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "1038:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1142:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1142:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1145:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1135:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:4"
																},
																"nativeSrc": "1135:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1135:15:4"
															},
															"nativeSrc": "1135:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1135:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1166:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1169:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1169:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1159:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:4"
																},
																"nativeSrc": "1159:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1159:15:4"
															},
															"nativeSrc": "1159:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1159:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1000:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1000:180:4"
											},
											{
												"body": {
													"nativeSrc": "1229:238:4",
													"nodeType": "YulBlock",
													"src": "1229:238:4",
													"statements": [
														{
															"nativeSrc": "1239:58:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1239:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1261:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1261:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1291:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "1291:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1269:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "1269:21:4"
																		},
																		"nativeSrc": "1269:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1257:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1257:3:4"
																},
																"nativeSrc": "1257:40:4",
																"nodeType": "YulFunctionCall",
																"src": "1257:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1243:10:4",
																	"nodeType": "YulTypedName",
																	"src": "1243:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1408:22:4",
																"nodeType": "YulBlock",
																"src": "1408:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1410:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1410:16:4"
																			},
																			"nativeSrc": "1410:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:18:4"
																		},
																		"nativeSrc": "1410:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1410:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1351:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1351:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1363:18:4",
																				"nodeType": "YulLiteral",
																				"src": "1363:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1348:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1348:2:4"
																		},
																		"nativeSrc": "1348:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1348:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1387:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1387:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1399:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1399:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1384:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1384:2:4"
																		},
																		"nativeSrc": "1384:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1384:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1345:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:4"
																},
																"nativeSrc": "1345:62:4",
																"nodeType": "YulFunctionCall",
																"src": "1345:62:4"
															},
															"nativeSrc": "1342:88:4",
															"nodeType": "YulIf",
															"src": "1342:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1446:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1446:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1450:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "1450:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1439:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1439:6:4"
																},
																"nativeSrc": "1439:22:4",
																"nodeType": "YulFunctionCall",
																"src": "1439:22:4"
															},
															"nativeSrc": "1439:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "1439:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1186:281:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1215:6:4",
														"nodeType": "YulTypedName",
														"src": "1215:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1223:4:4",
														"nodeType": "YulTypedName",
														"src": "1223:4:4",
														"type": ""
													}
												],
												"src": "1186:281:4"
											},
											{
												"body": {
													"nativeSrc": "1514:88:4",
													"nodeType": "YulBlock",
													"src": "1514:88:4",
													"statements": [
														{
															"nativeSrc": "1524:30:4",
															"nodeType": "YulAssignment",
															"src": "1524:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1534:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1534:18:4"
																},
																"nativeSrc": "1534:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1534:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1524:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1583:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1583:6:4"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1591:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1591:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1563:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "1563:19:4"
																},
																"nativeSrc": "1563:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1563:33:4"
															},
															"nativeSrc": "1563:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1563:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1473:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1498:4:4",
														"nodeType": "YulTypedName",
														"src": "1498:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1507:6:4",
														"nodeType": "YulTypedName",
														"src": "1507:6:4",
														"type": ""
													}
												],
												"src": "1473:129:4"
											},
											{
												"body": {
													"nativeSrc": "1688:169:4",
													"nodeType": "YulBlock",
													"src": "1688:169:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1793:22:4",
																"nodeType": "YulBlock",
																"src": "1793:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1795:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1795:16:4"
																			},
																			"nativeSrc": "1795:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1795:18:4"
																		},
																		"nativeSrc": "1795:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1795:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1765:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1765:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1773:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1773:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1762:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1762:2:4"
																},
																"nativeSrc": "1762:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1762:30:4"
															},
															"nativeSrc": "1759:56:4",
															"nodeType": "YulIf",
															"src": "1759:56:4"
														},
														{
															"nativeSrc": "1825:25:4",
															"nodeType": "YulAssignment",
															"src": "1825:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1837:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1837:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1845:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1845:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1833:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nativeSrc": "1833:17:4",
																"nodeType": "YulFunctionCall",
																"src": "1833:17:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1825:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1825:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "1608:249:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1672:6:4",
														"nodeType": "YulTypedName",
														"src": "1672:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1683:4:4",
														"nodeType": "YulTypedName",
														"src": "1683:4:4",
														"type": ""
													}
												],
												"src": "1608:249:4"
											},
											{
												"body": {
													"nativeSrc": "1952:28:4",
													"nodeType": "YulBlock",
													"src": "1952:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1969:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1972:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1972:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1962:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:4"
																},
																"nativeSrc": "1962:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1962:12:4"
															},
															"nativeSrc": "1962:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1962:12:4"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1863:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1863:117:4"
											},
											{
												"body": {
													"nativeSrc": "2031:81:4",
													"nodeType": "YulBlock",
													"src": "2031:81:4",
													"statements": [
														{
															"nativeSrc": "2041:65:4",
															"nodeType": "YulAssignment",
															"src": "2041:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2056:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2056:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2063:42:4",
																		"nodeType": "YulLiteral",
																		"src": "2063:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2052:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2052:3:4"
																},
																"nativeSrc": "2052:54:4",
																"nodeType": "YulFunctionCall",
																"src": "2052:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2041:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2041:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1986:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2013:5:4",
														"nodeType": "YulTypedName",
														"src": "2013:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2023:7:4",
														"nodeType": "YulTypedName",
														"src": "2023:7:4",
														"type": ""
													}
												],
												"src": "1986:126:4"
											},
											{
												"body": {
													"nativeSrc": "2163:51:4",
													"nodeType": "YulBlock",
													"src": "2163:51:4",
													"statements": [
														{
															"nativeSrc": "2173:35:4",
															"nodeType": "YulAssignment",
															"src": "2173:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2202:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2202:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2184:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2184:17:4"
																},
																"nativeSrc": "2184:24:4",
																"nodeType": "YulFunctionCall",
																"src": "2184:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2173:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2173:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2118:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2145:5:4",
														"nodeType": "YulTypedName",
														"src": "2145:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2155:7:4",
														"nodeType": "YulTypedName",
														"src": "2155:7:4",
														"type": ""
													}
												],
												"src": "2118:96:4"
											},
											{
												"body": {
													"nativeSrc": "2263:79:4",
													"nodeType": "YulBlock",
													"src": "2263:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:16:4",
																"nodeType": "YulBlock",
																"src": "2320:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2329:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2329:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2332:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2322:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2322:6:4"
																			},
																			"nativeSrc": "2322:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:12:4"
																		},
																		"nativeSrc": "2322:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2286:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2286:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2311:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2311:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2293:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2293:17:4"
																				},
																				"nativeSrc": "2293:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2293:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2283:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2283:2:4"
																		},
																		"nativeSrc": "2283:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2283:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2276:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:4"
																},
																"nativeSrc": "2276:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2276:43:4"
															},
															"nativeSrc": "2273:63:4",
															"nodeType": "YulIf",
															"src": "2273:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2220:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2256:5:4",
														"nodeType": "YulTypedName",
														"src": "2256:5:4",
														"type": ""
													}
												],
												"src": "2220:122:4"
											},
											{
												"body": {
													"nativeSrc": "2400:87:4",
													"nodeType": "YulBlock",
													"src": "2400:87:4",
													"statements": [
														{
															"nativeSrc": "2410:29:4",
															"nodeType": "YulAssignment",
															"src": "2410:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2432:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2419:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2419:12:4"
																},
																"nativeSrc": "2419:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2419:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2410:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2410:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2475:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2475:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2448:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2448:26:4"
																},
																"nativeSrc": "2448:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2448:33:4"
															},
															"nativeSrc": "2448:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2448:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2348:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2378:6:4",
														"nodeType": "YulTypedName",
														"src": "2378:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2386:3:4",
														"nodeType": "YulTypedName",
														"src": "2386:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2394:5:4",
														"nodeType": "YulTypedName",
														"src": "2394:5:4",
														"type": ""
													}
												],
												"src": "2348:139:4"
											},
											{
												"body": {
													"nativeSrc": "2611:543:4",
													"nodeType": "YulBlock",
													"src": "2611:543:4",
													"statements": [
														{
															"nativeSrc": "2621:88:4",
															"nodeType": "YulAssignment",
															"src": "2621:88:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$3_memory_ptr",
																			"nativeSrc": "2646:54:4",
																			"nodeType": "YulIdentifier",
																			"src": "2646:54:4"
																		},
																		"nativeSrc": "2646:62:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2646:62:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2630:15:4",
																	"nodeType": "YulIdentifier",
																	"src": "2630:15:4"
																},
																"nativeSrc": "2630:79:4",
																"nodeType": "YulFunctionCall",
																"src": "2630:79:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2621:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2621:5:4"
																}
															]
														},
														{
															"nativeSrc": "2718:16:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2718:16:4",
															"value": {
																"name": "array",
																"nativeSrc": "2729:5:4",
																"nodeType": "YulIdentifier",
																"src": "2729:5:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2722:3:4",
																	"nodeType": "YulTypedName",
																	"src": "2722:3:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2744:44:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2744:44:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2762:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2762:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2774:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2774:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2782:4:4",
																				"nodeType": "YulLiteral",
																				"src": "2782:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2770:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:4"
																		},
																		"nativeSrc": "2770:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2770:17:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2758:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:4"
																},
																"nativeSrc": "2758:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2758:30:4"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2748:6:4",
																	"nodeType": "YulTypedName",
																	"src": "2748:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2816:103:4",
																"nodeType": "YulBlock",
																"src": "2816:103:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2830:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2830:77:4"
																			},
																			"nativeSrc": "2830:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2830:79:4"
																		},
																		"nativeSrc": "2830:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2803:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2803:6:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2811:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2800:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2800:2:4"
																},
																"nativeSrc": "2800:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2800:15:4"
															},
															"nativeSrc": "2797:122:4",
															"nodeType": "YulIf",
															"src": "2797:122:4"
														},
														{
															"body": {
																"nativeSrc": "3004:144:4",
																"nodeType": "YulBlock",
																"src": "3004:144:4",
																"statements": [
																	{
																		"nativeSrc": "3019:21:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3019:21:4",
																		"value": {
																			"name": "src",
																			"nativeSrc": "3037:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3037:3:4"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "3023:10:4",
																				"nodeType": "YulTypedName",
																				"src": "3023:10:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3061:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3061:3:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "3087:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "3087:10:4"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "3099:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "3099:3:4"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "3066:20:4",
																						"nodeType": "YulIdentifier",
																						"src": "3066:20:4"
																					},
																					"nativeSrc": "3066:37:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3066:37:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3054:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3054:6:4"
																			},
																			"nativeSrc": "3054:50:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3054:50:4"
																		},
																		"nativeSrc": "3054:50:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3054:50:4"
																	},
																	{
																		"nativeSrc": "3117:21:4",
																		"nodeType": "YulAssignment",
																		"src": "3117:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3128:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3128:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3133:4:4",
																					"nodeType": "YulLiteral",
																					"src": "3133:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3124:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3124:3:4"
																			},
																			"nativeSrc": "3124:14:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3124:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3117:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3117:3:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2957:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2957:3:4"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2962:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2962:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2954:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2954:2:4"
																},
																"nativeSrc": "2954:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2954:15:4"
															},
															"nativeSrc": "2928:220:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2970:25:4",
																"nodeType": "YulBlock",
																"src": "2970:25:4",
																"statements": [
																	{
																		"nativeSrc": "2972:21:4",
																		"nodeType": "YulAssignment",
																		"src": "2972:21:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2983:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2983:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2988:4:4",
																					"nodeType": "YulLiteral",
																					"src": "2988:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2979:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2979:3:4"
																			},
																			"nativeSrc": "2979:14:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2979:14:4"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2972:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2972:3:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2932:21:4",
																"nodeType": "YulBlock",
																"src": "2932:21:4",
																"statements": [
																	{
																		"nativeSrc": "2934:17:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2934:17:4",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2945:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2945:6:4"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2938:3:4",
																				"nodeType": "YulTypedName",
																				"src": "2938:3:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2928:220:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "2511:643:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2581:6:4",
														"nodeType": "YulTypedName",
														"src": "2581:6:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2589:6:4",
														"nodeType": "YulTypedName",
														"src": "2589:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2597:3:4",
														"nodeType": "YulTypedName",
														"src": "2597:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2605:5:4",
														"nodeType": "YulTypedName",
														"src": "2605:5:4",
														"type": ""
													}
												],
												"src": "2511:643:4"
											},
											{
												"body": {
													"nativeSrc": "3253:264:4",
													"nodeType": "YulBlock",
													"src": "3253:264:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3302:83:4",
																"nodeType": "YulBlock",
																"src": "3302:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3304:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3304:77:4"
																			},
																			"nativeSrc": "3304:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3304:79:4"
																		},
																		"nativeSrc": "3304:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3304:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3281:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3281:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3289:4:4",
																						"nodeType": "YulLiteral",
																						"src": "3289:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3277:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3277:3:4"
																				},
																				"nativeSrc": "3277:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3277:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3296:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3296:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3273:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:4"
																		},
																		"nativeSrc": "3273:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3273:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3266:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:4"
																},
																"nativeSrc": "3266:35:4",
																"nodeType": "YulFunctionCall",
																"src": "3266:35:4"
															},
															"nativeSrc": "3263:122:4",
															"nodeType": "YulIf",
															"src": "3263:122:4"
														},
														{
															"nativeSrc": "3394:18:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3394:18:4",
															"value": {
																"kind": "number",
																"nativeSrc": "3408:4:4",
																"nodeType": "YulLiteral",
																"src": "3408:4:4",
																"type": "",
																"value": "0x03"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3398:6:4",
																	"nodeType": "YulTypedName",
																	"src": "3398:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3421:90:4",
															"nodeType": "YulAssignment",
															"src": "3421:90:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3491:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3491:6:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3499:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3499:6:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3507:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3507:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$3_memory_ptr",
																	"nativeSrc": "3430:60:4",
																	"nodeType": "YulIdentifier",
																	"src": "3430:60:4"
																},
																"nativeSrc": "3430:81:4",
																"nodeType": "YulFunctionCall",
																"src": "3430:81:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3421:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3421:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "3178:339:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3231:6:4",
														"nodeType": "YulTypedName",
														"src": "3231:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3239:3:4",
														"nodeType": "YulTypedName",
														"src": "3239:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3247:5:4",
														"nodeType": "YulTypedName",
														"src": "3247:5:4",
														"type": ""
													}
												],
												"src": "3178:339:4"
											},
											{
												"body": {
													"nativeSrc": "3612:286:4",
													"nodeType": "YulBlock",
													"src": "3612:286:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3658:83:4",
																"nodeType": "YulBlock",
																"src": "3658:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3660:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3660:77:4"
																			},
																			"nativeSrc": "3660:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3660:79:4"
																		},
																		"nativeSrc": "3660:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3660:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3633:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3633:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3642:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3642:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3629:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:4"
																		},
																		"nativeSrc": "3629:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3629:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3654:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3654:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3625:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:4"
																},
																"nativeSrc": "3625:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3625:32:4"
															},
															"nativeSrc": "3622:119:4",
															"nodeType": "YulIf",
															"src": "3622:119:4"
														},
														{
															"nativeSrc": "3751:140:4",
															"nodeType": "YulBlock",
															"src": "3751:140:4",
															"statements": [
																{
																	"nativeSrc": "3766:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3766:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3780:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3780:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3770:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3770:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3795:86:4",
																	"nodeType": "YulAssignment",
																	"src": "3795:86:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3853:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3853:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3864:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3864:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3849:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3849:3:4"
																				},
																				"nativeSrc": "3849:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3849:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3873:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3873:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$3_memory_ptr",
																			"nativeSrc": "3805:43:4",
																			"nodeType": "YulIdentifier",
																			"src": "3805:43:4"
																		},
																		"nativeSrc": "3805:76:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3805:76:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3795:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3795:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "3523:375:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3582:9:4",
														"nodeType": "YulTypedName",
														"src": "3582:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3593:7:4",
														"nodeType": "YulTypedName",
														"src": "3593:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3605:6:4",
														"nodeType": "YulTypedName",
														"src": "3605:6:4",
														"type": ""
													}
												],
												"src": "3523:375:4"
											},
											{
												"body": {
													"nativeSrc": "4000:73:4",
													"nodeType": "YulBlock",
													"src": "4000:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4017:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4017:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4022:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4022:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4010:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4010:6:4"
																},
																"nativeSrc": "4010:19:4",
																"nodeType": "YulFunctionCall",
																"src": "4010:19:4"
															},
															"nativeSrc": "4010:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "4010:19:4"
														},
														{
															"nativeSrc": "4038:29:4",
															"nodeType": "YulAssignment",
															"src": "4038:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4057:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4057:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4062:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4062:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4053:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4053:3:4"
																},
																"nativeSrc": "4053:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4053:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4038:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "4038:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3904:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3972:3:4",
														"nodeType": "YulTypedName",
														"src": "3972:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3977:6:4",
														"nodeType": "YulTypedName",
														"src": "3977:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3988:11:4",
														"nodeType": "YulTypedName",
														"src": "3988:11:4",
														"type": ""
													}
												],
												"src": "3904:169:4"
											},
											{
												"body": {
													"nativeSrc": "4185:62:4",
													"nodeType": "YulBlock",
													"src": "4185:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4207:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4215:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4215:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4203:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4203:3:4"
																		},
																		"nativeSrc": "4203:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4203:14:4"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2077616c6c657421",
																		"kind": "string",
																		"nativeSrc": "4219:20:4",
																		"nodeType": "YulLiteral",
																		"src": "4219:20:4",
																		"type": "",
																		"value": "Only admin wallet!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4196:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:4"
																},
																"nativeSrc": "4196:44:4",
																"nodeType": "YulFunctionCall",
																"src": "4196:44:4"
															},
															"nativeSrc": "4196:44:4",
															"nodeType": "YulExpressionStatement",
															"src": "4196:44:4"
														}
													]
												},
												"name": "store_literal_in_memory_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5",
												"nativeSrc": "4079:168:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4177:6:4",
														"nodeType": "YulTypedName",
														"src": "4177:6:4",
														"type": ""
													}
												],
												"src": "4079:168:4"
											},
											{
												"body": {
													"nativeSrc": "4399:220:4",
													"nodeType": "YulBlock",
													"src": "4399:220:4",
													"statements": [
														{
															"nativeSrc": "4409:74:4",
															"nodeType": "YulAssignment",
															"src": "4409:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4475:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4475:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4480:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4480:2:4",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4416:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4416:58:4"
																},
																"nativeSrc": "4416:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4416:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4409:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4409:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4581:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5",
																	"nativeSrc": "4492:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4492:88:4"
																},
																"nativeSrc": "4492:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4492:93:4"
															},
															"nativeSrc": "4492:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4492:93:4"
														},
														{
															"nativeSrc": "4594:19:4",
															"nodeType": "YulAssignment",
															"src": "4594:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4605:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4601:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4601:3:4"
																},
																"nativeSrc": "4601:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4601:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4594:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4253:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4387:3:4",
														"nodeType": "YulTypedName",
														"src": "4387:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4395:3:4",
														"nodeType": "YulTypedName",
														"src": "4395:3:4",
														"type": ""
													}
												],
												"src": "4253:366:4"
											},
											{
												"body": {
													"nativeSrc": "4796:248:4",
													"nodeType": "YulBlock",
													"src": "4796:248:4",
													"statements": [
														{
															"nativeSrc": "4806:26:4",
															"nodeType": "YulAssignment",
															"src": "4806:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4818:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4818:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4829:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4829:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4814:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:4"
																},
																"nativeSrc": "4814:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4814:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4806:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4806:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4853:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4853:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4864:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4864:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4849:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4849:3:4"
																		},
																		"nativeSrc": "4849:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4849:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4872:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4872:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4878:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4878:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4868:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:4"
																		},
																		"nativeSrc": "4868:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4842:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:4"
																},
																"nativeSrc": "4842:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4842:47:4"
															},
															"nativeSrc": "4842:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4842:47:4"
														},
														{
															"nativeSrc": "4898:139:4",
															"nodeType": "YulAssignment",
															"src": "4898:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5032:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5032:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4906:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4906:124:4"
																},
																"nativeSrc": "4906:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4906:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4898:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4898:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4625:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4776:9:4",
														"nodeType": "YulTypedName",
														"src": "4776:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4791:4:4",
														"nodeType": "YulTypedName",
														"src": "4791:4:4",
														"type": ""
													}
												],
												"src": "4625:419:4"
											},
											{
												"body": {
													"nativeSrc": "5115:53:4",
													"nodeType": "YulBlock",
													"src": "5115:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5132:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5132:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5155:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5155:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5137:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "5137:17:4"
																		},
																		"nativeSrc": "5137:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5137:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5125:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:4"
																},
																"nativeSrc": "5125:37:4",
																"nodeType": "YulFunctionCall",
																"src": "5125:37:4"
															},
															"nativeSrc": "5125:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "5125:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5050:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5103:5:4",
														"nodeType": "YulTypedName",
														"src": "5103:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5110:3:4",
														"nodeType": "YulTypedName",
														"src": "5110:3:4",
														"type": ""
													}
												],
												"src": "5050:118:4"
											},
											{
												"body": {
													"nativeSrc": "5272:124:4",
													"nodeType": "YulBlock",
													"src": "5272:124:4",
													"statements": [
														{
															"nativeSrc": "5282:26:4",
															"nodeType": "YulAssignment",
															"src": "5282:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5294:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5294:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5305:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5305:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5290:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:4"
																},
																"nativeSrc": "5290:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5290:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5282:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5282:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5362:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5362:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5375:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5375:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5386:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5386:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5371:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:4"
																		},
																		"nativeSrc": "5371:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5318:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5318:43:4"
																},
																"nativeSrc": "5318:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5318:71:4"
															},
															"nativeSrc": "5318:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5318:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5174:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5244:9:4",
														"nodeType": "YulTypedName",
														"src": "5244:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5256:6:4",
														"nodeType": "YulTypedName",
														"src": "5256:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5267:4:4",
														"nodeType": "YulTypedName",
														"src": "5267:4:4",
														"type": ""
													}
												],
												"src": "5174:222:4"
											},
											{
												"body": {
													"nativeSrc": "5445:79:4",
													"nodeType": "YulBlock",
													"src": "5445:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5502:16:4",
																"nodeType": "YulBlock",
																"src": "5502:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5511:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5511:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5514:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5514:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5504:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5504:6:4"
																			},
																			"nativeSrc": "5504:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5504:12:4"
																		},
																		"nativeSrc": "5504:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5504:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5468:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5468:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5493:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5493:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5475:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "5475:17:4"
																				},
																				"nativeSrc": "5475:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5475:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5465:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5465:2:4"
																		},
																		"nativeSrc": "5465:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5465:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5458:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:4"
																},
																"nativeSrc": "5458:43:4",
																"nodeType": "YulFunctionCall",
																"src": "5458:43:4"
															},
															"nativeSrc": "5455:63:4",
															"nodeType": "YulIf",
															"src": "5455:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5402:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5438:5:4",
														"nodeType": "YulTypedName",
														"src": "5438:5:4",
														"type": ""
													}
												],
												"src": "5402:122:4"
											},
											{
												"body": {
													"nativeSrc": "5593:80:4",
													"nodeType": "YulBlock",
													"src": "5593:80:4",
													"statements": [
														{
															"nativeSrc": "5603:22:4",
															"nodeType": "YulAssignment",
															"src": "5603:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5618:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5618:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5612:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5612:5:4"
																},
																"nativeSrc": "5612:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5612:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5603:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5603:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5661:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5661:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5634:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "5634:26:4"
																},
																"nativeSrc": "5634:33:4",
																"nodeType": "YulFunctionCall",
																"src": "5634:33:4"
															},
															"nativeSrc": "5634:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "5634:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5530:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5571:6:4",
														"nodeType": "YulTypedName",
														"src": "5571:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5579:3:4",
														"nodeType": "YulTypedName",
														"src": "5579:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5587:5:4",
														"nodeType": "YulTypedName",
														"src": "5587:5:4",
														"type": ""
													}
												],
												"src": "5530:143:4"
											},
											{
												"body": {
													"nativeSrc": "5756:274:4",
													"nodeType": "YulBlock",
													"src": "5756:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5802:83:4",
																"nodeType": "YulBlock",
																"src": "5802:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5804:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5804:77:4"
																			},
																			"nativeSrc": "5804:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5804:79:4"
																		},
																		"nativeSrc": "5804:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5804:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5777:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5777:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5786:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5773:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5773:3:4"
																		},
																		"nativeSrc": "5773:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5773:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5798:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5769:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5769:3:4"
																},
																"nativeSrc": "5769:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5769:32:4"
															},
															"nativeSrc": "5766:119:4",
															"nodeType": "YulIf",
															"src": "5766:119:4"
														},
														{
															"nativeSrc": "5895:128:4",
															"nodeType": "YulBlock",
															"src": "5895:128:4",
															"statements": [
																{
																	"nativeSrc": "5910:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5910:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5924:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5924:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5914:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5914:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5939:74:4",
																	"nodeType": "YulAssignment",
																	"src": "5939:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5985:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5985:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5996:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5996:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5981:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5981:3:4"
																				},
																				"nativeSrc": "5981:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5981:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6005:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6005:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5949:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "5949:31:4"
																		},
																		"nativeSrc": "5949:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5949:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5939:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5939:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5679:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5726:9:4",
														"nodeType": "YulTypedName",
														"src": "5726:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5737:7:4",
														"nodeType": "YulTypedName",
														"src": "5737:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5749:6:4",
														"nodeType": "YulTypedName",
														"src": "5749:6:4",
														"type": ""
													}
												],
												"src": "5679:351:4"
											},
											{
												"body": {
													"nativeSrc": "6162:206:4",
													"nodeType": "YulBlock",
													"src": "6162:206:4",
													"statements": [
														{
															"nativeSrc": "6172:26:4",
															"nodeType": "YulAssignment",
															"src": "6172:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6184:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6195:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6180:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6180:3:4"
																},
																"nativeSrc": "6180:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6180:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6172:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6172:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6252:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6265:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6265:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6276:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6276:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6261:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:4"
																		},
																		"nativeSrc": "6261:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6261:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6208:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6208:43:4"
																},
																"nativeSrc": "6208:71:4",
																"nodeType": "YulFunctionCall",
																"src": "6208:71:4"
															},
															"nativeSrc": "6208:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "6208:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6333:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6333:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6346:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6346:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6357:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6357:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6342:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6342:3:4"
																		},
																		"nativeSrc": "6342:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6342:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6289:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6289:43:4"
																},
																"nativeSrc": "6289:72:4",
																"nodeType": "YulFunctionCall",
																"src": "6289:72:4"
															},
															"nativeSrc": "6289:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "6289:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6036:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6126:9:4",
														"nodeType": "YulTypedName",
														"src": "6126:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6138:6:4",
														"nodeType": "YulTypedName",
														"src": "6138:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6146:6:4",
														"nodeType": "YulTypedName",
														"src": "6146:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6157:4:4",
														"nodeType": "YulTypedName",
														"src": "6157:4:4",
														"type": ""
													}
												],
												"src": "6036:332:4"
											},
											{
												"body": {
													"nativeSrc": "6416:48:4",
													"nodeType": "YulBlock",
													"src": "6416:48:4",
													"statements": [
														{
															"nativeSrc": "6426:32:4",
															"nodeType": "YulAssignment",
															"src": "6426:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6451:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6451:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6444:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6444:6:4"
																		},
																		"nativeSrc": "6444:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6437:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:4"
																},
																"nativeSrc": "6437:21:4",
																"nodeType": "YulFunctionCall",
																"src": "6437:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6426:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "6426:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6374:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6398:5:4",
														"nodeType": "YulTypedName",
														"src": "6398:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6408:7:4",
														"nodeType": "YulTypedName",
														"src": "6408:7:4",
														"type": ""
													}
												],
												"src": "6374:90:4"
											},
											{
												"body": {
													"nativeSrc": "6510:76:4",
													"nodeType": "YulBlock",
													"src": "6510:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6564:16:4",
																"nodeType": "YulBlock",
																"src": "6564:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6573:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6573:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6576:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6576:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6566:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6566:6:4"
																			},
																			"nativeSrc": "6566:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6566:12:4"
																		},
																		"nativeSrc": "6566:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6566:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6533:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6533:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6555:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6555:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6540:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "6540:14:4"
																				},
																				"nativeSrc": "6540:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6540:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6530:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6530:2:4"
																		},
																		"nativeSrc": "6530:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6530:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6523:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6523:6:4"
																},
																"nativeSrc": "6523:40:4",
																"nodeType": "YulFunctionCall",
																"src": "6523:40:4"
															},
															"nativeSrc": "6520:60:4",
															"nodeType": "YulIf",
															"src": "6520:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6470:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6503:5:4",
														"nodeType": "YulTypedName",
														"src": "6503:5:4",
														"type": ""
													}
												],
												"src": "6470:116:4"
											},
											{
												"body": {
													"nativeSrc": "6652:77:4",
													"nodeType": "YulBlock",
													"src": "6652:77:4",
													"statements": [
														{
															"nativeSrc": "6662:22:4",
															"nodeType": "YulAssignment",
															"src": "6662:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6677:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6677:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6671:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6671:5:4"
																},
																"nativeSrc": "6671:13:4",
																"nodeType": "YulFunctionCall",
																"src": "6671:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6662:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6662:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6717:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6717:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6693:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "6693:23:4"
																},
																"nativeSrc": "6693:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6693:30:4"
															},
															"nativeSrc": "6693:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6693:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6592:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6630:6:4",
														"nodeType": "YulTypedName",
														"src": "6630:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6638:3:4",
														"nodeType": "YulTypedName",
														"src": "6638:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6646:5:4",
														"nodeType": "YulTypedName",
														"src": "6646:5:4",
														"type": ""
													}
												],
												"src": "6592:137:4"
											},
											{
												"body": {
													"nativeSrc": "6809:271:4",
													"nodeType": "YulBlock",
													"src": "6809:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6855:83:4",
																"nodeType": "YulBlock",
																"src": "6855:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6857:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "6857:77:4"
																			},
																			"nativeSrc": "6857:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6857:79:4"
																		},
																		"nativeSrc": "6857:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6857:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6830:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6830:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6839:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6839:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6826:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6826:3:4"
																		},
																		"nativeSrc": "6826:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6826:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6851:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6851:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6822:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6822:3:4"
																},
																"nativeSrc": "6822:32:4",
																"nodeType": "YulFunctionCall",
																"src": "6822:32:4"
															},
															"nativeSrc": "6819:119:4",
															"nodeType": "YulIf",
															"src": "6819:119:4"
														},
														{
															"nativeSrc": "6948:125:4",
															"nodeType": "YulBlock",
															"src": "6948:125:4",
															"statements": [
																{
																	"nativeSrc": "6963:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6963:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6977:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6977:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6967:6:4",
																			"nodeType": "YulTypedName",
																			"src": "6967:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6992:71:4",
																	"nodeType": "YulAssignment",
																	"src": "6992:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7035:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "7035:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7046:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "7046:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7031:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7031:3:4"
																				},
																				"nativeSrc": "7031:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7031:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7055:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "7055:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7002:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "7002:28:4"
																		},
																		"nativeSrc": "7002:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7002:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6992:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6992:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6735:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:4",
														"nodeType": "YulTypedName",
														"src": "6779:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6790:7:4",
														"nodeType": "YulTypedName",
														"src": "6790:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6802:6:4",
														"nodeType": "YulTypedName",
														"src": "6802:6:4",
														"type": ""
													}
												],
												"src": "6735:345:4"
											},
											{
												"body": {
													"nativeSrc": "7192:64:4",
													"nodeType": "YulBlock",
													"src": "7192:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7214:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7214:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7222:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7222:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7210:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7210:3:4"
																		},
																		"nativeSrc": "7210:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7210:14:4"
																	},
																	{
																		"hexValue": "4e6f74206465706c6f7965722041646472657373",
																		"kind": "string",
																		"nativeSrc": "7226:22:4",
																		"nodeType": "YulLiteral",
																		"src": "7226:22:4",
																		"type": "",
																		"value": "Not deployer Address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7203:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7203:6:4"
																},
																"nativeSrc": "7203:46:4",
																"nodeType": "YulFunctionCall",
																"src": "7203:46:4"
															},
															"nativeSrc": "7203:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "7203:46:4"
														}
													]
												},
												"name": "store_literal_in_memory_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da",
												"nativeSrc": "7086:170:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7184:6:4",
														"nodeType": "YulTypedName",
														"src": "7184:6:4",
														"type": ""
													}
												],
												"src": "7086:170:4"
											},
											{
												"body": {
													"nativeSrc": "7408:220:4",
													"nodeType": "YulBlock",
													"src": "7408:220:4",
													"statements": [
														{
															"nativeSrc": "7418:74:4",
															"nodeType": "YulAssignment",
															"src": "7418:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7484:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7484:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7489:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7489:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7425:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "7425:58:4"
																},
																"nativeSrc": "7425:67:4",
																"nodeType": "YulFunctionCall",
																"src": "7425:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7418:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7418:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7590:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7590:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da",
																	"nativeSrc": "7501:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "7501:88:4"
																},
																"nativeSrc": "7501:93:4",
																"nodeType": "YulFunctionCall",
																"src": "7501:93:4"
															},
															"nativeSrc": "7501:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "7501:93:4"
														},
														{
															"nativeSrc": "7603:19:4",
															"nodeType": "YulAssignment",
															"src": "7603:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7614:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7614:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7619:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7619:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7610:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7610:3:4"
																},
																"nativeSrc": "7610:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7610:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7603:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7603:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7262:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7396:3:4",
														"nodeType": "YulTypedName",
														"src": "7396:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7404:3:4",
														"nodeType": "YulTypedName",
														"src": "7404:3:4",
														"type": ""
													}
												],
												"src": "7262:366:4"
											},
											{
												"body": {
													"nativeSrc": "7805:248:4",
													"nodeType": "YulBlock",
													"src": "7805:248:4",
													"statements": [
														{
															"nativeSrc": "7815:26:4",
															"nodeType": "YulAssignment",
															"src": "7815:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7827:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7827:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7838:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7838:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7823:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7823:3:4"
																},
																"nativeSrc": "7823:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7823:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7815:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7815:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7862:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7862:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7873:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7873:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7858:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7858:3:4"
																		},
																		"nativeSrc": "7858:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7858:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7881:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7881:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7887:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7887:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7877:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7877:3:4"
																		},
																		"nativeSrc": "7877:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7877:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7851:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:4"
																},
																"nativeSrc": "7851:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7851:47:4"
															},
															"nativeSrc": "7851:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7851:47:4"
														},
														{
															"nativeSrc": "7907:139:4",
															"nodeType": "YulAssignment",
															"src": "7907:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8041:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "8041:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7915:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7915:124:4"
																},
																"nativeSrc": "7915:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7915:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7907:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7907:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7634:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7785:9:4",
														"nodeType": "YulTypedName",
														"src": "7785:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7800:4:4",
														"nodeType": "YulTypedName",
														"src": "7800:4:4",
														"type": ""
													}
												],
												"src": "7634:419:4"
											},
											{
												"body": {
													"nativeSrc": "8087:152:4",
													"nodeType": "YulBlock",
													"src": "8087:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8104:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8104:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8107:77:4",
																		"nodeType": "YulLiteral",
																		"src": "8107:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8097:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8097:6:4"
																},
																"nativeSrc": "8097:88:4",
																"nodeType": "YulFunctionCall",
																"src": "8097:88:4"
															},
															"nativeSrc": "8097:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "8097:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8201:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8201:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8204:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8204:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8194:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:4"
																},
																"nativeSrc": "8194:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8194:15:4"
															},
															"nativeSrc": "8194:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8194:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8225:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8225:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8228:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8228:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8218:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8218:6:4"
																},
																"nativeSrc": "8218:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8218:15:4"
															},
															"nativeSrc": "8218:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8218:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8059:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "8059:180:4"
											},
											{
												"body": {
													"nativeSrc": "8293:362:4",
													"nodeType": "YulBlock",
													"src": "8293:362:4",
													"statements": [
														{
															"nativeSrc": "8303:25:4",
															"nodeType": "YulAssignment",
															"src": "8303:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8326:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8326:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8308:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8308:17:4"
																},
																"nativeSrc": "8308:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8308:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8303:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8303:1:4"
																}
															]
														},
														{
															"nativeSrc": "8337:25:4",
															"nodeType": "YulAssignment",
															"src": "8337:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8360:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8360:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8342:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8342:17:4"
																},
																"nativeSrc": "8342:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8342:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8337:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8337:1:4"
																}
															]
														},
														{
															"nativeSrc": "8371:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8371:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8394:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8394:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8397:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8397:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8390:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8390:3:4"
																},
																"nativeSrc": "8390:9:4",
																"nodeType": "YulFunctionCall",
																"src": "8390:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8375:11:4",
																	"nodeType": "YulTypedName",
																	"src": "8375:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8408:41:4",
															"nodeType": "YulAssignment",
															"src": "8408:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8437:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "8437:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8419:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8419:17:4"
																},
																"nativeSrc": "8419:30:4",
																"nodeType": "YulFunctionCall",
																"src": "8419:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8408:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "8408:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8626:22:4",
																"nodeType": "YulBlock",
																"src": "8626:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8628:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "8628:16:4"
																			},
																			"nativeSrc": "8628:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8628:18:4"
																		},
																		"nativeSrc": "8628:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8628:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8559:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "8559:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8552:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "8552:6:4"
																				},
																				"nativeSrc": "8552:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "8552:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8582:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "8582:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8589:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "8589:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8598:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "8598:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8585:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "8585:3:4"
																						},
																						"nativeSrc": "8585:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "8585:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8579:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "8579:2:4"
																				},
																				"nativeSrc": "8579:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "8579:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8532:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "8532:2:4"
																		},
																		"nativeSrc": "8532:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8532:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8512:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8512:6:4"
																},
																"nativeSrc": "8512:113:4",
																"nodeType": "YulFunctionCall",
																"src": "8512:113:4"
															},
															"nativeSrc": "8509:139:4",
															"nodeType": "YulIf",
															"src": "8509:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8245:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8276:1:4",
														"nodeType": "YulTypedName",
														"src": "8276:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8279:1:4",
														"nodeType": "YulTypedName",
														"src": "8279:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8285:7:4",
														"nodeType": "YulTypedName",
														"src": "8285:7:4",
														"type": ""
													}
												],
												"src": "8245:410:4"
											},
											{
												"body": {
													"nativeSrc": "8689:152:4",
													"nodeType": "YulBlock",
													"src": "8689:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8706:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8706:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8709:77:4",
																		"nodeType": "YulLiteral",
																		"src": "8709:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8699:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:4"
																},
																"nativeSrc": "8699:88:4",
																"nodeType": "YulFunctionCall",
																"src": "8699:88:4"
															},
															"nativeSrc": "8699:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "8699:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8803:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8803:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8806:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8806:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8796:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:4"
																},
																"nativeSrc": "8796:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8796:15:4"
															},
															"nativeSrc": "8796:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8796:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8827:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8827:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8830:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8830:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8820:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8820:6:4"
																},
																"nativeSrc": "8820:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8820:15:4"
															},
															"nativeSrc": "8820:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8820:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8661:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "8661:180:4"
											},
											{
												"body": {
													"nativeSrc": "8889:143:4",
													"nodeType": "YulBlock",
													"src": "8889:143:4",
													"statements": [
														{
															"nativeSrc": "8899:25:4",
															"nodeType": "YulAssignment",
															"src": "8899:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8922:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8922:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8904:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8904:17:4"
																},
																"nativeSrc": "8904:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8904:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8899:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8899:1:4"
																}
															]
														},
														{
															"nativeSrc": "8933:25:4",
															"nodeType": "YulAssignment",
															"src": "8933:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8956:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8956:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8938:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8938:17:4"
																},
																"nativeSrc": "8938:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8938:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8933:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8933:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8980:22:4",
																"nodeType": "YulBlock",
																"src": "8980:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8982:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "8982:16:4"
																			},
																			"nativeSrc": "8982:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8982:18:4"
																		},
																		"nativeSrc": "8982:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8982:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8977:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8977:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8970:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8970:6:4"
																},
																"nativeSrc": "8970:9:4",
																"nodeType": "YulFunctionCall",
																"src": "8970:9:4"
															},
															"nativeSrc": "8967:35:4",
															"nodeType": "YulIf",
															"src": "8967:35:4"
														},
														{
															"nativeSrc": "9012:14:4",
															"nodeType": "YulAssignment",
															"src": "9012:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9021:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9021:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9024:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "9024:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9017:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9017:3:4"
																},
																"nativeSrc": "9017:9:4",
																"nodeType": "YulFunctionCall",
																"src": "9017:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9012:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "9012:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8847:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8878:1:4",
														"nodeType": "YulTypedName",
														"src": "8878:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8881:1:4",
														"nodeType": "YulTypedName",
														"src": "8881:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8887:1:4",
														"nodeType": "YulTypedName",
														"src": "8887:1:4",
														"type": ""
													}
												],
												"src": "8847:185:4"
											},
											{
												"body": {
													"nativeSrc": "9066:152:4",
													"nodeType": "YulBlock",
													"src": "9066:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9083:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9083:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9086:77:4",
																		"nodeType": "YulLiteral",
																		"src": "9086:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9076:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9076:6:4"
																},
																"nativeSrc": "9076:88:4",
																"nodeType": "YulFunctionCall",
																"src": "9076:88:4"
															},
															"nativeSrc": "9076:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "9076:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9180:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9180:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9183:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9183:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9173:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9173:6:4"
																},
																"nativeSrc": "9173:15:4",
																"nodeType": "YulFunctionCall",
																"src": "9173:15:4"
															},
															"nativeSrc": "9173:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "9173:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9204:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9204:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9207:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9197:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:4"
																},
																"nativeSrc": "9197:15:4",
																"nodeType": "YulFunctionCall",
																"src": "9197:15:4"
															},
															"nativeSrc": "9197:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "9197:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9038:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "9038:180:4"
											},
											{
												"body": {
													"nativeSrc": "9296:32:4",
													"nodeType": "YulBlock",
													"src": "9296:32:4",
													"statements": [
														{
															"nativeSrc": "9307:14:4",
															"nodeType": "YulAssignment",
															"src": "9307:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "9317:4:4",
																"nodeType": "YulLiteral",
																"src": "9317:4:4",
																"type": "",
																"value": "0x03"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9307:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9307:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "9224:104:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9279:5:4",
														"nodeType": "YulTypedName",
														"src": "9279:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9289:6:4",
														"nodeType": "YulTypedName",
														"src": "9289:6:4",
														"type": ""
													}
												],
												"src": "9224:104:4"
											},
											{
												"body": {
													"nativeSrc": "9443:34:4",
													"nodeType": "YulBlock",
													"src": "9443:34:4",
													"statements": [
														{
															"nativeSrc": "9453:18:4",
															"nodeType": "YulAssignment",
															"src": "9453:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "9468:3:4",
																"nodeType": "YulIdentifier",
																"src": "9468:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9453:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9453:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack",
												"nativeSrc": "9334:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9415:3:4",
														"nodeType": "YulTypedName",
														"src": "9415:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9420:6:4",
														"nodeType": "YulTypedName",
														"src": "9420:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9431:11:4",
														"nodeType": "YulTypedName",
														"src": "9431:11:4",
														"type": ""
													}
												],
												"src": "9334:143:4"
											},
											{
												"body": {
													"nativeSrc": "9553:28:4",
													"nodeType": "YulBlock",
													"src": "9553:28:4",
													"statements": [
														{
															"nativeSrc": "9563:11:4",
															"nodeType": "YulAssignment",
															"src": "9563:11:4",
															"value": {
																"name": "ptr",
																"nativeSrc": "9571:3:4",
																"nodeType": "YulIdentifier",
																"src": "9571:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9563:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9563:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "9483:98:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9540:3:4",
														"nodeType": "YulTypedName",
														"src": "9540:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9548:4:4",
														"nodeType": "YulTypedName",
														"src": "9548:4:4",
														"type": ""
													}
												],
												"src": "9483:98:4"
											},
											{
												"body": {
													"nativeSrc": "9642:53:4",
													"nodeType": "YulBlock",
													"src": "9642:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9659:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9659:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9682:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9682:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9664:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "9664:17:4"
																		},
																		"nativeSrc": "9664:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9664:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9652:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:4"
																},
																"nativeSrc": "9652:37:4",
																"nodeType": "YulFunctionCall",
																"src": "9652:37:4"
															},
															"nativeSrc": "9652:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "9652:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "9587:108:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9630:5:4",
														"nodeType": "YulTypedName",
														"src": "9630:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9637:3:4",
														"nodeType": "YulTypedName",
														"src": "9637:3:4",
														"type": ""
													}
												],
												"src": "9587:108:4"
											},
											{
												"body": {
													"nativeSrc": "9781:99:4",
													"nodeType": "YulBlock",
													"src": "9781:99:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9825:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "9825:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9833:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9833:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "9791:33:4",
																	"nodeType": "YulIdentifier",
																	"src": "9791:33:4"
																},
																"nativeSrc": "9791:46:4",
																"nodeType": "YulFunctionCall",
																"src": "9791:46:4"
															},
															"nativeSrc": "9791:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "9791:46:4"
														},
														{
															"nativeSrc": "9846:28:4",
															"nodeType": "YulAssignment",
															"src": "9846:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9864:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9864:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9869:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9869:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9860:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9860:3:4"
																},
																"nativeSrc": "9860:14:4",
																"nodeType": "YulFunctionCall",
																"src": "9860:14:4"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "9846:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9846:10:4"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "9701:179:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "9754:6:4",
														"nodeType": "YulTypedName",
														"src": "9754:6:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9762:3:4",
														"nodeType": "YulTypedName",
														"src": "9762:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "9770:10:4",
														"nodeType": "YulTypedName",
														"src": "9770:10:4",
														"type": ""
													}
												],
												"src": "9701:179:4"
											},
											{
												"body": {
													"nativeSrc": "9959:38:4",
													"nodeType": "YulBlock",
													"src": "9959:38:4",
													"statements": [
														{
															"nativeSrc": "9969:22:4",
															"nodeType": "YulAssignment",
															"src": "9969:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9981:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9981:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9986:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9986:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9977:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9977:3:4"
																},
																"nativeSrc": "9977:14:4",
																"nodeType": "YulFunctionCall",
																"src": "9977:14:4"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "9969:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9969:4:4"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$3_memory_ptr",
												"nativeSrc": "9886:111:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9946:3:4",
														"nodeType": "YulTypedName",
														"src": "9946:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "9954:4:4",
														"nodeType": "YulTypedName",
														"src": "9954:4:4",
														"type": ""
													}
												],
												"src": "9886:111:4"
											},
											{
												"body": {
													"nativeSrc": "10147:582:4",
													"nodeType": "YulBlock",
													"src": "10147:582:4",
													"statements": [
														{
															"nativeSrc": "10157:66:4",
															"nodeType": "YulVariableDeclaration",
															"src": "10157:66:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10217:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "10217:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$3_memory_ptr",
																	"nativeSrc": "10171:45:4",
																	"nodeType": "YulIdentifier",
																	"src": "10171:45:4"
																},
																"nativeSrc": "10171:52:4",
																"nodeType": "YulFunctionCall",
																"src": "10171:52:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10161:6:4",
																	"nodeType": "YulTypedName",
																	"src": "10161:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10232:91:4",
															"nodeType": "YulAssignment",
															"src": "10232:91:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10311:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10311:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10316:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "10316:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack",
																	"nativeSrc": "10239:71:4",
																	"nodeType": "YulIdentifier",
																	"src": "10239:71:4"
																},
																"nativeSrc": "10239:84:4",
																"nodeType": "YulFunctionCall",
																"src": "10239:84:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10232:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10232:3:4"
																}
															]
														},
														{
															"nativeSrc": "10332:69:4",
															"nodeType": "YulVariableDeclaration",
															"src": "10332:69:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10395:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "10395:5:4"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$3_memory_ptr",
																	"nativeSrc": "10347:47:4",
																	"nodeType": "YulIdentifier",
																	"src": "10347:47:4"
																},
																"nativeSrc": "10347:54:4",
																"nodeType": "YulFunctionCall",
																"src": "10347:54:4"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "10336:7:4",
																	"nodeType": "YulTypedName",
																	"src": "10336:7:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10410:21:4",
															"nodeType": "YulVariableDeclaration",
															"src": "10410:21:4",
															"value": {
																"name": "baseRef",
																"nativeSrc": "10424:7:4",
																"nodeType": "YulIdentifier",
																"src": "10424:7:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "10414:6:4",
																	"nodeType": "YulTypedName",
																	"src": "10414:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10500:222:4",
																"nodeType": "YulBlock",
																"src": "10500:222:4",
																"statements": [
																	{
																		"nativeSrc": "10514:34:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10514:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10541:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "10541:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "10535:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "10535:5:4"
																			},
																			"nativeSrc": "10535:13:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10535:13:4"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "10518:13:4",
																				"nodeType": "YulTypedName",
																				"src": "10518:13:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10561:70:4",
																		"nodeType": "YulAssignment",
																		"src": "10561:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "10612:13:4",
																					"nodeType": "YulIdentifier",
																					"src": "10612:13:4"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "10627:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "10627:3:4"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "10568:43:4",
																				"nodeType": "YulIdentifier",
																				"src": "10568:43:4"
																			},
																			"nativeSrc": "10568:63:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10568:63:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "10561:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "10561:3:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10644:68:4",
																		"nodeType": "YulAssignment",
																		"src": "10644:68:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10705:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "10705:6:4"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$3_memory_ptr",
																				"nativeSrc": "10654:50:4",
																				"nodeType": "YulIdentifier",
																				"src": "10654:50:4"
																			},
																			"nativeSrc": "10654:58:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10654:58:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "10644:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10644:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10462:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10462:1:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10465:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "10465:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10459:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "10459:2:4"
																},
																"nativeSrc": "10459:13:4",
																"nodeType": "YulFunctionCall",
																"src": "10459:13:4"
															},
															"nativeSrc": "10440:282:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10473:18:4",
																"nodeType": "YulBlock",
																"src": "10473:18:4",
																"statements": [
																	{
																		"nativeSrc": "10475:14:4",
																		"nodeType": "YulAssignment",
																		"src": "10475:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10484:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "10484:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10487:1:4",
																					"nodeType": "YulLiteral",
																					"src": "10487:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10480:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "10480:3:4"
																			},
																			"nativeSrc": "10480:9:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10480:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10475:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "10475:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10444:14:4",
																"nodeType": "YulBlock",
																"src": "10444:14:4",
																"statements": [
																	{
																		"nativeSrc": "10446:10:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10446:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10455:1:4",
																			"nodeType": "YulLiteral",
																			"src": "10455:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "10450:1:4",
																				"nodeType": "YulTypedName",
																				"src": "10450:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10440:282:4"
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack",
												"nativeSrc": "10035:694:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10134:5:4",
														"nodeType": "YulTypedName",
														"src": "10134:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10141:3:4",
														"nodeType": "YulTypedName",
														"src": "10141:3:4",
														"type": ""
													}
												],
												"src": "10035:694:4"
											},
											{
												"body": {
													"nativeSrc": "10807:32:4",
													"nodeType": "YulBlock",
													"src": "10807:32:4",
													"statements": [
														{
															"nativeSrc": "10818:14:4",
															"nodeType": "YulAssignment",
															"src": "10818:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "10828:4:4",
																"nodeType": "YulLiteral",
																"src": "10828:4:4",
																"type": "",
																"value": "0x03"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10818:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10818:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$3_memory_ptr",
												"nativeSrc": "10735:104:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10790:5:4",
														"nodeType": "YulTypedName",
														"src": "10790:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10800:6:4",
														"nodeType": "YulTypedName",
														"src": "10800:6:4",
														"type": ""
													}
												],
												"src": "10735:104:4"
											},
											{
												"body": {
													"nativeSrc": "10954:34:4",
													"nodeType": "YulBlock",
													"src": "10954:34:4",
													"statements": [
														{
															"nativeSrc": "10964:18:4",
															"nodeType": "YulAssignment",
															"src": "10964:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "10979:3:4",
																"nodeType": "YulIdentifier",
																"src": "10979:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10964:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "10964:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack",
												"nativeSrc": "10845:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10926:3:4",
														"nodeType": "YulTypedName",
														"src": "10926:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10931:6:4",
														"nodeType": "YulTypedName",
														"src": "10931:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10942:11:4",
														"nodeType": "YulTypedName",
														"src": "10942:11:4",
														"type": ""
													}
												],
												"src": "10845:143:4"
											},
											{
												"body": {
													"nativeSrc": "11064:28:4",
													"nodeType": "YulBlock",
													"src": "11064:28:4",
													"statements": [
														{
															"nativeSrc": "11074:11:4",
															"nodeType": "YulAssignment",
															"src": "11074:11:4",
															"value": {
																"name": "ptr",
																"nativeSrc": "11082:3:4",
																"nodeType": "YulIdentifier",
																"src": "11082:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11074:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11074:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$3_memory_ptr",
												"nativeSrc": "10994:98:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11051:3:4",
														"nodeType": "YulTypedName",
														"src": "11051:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11059:4:4",
														"nodeType": "YulTypedName",
														"src": "11059:4:4",
														"type": ""
													}
												],
												"src": "10994:98:4"
											},
											{
												"body": {
													"nativeSrc": "11153:53:4",
													"nodeType": "YulBlock",
													"src": "11153:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11170:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11170:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11193:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "11193:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11175:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "11175:17:4"
																		},
																		"nativeSrc": "11175:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11175:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11163:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11163:6:4"
																},
																"nativeSrc": "11163:37:4",
																"nodeType": "YulFunctionCall",
																"src": "11163:37:4"
															},
															"nativeSrc": "11163:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "11163:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "11098:108:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11141:5:4",
														"nodeType": "YulTypedName",
														"src": "11141:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11148:3:4",
														"nodeType": "YulTypedName",
														"src": "11148:3:4",
														"type": ""
													}
												],
												"src": "11098:108:4"
											},
											{
												"body": {
													"nativeSrc": "11292:99:4",
													"nodeType": "YulBlock",
													"src": "11292:99:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11336:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11336:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11344:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11344:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "11302:33:4",
																	"nodeType": "YulIdentifier",
																	"src": "11302:33:4"
																},
																"nativeSrc": "11302:46:4",
																"nodeType": "YulFunctionCall",
																"src": "11302:46:4"
															},
															"nativeSrc": "11302:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "11302:46:4"
														},
														{
															"nativeSrc": "11357:28:4",
															"nodeType": "YulAssignment",
															"src": "11357:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11375:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11375:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11380:4:4",
																		"nodeType": "YulLiteral",
																		"src": "11380:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11371:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11371:3:4"
																},
																"nativeSrc": "11371:14:4",
																"nodeType": "YulFunctionCall",
																"src": "11371:14:4"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "11357:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "11357:10:4"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "11212:179:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "11265:6:4",
														"nodeType": "YulTypedName",
														"src": "11265:6:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11273:3:4",
														"nodeType": "YulTypedName",
														"src": "11273:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "11281:10:4",
														"nodeType": "YulTypedName",
														"src": "11281:10:4",
														"type": ""
													}
												],
												"src": "11212:179:4"
											},
											{
												"body": {
													"nativeSrc": "11470:38:4",
													"nodeType": "YulBlock",
													"src": "11470:38:4",
													"statements": [
														{
															"nativeSrc": "11480:22:4",
															"nodeType": "YulAssignment",
															"src": "11480:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11492:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11492:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11497:4:4",
																		"nodeType": "YulLiteral",
																		"src": "11497:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11488:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11488:3:4"
																},
																"nativeSrc": "11488:14:4",
																"nodeType": "YulFunctionCall",
																"src": "11488:14:4"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "11480:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11480:4:4"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$3_memory_ptr",
												"nativeSrc": "11397:111:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11457:3:4",
														"nodeType": "YulTypedName",
														"src": "11457:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "11465:4:4",
														"nodeType": "YulTypedName",
														"src": "11465:4:4",
														"type": ""
													}
												],
												"src": "11397:111:4"
											},
											{
												"body": {
													"nativeSrc": "11658:582:4",
													"nodeType": "YulBlock",
													"src": "11658:582:4",
													"statements": [
														{
															"nativeSrc": "11668:66:4",
															"nodeType": "YulVariableDeclaration",
															"src": "11668:66:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11728:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "11728:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$3_memory_ptr",
																	"nativeSrc": "11682:45:4",
																	"nodeType": "YulIdentifier",
																	"src": "11682:45:4"
																},
																"nativeSrc": "11682:52:4",
																"nodeType": "YulFunctionCall",
																"src": "11682:52:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11672:6:4",
																	"nodeType": "YulTypedName",
																	"src": "11672:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11743:91:4",
															"nodeType": "YulAssignment",
															"src": "11743:91:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11822:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11822:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11827:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11827:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack",
																	"nativeSrc": "11750:71:4",
																	"nodeType": "YulIdentifier",
																	"src": "11750:71:4"
																},
																"nativeSrc": "11750:84:4",
																"nodeType": "YulFunctionCall",
																"src": "11750:84:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11743:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11743:3:4"
																}
															]
														},
														{
															"nativeSrc": "11843:69:4",
															"nodeType": "YulVariableDeclaration",
															"src": "11843:69:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11906:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "11906:5:4"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$3_memory_ptr",
																	"nativeSrc": "11858:47:4",
																	"nodeType": "YulIdentifier",
																	"src": "11858:47:4"
																},
																"nativeSrc": "11858:54:4",
																"nodeType": "YulFunctionCall",
																"src": "11858:54:4"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "11847:7:4",
																	"nodeType": "YulTypedName",
																	"src": "11847:7:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11921:21:4",
															"nodeType": "YulVariableDeclaration",
															"src": "11921:21:4",
															"value": {
																"name": "baseRef",
																"nativeSrc": "11935:7:4",
																"nodeType": "YulIdentifier",
																"src": "11935:7:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "11925:6:4",
																	"nodeType": "YulTypedName",
																	"src": "11925:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12011:222:4",
																"nodeType": "YulBlock",
																"src": "12011:222:4",
																"statements": [
																	{
																		"nativeSrc": "12025:34:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12025:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12052:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "12052:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12046:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "12046:5:4"
																			},
																			"nativeSrc": "12046:13:4",
																			"nodeType": "YulFunctionCall",
																			"src": "12046:13:4"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "12029:13:4",
																				"nodeType": "YulTypedName",
																				"src": "12029:13:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12072:70:4",
																		"nodeType": "YulAssignment",
																		"src": "12072:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "12123:13:4",
																					"nodeType": "YulIdentifier",
																					"src": "12123:13:4"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "12138:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "12138:3:4"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "12079:43:4",
																				"nodeType": "YulIdentifier",
																				"src": "12079:43:4"
																			},
																			"nativeSrc": "12079:63:4",
																			"nodeType": "YulFunctionCall",
																			"src": "12079:63:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "12072:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "12072:3:4"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12155:68:4",
																		"nodeType": "YulAssignment",
																		"src": "12155:68:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12216:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "12216:6:4"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$3_memory_ptr",
																				"nativeSrc": "12165:50:4",
																				"nodeType": "YulIdentifier",
																				"src": "12165:50:4"
																			},
																			"nativeSrc": "12165:58:4",
																			"nodeType": "YulFunctionCall",
																			"src": "12165:58:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "12155:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "12155:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "11973:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "11973:1:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11976:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11976:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11970:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "11970:2:4"
																},
																"nativeSrc": "11970:13:4",
																"nodeType": "YulFunctionCall",
																"src": "11970:13:4"
															},
															"nativeSrc": "11951:282:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11984:18:4",
																"nodeType": "YulBlock",
																"src": "11984:18:4",
																"statements": [
																	{
																		"nativeSrc": "11986:14:4",
																		"nodeType": "YulAssignment",
																		"src": "11986:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "11995:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "11995:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11998:1:4",
																					"nodeType": "YulLiteral",
																					"src": "11998:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11991:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "11991:3:4"
																			},
																			"nativeSrc": "11991:9:4",
																			"nodeType": "YulFunctionCall",
																			"src": "11991:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "11986:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "11986:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11955:14:4",
																"nodeType": "YulBlock",
																"src": "11955:14:4",
																"statements": [
																	{
																		"nativeSrc": "11957:10:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11957:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11966:1:4",
																			"nodeType": "YulLiteral",
																			"src": "11966:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "11961:1:4",
																				"nodeType": "YulTypedName",
																				"src": "11961:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11951:282:4"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack",
												"nativeSrc": "11546:694:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11645:5:4",
														"nodeType": "YulTypedName",
														"src": "11645:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11652:3:4",
														"nodeType": "YulTypedName",
														"src": "11652:3:4",
														"type": ""
													}
												],
												"src": "11546:694:4"
											},
											{
												"body": {
													"nativeSrc": "12464:299:4",
													"nodeType": "YulBlock",
													"src": "12464:299:4",
													"statements": [
														{
															"nativeSrc": "12474:27:4",
															"nodeType": "YulAssignment",
															"src": "12474:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12486:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "12486:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12497:3:4",
																		"nodeType": "YulLiteral",
																		"src": "12497:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12482:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12482:3:4"
																},
																"nativeSrc": "12482:19:4",
																"nodeType": "YulFunctionCall",
																"src": "12482:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12474:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "12474:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12601:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "12601:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12614:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12614:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12625:1:4",
																				"nodeType": "YulLiteral",
																				"src": "12625:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12610:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:4"
																		},
																		"nativeSrc": "12610:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12610:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack",
																	"nativeSrc": "12511:89:4",
																	"nodeType": "YulIdentifier",
																	"src": "12511:89:4"
																},
																"nativeSrc": "12511:117:4",
																"nodeType": "YulFunctionCall",
																"src": "12511:117:4"
															},
															"nativeSrc": "12511:117:4",
															"nodeType": "YulExpressionStatement",
															"src": "12511:117:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12728:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "12728:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12741:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12741:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12752:2:4",
																				"nodeType": "YulLiteral",
																				"src": "12752:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12737:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12737:3:4"
																		},
																		"nativeSrc": "12737:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12737:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack",
																	"nativeSrc": "12638:89:4",
																	"nodeType": "YulIdentifier",
																	"src": "12638:89:4"
																},
																"nativeSrc": "12638:118:4",
																"nodeType": "YulFunctionCall",
																"src": "12638:118:4"
															},
															"nativeSrc": "12638:118:4",
															"nodeType": "YulExpressionStatement",
															"src": "12638:118:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_address_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed",
												"nativeSrc": "12246:517:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12428:9:4",
														"nodeType": "YulTypedName",
														"src": "12428:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12440:6:4",
														"nodeType": "YulTypedName",
														"src": "12440:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12448:6:4",
														"nodeType": "YulTypedName",
														"src": "12448:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12459:4:4",
														"nodeType": "YulTypedName",
														"src": "12459:4:4",
														"type": ""
													}
												],
												"src": "12246:517:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[3]\n    function abi_decode_available_length_t_array$_t_address_$3_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$3_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[3]\n    function abi_decode_t_array$_t_address_$3_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_address_$3_memory_ptr(offset, length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$3_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_address_$3_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin wallet!\")\n\n    }\n\n    function abi_encode_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not deployer Address\")\n\n    }\n\n    function abi_encode_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_array$_t_address_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_address_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[3] -> address[3]\n    function abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_address_$3_memory_ptr_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_array$_t_address_$3_memory_ptr_to_t_array$_t_address_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value1,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"551": [
									{
										"length": 32,
										"start": 137
									},
									{
										"length": 32,
										"start": 494
									}
								],
								"553": [
									{
										"length": 32,
										"start": 280
									},
									{
										"length": 32,
										"start": 434
									},
									{
										"length": 32,
										"start": 626
									},
									{
										"length": 32,
										"start": 926
									},
									{
										"length": 32,
										"start": 1278
									},
									{
										"length": 32,
										"start": 1494
									}
								],
								"555": [
									{
										"length": 32,
										"start": 1554
									}
								],
								"557": [
									{
										"length": 32,
										"start": 783
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806390decdae14610043578063b321e2271461004d578063fe272fd91461006b575b5f80fd5b61004b610087565b005b61005561026f565b60405161006291906106e7565b60405180910390f35b610085600480360381019061008091906108a5565b61030d565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010c9061092a565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161016f9190610957565b602060405180830381865afa15801561018a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ae919061099a565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161022b9291906109c5565b6020604051808303815f875af1158015610247573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026b9190610a21565b5050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102c99190610957565b602060405180830381865afa1580156102e4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610308919061099a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039290610a96565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103f59190610957565b602060405180830381865afa158015610410573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610434919061099a565b90505f810361046f576040517f786e0a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6040518060600160405280606484603061048a9190610ae1565b6104949190610b4f565b8152602001606484601d6104a89190610ae1565b6104b29190610b4f565b815260200160648460136104c69190610ae1565b6104d09190610b4f565b81525090505f60648360046104e59190610ae1565b6104ef9190610b4f565b90505f5b60038110156105d3577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86836003811061054b5761054a610b7f565b5b602002015185846003811061056357610562610b7f565b5b60200201516040518363ffffffff1660e01b81526004016105859291906109c5565b6020604051808303815f875af11580156105a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c59190610a21565b5080806001019150506104f3565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161064f9291906109c5565b6020604051808303815f875af115801561066b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068f9190610a21565b507f6b6ef27261dfd975a881981cb28adc6afe7963673c859bce73d79e0e09be34b084836040516106c1929190610cf6565b60405180910390a150505050565b5f819050919050565b6106e1816106cf565b82525050565b5f6020820190506106fa5f8301846106d8565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61075782610711565b810181811067ffffffffffffffff8211171561077657610775610721565b5b80604052505050565b5f610788610700565b9050610794828261074e565b919050565b5f67ffffffffffffffff8211156107b3576107b2610721565b5b602082029050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107eb826107c2565b9050919050565b6107fb816107e1565b8114610805575f80fd5b50565b5f81359050610816816107f2565b92915050565b5f61082e61082984610799565b61077f565b90508060208402830185811115610848576108476107be565b5b835b81811015610871578061085d8882610808565b84526020840193505060208101905061084a565b5050509392505050565b5f82601f83011261088f5761088e61070d565b5b600361089c84828561081c565b91505092915050565b5f606082840312156108ba576108b9610709565b5b5f6108c78482850161087b565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c792061646d696e2077616c6c65742100000000000000000000000000005f82015250565b5f6109146012836108d0565b915061091f826108e0565b602082019050919050565b5f6020820190508181035f83015261094181610908565b9050919050565b610951816107e1565b82525050565b5f60208201905061096a5f830184610948565b92915050565b610979816106cf565b8114610983575f80fd5b50565b5f8151905061099481610970565b92915050565b5f602082840312156109af576109ae610709565b5b5f6109bc84828501610986565b91505092915050565b5f6040820190506109d85f830185610948565b6109e560208301846106d8565b9392505050565b5f8115159050919050565b610a00816109ec565b8114610a0a575f80fd5b50565b5f81519050610a1b816109f7565b92915050565b5f60208284031215610a3657610a35610709565b5b5f610a4384828501610a0d565b91505092915050565b7f4e6f74206465706c6f79657220416464726573730000000000000000000000005f82015250565b5f610a806014836108d0565b9150610a8b82610a4c565b602082019050919050565b5f6020820190508181035f830152610aad81610a74565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610aeb826106cf565b9150610af6836106cf565b9250828202610b04816106cf565b91508282048414831517610b1b57610b1a610ab4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b59826106cf565b9150610b64836106cf565b925082610b7457610b73610b22565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60039050919050565b5f81905092915050565b5f819050919050565b610bd2816107e1565b82525050565b5f610be38383610bc9565b60208301905092915050565b5f602082019050919050565b610c0481610bac565b610c0e8184610bb6565b9250610c1982610bc0565b805f5b83811015610c49578151610c308782610bd8565b9650610c3b83610bef565b925050600181019050610c1c565b505050505050565b5f60039050919050565b5f81905092915050565b5f819050919050565b610c77816106cf565b82525050565b5f610c888383610c6e565b60208301905092915050565b5f602082019050919050565b610ca981610c51565b610cb38184610c5b565b9250610cbe82610c65565b805f5b83811015610cee578151610cd58782610c7d565b9650610ce083610c94565b925050600181019050610cc1565b505050505050565b5f60c082019050610d095f830185610bfb565b610d166060830184610ca0565b939250505056fea2646970667358221220e5016b3b14d5d46558ebbe1b181e2023f85420eee324bbe4db654f8c5870306864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90DECDAE EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xB321E227 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xFE272FD9 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C SWAP1 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP3 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x247 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x392 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x410 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH32 0x786E0A9900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 DUP5 PUSH1 0x30 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x494 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP5 PUSH1 0x1D PUSH2 0x4A8 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP5 PUSH1 0x13 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH1 0x64 DUP4 PUSH1 0x4 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x5D3 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x54B JUMPI PUSH2 0x54A PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x563 JUMPI PUSH2 0x562 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x585 SWAP3 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4F3 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP3 SWAP2 SWAP1 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68F SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST POP PUSH32 0x6B6EF27261DFD975A881981CB28ADC6AFE7963673C859BCE73D79E0E09BE34B0 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6C1 SWAP3 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E1 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6FA PUSH0 DUP4 ADD DUP5 PUSH2 0x6D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x757 DUP3 PUSH2 0x711 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x776 JUMPI PUSH2 0x775 PUSH2 0x721 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x788 PUSH2 0x700 JUMP JUMPDEST SWAP1 POP PUSH2 0x794 DUP3 DUP3 PUSH2 0x74E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7B3 JUMPI PUSH2 0x7B2 PUSH2 0x721 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7EB DUP3 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FB DUP2 PUSH2 0x7E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x805 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x816 DUP2 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x82E PUSH2 0x829 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH2 0x847 PUSH2 0x7BE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x871 JUMPI DUP1 PUSH2 0x85D DUP9 DUP3 PUSH2 0x808 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x84A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x88F JUMPI PUSH2 0x88E PUSH2 0x70D JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH2 0x89C DUP5 DUP3 DUP6 PUSH2 0x81C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8BA JUMPI PUSH2 0x8B9 PUSH2 0x709 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8C7 DUP5 DUP3 DUP6 ADD PUSH2 0x87B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2077616C6C6574210000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x914 PUSH1 0x12 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x91F DUP3 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x941 DUP2 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x951 DUP2 PUSH2 0x7E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x96A PUSH0 DUP4 ADD DUP5 PUSH2 0x948 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x979 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP2 EQ PUSH2 0x983 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x994 DUP2 PUSH2 0x970 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AE PUSH2 0x709 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9BC DUP5 DUP3 DUP6 ADD PUSH2 0x986 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9D8 PUSH0 DUP4 ADD DUP6 PUSH2 0x948 JUMP JUMPDEST PUSH2 0x9E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA00 DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP2 EQ PUSH2 0xA0A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA1B DUP2 PUSH2 0x9F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x709 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA43 DUP5 DUP3 DUP6 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206465706C6F7965722041646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA80 PUSH1 0x14 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP PUSH2 0xA8B DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAAD DUP2 PUSH2 0xA74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAEB DUP3 PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP PUSH2 0xAF6 DUP4 PUSH2 0x6CF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB04 DUP2 PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0xAB4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP PUSH2 0xB64 DUP4 PUSH2 0x6CF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0xB22 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x7E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBE3 DUP4 DUP4 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC04 DUP2 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0xC0E DUP2 DUP5 PUSH2 0xBB6 JUMP JUMPDEST SWAP3 POP PUSH2 0xC19 DUP3 PUSH2 0xBC0 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC49 JUMPI DUP2 MLOAD PUSH2 0xC30 DUP8 DUP3 PUSH2 0xBD8 JUMP JUMPDEST SWAP7 POP PUSH2 0xC3B DUP4 PUSH2 0xBEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC1C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC77 DUP2 PUSH2 0x6CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC88 DUP4 DUP4 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA9 DUP2 PUSH2 0xC51 JUMP JUMPDEST PUSH2 0xCB3 DUP2 DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP3 POP PUSH2 0xCBE DUP3 PUSH2 0xC65 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCEE JUMPI DUP2 MLOAD PUSH2 0xCD5 DUP8 DUP3 PUSH2 0xC7D JUMP JUMPDEST SWAP7 POP PUSH2 0xCE0 DUP4 PUSH2 0xC94 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xD09 PUSH0 DUP4 ADD DUP6 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0xD16 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xCA0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 ADD PUSH12 0x3B14D5D46558EBBE1B181E20 0x23 0xF8 SLOAD KECCAK256 0xEE 0xE3 0x24 0xBB 0xE4 0xDB PUSH6 0x4F8C58703068 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "338:1826:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:198;;;:::i;:::-;;1140:124;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1270:785;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;936:198;2116:5;2102:19;;:10;:19;;;2094:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1002:20:::1;1032:9;1025:27;;;1061:4;1025:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1002:65;;1084:9;1077:26;;;1104:5;1111:15;1077:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;992:142;936:198::o:0;1140:124::-;1193:4;1222:9;1215:27;;;1251:4;1215:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1208:49;;1140:124;:::o;1270:785::-;1392:8;1378:22;;:10;:22;;;1370:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:20;1465:9;1458:27;;;1494:4;1458:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1435:65;;1533:1;1514:15;:20;1510:62;;1543:29;;;;;;;;;;;;;;1510:62;1583:26;:165;;;;;;;;1651:3;1632:15;1627:2;:20;;;;:::i;:::-;1626:28;;;;:::i;:::-;1583:165;;;;1693:3;1674:15;1669:2;:20;;;;:::i;:::-;1668:28;;;;:::i;:::-;1583:165;;;;1735:3;1716:15;1711:2;:20;;;;:::i;:::-;1710:28;;;;:::i;:::-;1583:165;;;;;1759:17;1803:3;1784:15;1780:1;:19;;;;:::i;:::-;1779:27;;;;:::i;:::-;1759:47;;1822:6;1817:107;1838:1;1834;:5;1817:107;;;1867:9;1860:26;;;1887:6;1894:1;1887:9;;;;;;;:::i;:::-;;;;;;1898:11;1910:1;1898:14;;;;;;;:::i;:::-;;;;;;1860:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1841:3;;;;;;;1817:107;;;;1949:9;1942:26;;;1969:10;1981:12;1942:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2009:39;2028:6;2036:11;2009:39;;;;;;;:::i;:::-;;;;;;;;1327:728;;;1270:785;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;769:117;878:1;875;868:12;892:102;933:6;984:2;980:7;975:2;968:5;964:14;960:28;950:38;;892:102;;;:::o;1000:180::-;1048:77;1045:1;1038:88;1145:4;1142:1;1135:15;1169:4;1166:1;1159:15;1186:281;1269:27;1291:4;1269:27;:::i;:::-;1261:6;1257:40;1399:6;1387:10;1384:22;1363:18;1351:10;1348:34;1345:62;1342:88;;;1410:18;;:::i;:::-;1342:88;1450:10;1446:2;1439:22;1229:238;1186:281;;:::o;1473:129::-;1507:6;1534:20;;:::i;:::-;1524:30;;1563:33;1591:4;1583:6;1563:33;:::i;:::-;1473:129;;;:::o;1608:249::-;1683:4;1773:18;1765:6;1762:30;1759:56;;;1795:18;;:::i;:::-;1759:56;1845:4;1837:6;1833:17;1825:25;;1608:249;;;:::o;1863:117::-;1972:1;1969;1962:12;1986:126;2023:7;2063:42;2056:5;2052:54;2041:65;;1986:126;;;:::o;2118:96::-;2155:7;2184:24;2202:5;2184:24;:::i;:::-;2173:35;;2118:96;;;:::o;2220:122::-;2293:24;2311:5;2293:24;:::i;:::-;2286:5;2283:35;2273:63;;2332:1;2329;2322:12;2273:63;2220:122;:::o;2348:139::-;2394:5;2432:6;2419:20;2410:29;;2448:33;2475:5;2448:33;:::i;:::-;2348:139;;;;:::o;2511:643::-;2605:5;2630:79;2646:62;2701:6;2646:62;:::i;:::-;2630:79;:::i;:::-;2621:88;;2729:5;2782:4;2774:6;2770:17;2762:6;2758:30;2811:3;2803:6;2800:15;2797:122;;;2830:79;;:::i;:::-;2797:122;2945:6;2928:220;2962:6;2957:3;2954:15;2928:220;;;3037:3;3066:37;3099:3;3087:10;3066:37;:::i;:::-;3061:3;3054:50;3133:4;3128:3;3124:14;3117:21;;3004:144;2988:4;2983:3;2979:14;2972:21;;2928:220;;;2932:21;2611:543;;2511:643;;;;;:::o;3178:339::-;3247:5;3296:3;3289:4;3281:6;3277:17;3273:27;3263:122;;3304:79;;:::i;:::-;3263:122;3408:4;3430:81;3507:3;3499:6;3491;3430:81;:::i;:::-;3421:90;;3253:264;3178:339;;;;:::o;3523:375::-;3605:6;3654:2;3642:9;3633:7;3629:23;3625:32;3622:119;;;3660:79;;:::i;:::-;3622:119;3780:1;3805:76;3873:7;3864:6;3853:9;3849:22;3805:76;:::i;:::-;3795:86;;3751:140;3523:375;;;;:::o;3904:169::-;3988:11;4022:6;4017:3;4010:19;4062:4;4057:3;4053:14;4038:29;;3904:169;;;;:::o;4079:168::-;4219:20;4215:1;4207:6;4203:14;4196:44;4079:168;:::o;4253:366::-;4395:3;4416:67;4480:2;4475:3;4416:67;:::i;:::-;4409:74;;4492:93;4581:3;4492:93;:::i;:::-;4610:2;4605:3;4601:12;4594:19;;4253:366;;;:::o;4625:419::-;4791:4;4829:2;4818:9;4814:18;4806:26;;4878:9;4872:4;4868:20;4864:1;4853:9;4849:17;4842:47;4906:131;5032:4;4906:131;:::i;:::-;4898:139;;4625:419;;;:::o;5050:118::-;5137:24;5155:5;5137:24;:::i;:::-;5132:3;5125:37;5050:118;;:::o;5174:222::-;5267:4;5305:2;5294:9;5290:18;5282:26;;5318:71;5386:1;5375:9;5371:17;5362:6;5318:71;:::i;:::-;5174:222;;;;:::o;5402:122::-;5475:24;5493:5;5475:24;:::i;:::-;5468:5;5465:35;5455:63;;5514:1;5511;5504:12;5455:63;5402:122;:::o;5530:143::-;5587:5;5618:6;5612:13;5603:22;;5634:33;5661:5;5634:33;:::i;:::-;5530:143;;;;:::o;5679:351::-;5749:6;5798:2;5786:9;5777:7;5773:23;5769:32;5766:119;;;5804:79;;:::i;:::-;5766:119;5924:1;5949:64;6005:7;5996:6;5985:9;5981:22;5949:64;:::i;:::-;5939:74;;5895:128;5679:351;;;;:::o;6036:332::-;6157:4;6195:2;6184:9;6180:18;6172:26;;6208:71;6276:1;6265:9;6261:17;6252:6;6208:71;:::i;:::-;6289:72;6357:2;6346:9;6342:18;6333:6;6289:72;:::i;:::-;6036:332;;;;;:::o;6374:90::-;6408:7;6451:5;6444:13;6437:21;6426:32;;6374:90;;;:::o;6470:116::-;6540:21;6555:5;6540:21;:::i;:::-;6533:5;6530:32;6520:60;;6576:1;6573;6566:12;6520:60;6470:116;:::o;6592:137::-;6646:5;6677:6;6671:13;6662:22;;6693:30;6717:5;6693:30;:::i;:::-;6592:137;;;;:::o;6735:345::-;6802:6;6851:2;6839:9;6830:7;6826:23;6822:32;6819:119;;;6857:79;;:::i;:::-;6819:119;6977:1;7002:61;7055:7;7046:6;7035:9;7031:22;7002:61;:::i;:::-;6992:71;;6948:125;6735:345;;;;:::o;7086:170::-;7226:22;7222:1;7214:6;7210:14;7203:46;7086:170;:::o;7262:366::-;7404:3;7425:67;7489:2;7484:3;7425:67;:::i;:::-;7418:74;;7501:93;7590:3;7501:93;:::i;:::-;7619:2;7614:3;7610:12;7603:19;;7262:366;;;:::o;7634:419::-;7800:4;7838:2;7827:9;7823:18;7815:26;;7887:9;7881:4;7877:20;7873:1;7862:9;7858:17;7851:47;7915:131;8041:4;7915:131;:::i;:::-;7907:139;;7634:419;;;:::o;8059:180::-;8107:77;8104:1;8097:88;8204:4;8201:1;8194:15;8228:4;8225:1;8218:15;8245:410;8285:7;8308:20;8326:1;8308:20;:::i;:::-;8303:25;;8342:20;8360:1;8342:20;:::i;:::-;8337:25;;8397:1;8394;8390:9;8419:30;8437:11;8419:30;:::i;:::-;8408:41;;8598:1;8589:7;8585:15;8582:1;8579:22;8559:1;8552:9;8532:83;8509:139;;8628:18;;:::i;:::-;8509:139;8293:362;8245:410;;;;:::o;8661:180::-;8709:77;8706:1;8699:88;8806:4;8803:1;8796:15;8830:4;8827:1;8820:15;8847:185;8887:1;8904:20;8922:1;8904:20;:::i;:::-;8899:25;;8938:20;8956:1;8938:20;:::i;:::-;8933:25;;8977:1;8967:35;;8982:18;;:::i;:::-;8967:35;9024:1;9021;9017:9;9012:14;;8847:185;;;;:::o;9038:180::-;9086:77;9083:1;9076:88;9183:4;9180:1;9173:15;9207:4;9204:1;9197:15;9224:104;9289:6;9317:4;9307:14;;9224:104;;;:::o;9334:143::-;9431:11;9468:3;9453:18;;9334:143;;;;:::o;9483:98::-;9548:4;9571:3;9563:11;;9483:98;;;:::o;9587:108::-;9664:24;9682:5;9664:24;:::i;:::-;9659:3;9652:37;9587:108;;:::o;9701:179::-;9770:10;9791:46;9833:3;9825:6;9791:46;:::i;:::-;9869:4;9864:3;9860:14;9846:28;;9701:179;;;;:::o;9886:111::-;9954:4;9986;9981:3;9977:14;9969:22;;9886:111;;;:::o;10035:694::-;10171:52;10217:5;10171:52;:::i;:::-;10239:84;10316:6;10311:3;10239:84;:::i;:::-;10232:91;;10347:54;10395:5;10347:54;:::i;:::-;10424:7;10455:1;10440:282;10465:6;10462:1;10459:13;10440:282;;;10541:6;10535:13;10568:63;10627:3;10612:13;10568:63;:::i;:::-;10561:70;;10654:58;10705:6;10654:58;:::i;:::-;10644:68;;10500:222;10487:1;10484;10480:9;10475:14;;10440:282;;;10444:14;10147:582;;;10035:694;;:::o;10735:104::-;10800:6;10828:4;10818:14;;10735:104;;;:::o;10845:143::-;10942:11;10979:3;10964:18;;10845:143;;;;:::o;10994:98::-;11059:4;11082:3;11074:11;;10994:98;;;:::o;11098:108::-;11175:24;11193:5;11175:24;:::i;:::-;11170:3;11163:37;11098:108;;:::o;11212:179::-;11281:10;11302:46;11344:3;11336:6;11302:46;:::i;:::-;11380:4;11375:3;11371:14;11357:28;;11212:179;;;;:::o;11397:111::-;11465:4;11497;11492:3;11488:14;11480:22;;11397:111;;;:::o;11546:694::-;11682:52;11728:5;11682:52;:::i;:::-;11750:84;11827:6;11822:3;11750:84;:::i;:::-;11743:91;;11858:54;11906:5;11858:54;:::i;:::-;11935:7;11966:1;11951:282;11976:6;11973:1;11970:13;11951:282;;;12052:6;12046:13;12079:63;12138:3;12123:13;12079:63;:::i;:::-;12072:70;;12165:58;12216:6;12165:58;:::i;:::-;12155:68;;12011:222;11998:1;11995;11991:9;11986:14;;11951:282;;;11955:14;11658:582;;;11546:694;;:::o;12246:517::-;12459:4;12497:3;12486:9;12482:19;12474:27;;12511:117;12625:1;12614:9;12610:17;12601:6;12511:117;:::i;:::-;12638:118;12752:2;12741:9;12737:18;12728:6;12638:118;:::i;:::-;12246:517;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "682200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"EmergencyWithdrawalAdmin()": "infinite",
								"ReturnContractBalnc()": "infinite",
								"RewardWinners(address[3])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 819,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 546,
									"end": 819,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 819,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 546,
									"end": 819,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 577,
									"end": 619,
									"name": "PUSH",
									"source": 3,
									"value": "70CA4A44A227645BB4815AE4D68098EA68AB926F"
								},
								{
									"begin": 569,
									"end": 619,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 569,
									"end": 619,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 569,
									"end": 619,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 569,
									"end": 619,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 569,
									"end": 619,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 569,
									"end": 619,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 569,
									"end": 619,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 569,
									"end": 619,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 569,
									"end": 619,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 569,
									"end": 619,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "1241676D45B1CB5B573B6258C4A838E149A1D191"
								},
								{
									"begin": 629,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 629,
									"end": 683,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 629,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 629,
									"end": 683,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 629,
									"end": 683,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 629,
									"end": 683,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 629,
									"end": 683,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 629,
									"end": 683,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 629,
									"end": 683,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 629,
									"end": 683,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 707,
									"end": 749,
									"name": "PUSH",
									"source": 3,
									"value": "81881D97EA9A855025BD0E38C7CCC2DE7074A1B7"
								},
								{
									"begin": 693,
									"end": 749,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 693,
									"end": 749,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 693,
									"end": 749,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 693,
									"end": 749,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 693,
									"end": 749,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 693,
									"end": 749,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 693,
									"end": 749,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 693,
									"end": 749,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 693,
									"end": 749,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 693,
									"end": 749,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 770,
									"end": 812,
									"name": "PUSH",
									"source": 3,
									"value": "52C043C7120D7DA35FFDDF6C5C2359D503CEE5F8"
								},
								{
									"begin": 759,
									"end": 812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 759,
									"end": 812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 759,
									"end": 812,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 759,
									"end": 812,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 759,
									"end": 812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 759,
									"end": 812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 759,
									"end": 812,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 759,
									"end": 812,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 759,
									"end": 812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 759,
									"end": 812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "557"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "555"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "553"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "551"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 2164,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5016b3b14d5d46558ebbe1b181e2023f85420eee324bbe4db654f8c5870306864736f6c634300081a0033",
									".code": [
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "90DECDAE"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "B321E227"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "FE272FD9"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 338,
											"end": 2164,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 936,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1140,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1140,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1270,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1270,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 936,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2121,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "551"
										},
										{
											"begin": 2102,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2121,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2094,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2094,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "553"
										},
										{
											"begin": 1025,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1061,
											"end": 1065,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1025,
											"end": 1067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1025,
											"end": 1067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1025,
											"end": 1067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1093,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "553"
										},
										{
											"begin": 1077,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1103,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1104,
											"end": 1109,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "551"
										},
										{
											"begin": 1111,
											"end": 1126,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1077,
											"end": 1127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1077,
											"end": 1127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1077,
											"end": 1127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 992,
											"end": 1134,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 936,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "553"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1215,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1215,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1215,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1400,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "557"
										},
										{
											"begin": 1378,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1378,
											"end": 1400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1388,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1378,
											"end": 1400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1378,
											"end": 1400,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1370,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1370,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1474,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "553"
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1494,
											"end": 1498,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1458,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1458,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1458,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1514,
											"end": 1534,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1510,
											"end": 1572,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "786E0A9900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1572,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1510,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1627,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1627,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1626,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1674,
											"end": 1689,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1671,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1669,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1668,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1668,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1716,
											"end": 1731,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1711,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1711,
											"end": 1731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1711,
											"end": 1731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1731,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1711,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1710,
											"end": 1738,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1710,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1738,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1710,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1806,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1780,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1780,
											"end": 1799,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1780,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1799,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1780,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1779,
											"end": 1806,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1779,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1806,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1779,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1806,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1839,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1839,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "553"
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1886,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1887,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1898,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1860,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1860,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 1913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "553"
										},
										{
											"begin": 1942,
											"end": 1968,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 1968,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1968,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1969,
											"end": 1979,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "555"
										},
										{
											"begin": 1981,
											"end": 1993,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1942,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1942,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "6B6EF27261DFD975A881981CB28ADC6AFE7963673C859BCE73D79E0E09BE34B0"
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2047,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2009,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2048,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 2055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 2055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 2055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 442,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 475,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 511,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 492,
											"end": 511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 492,
											"end": 511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 442,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 769,
											"end": 886,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 876,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 868,
											"end": 880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 892,
											"end": 994,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 892,
											"end": 994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 933,
											"end": 939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 986,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 980,
											"end": 987,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 975,
											"end": 977,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 964,
											"end": 978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 960,
											"end": 988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 950,
											"end": 988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 950,
											"end": 988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 994,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 892,
											"end": 994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 892,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1180,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1000,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1173,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1467,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1186,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1291,
											"end": 1295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1269,
											"end": 1296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1296,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1269,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1397,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1406,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1382,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1345,
											"end": 1407,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1430,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1342,
											"end": 1430,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1410,
											"end": 1428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1430,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1342,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1602,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1473,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1534,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1534,
											"end": 1554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1554,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1534,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1563,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1596,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1563,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1602,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1857,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1608,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1792,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1815,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1759,
											"end": 1815,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1795,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1815,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1759,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1850,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1980,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1863,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1974,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2112,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1986,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2105,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2214,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2118,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2202,
											"end": 2207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2184,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2214,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2342,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2220,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2311,
											"end": 2316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2318,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2273,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2273,
											"end": 2336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2334,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2273,
											"end": 2336,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2273,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2348,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2448,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2481,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2448,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2487,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 3154,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2511,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2646,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2646,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2708,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2646,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2630,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2630,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2786,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2787,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2762,
											"end": 2768,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2814,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2815,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2797,
											"end": 2919,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2830,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2797,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 2951,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3099,
											"end": 3102,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3087,
											"end": 3097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3066,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3103,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3066,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3064,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3131,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3138,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3117,
											"end": 3138,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3117,
											"end": 3138,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 2992,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 2986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2928,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 3154,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 3154,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 3154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3517,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3178,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3293,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3281,
											"end": 3287,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3300,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3263,
											"end": 3385,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3304,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3304,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3304,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3304,
											"end": 3383,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3304,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3385,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3263,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3430,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3507,
											"end": 3510,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3430,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3511,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3430,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3511,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3898,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3523,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3629,
											"end": 3652,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3657,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3741,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3622,
											"end": 3741,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3660,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3660,
											"end": 3739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3739,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3660,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3622,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3805,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3881,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3805,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3881,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3751,
											"end": 3891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3898,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3898,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 4073,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3904,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 3999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4020,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4029,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4066,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 4073,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 4073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 4073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 4073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 4073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4247,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4079,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C792061646D696E2077616C6C6574210000000000000000000000000000"
										},
										{
											"begin": 4215,
											"end": 4216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4203,
											"end": 4217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4240,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4395,
											"end": 4398,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4475,
											"end": 4478,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4416,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4416,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4492,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4492,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4601,
											"end": 4613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4253,
											"end": 4619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4253,
											"end": 4619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4827,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4888,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4849,
											"end": 4866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4906,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4906,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 5037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 5037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5168,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5050,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5137,
											"end": 5161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5161,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5137,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5174,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5267,
											"end": 5271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5294,
											"end": 5303,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5371,
											"end": 5388,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5368,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5318,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5318,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5402,
											"end": 5524,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5402,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5493,
											"end": 5498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5475,
											"end": 5499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5499,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5475,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5500,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5455,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5402,
											"end": 5524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5402,
											"end": 5524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5673,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5530,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5612,
											"end": 5625,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5603,
											"end": 5625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5603,
											"end": 5625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5634,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5667,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5634,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5673,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6030,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5679,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5777,
											"end": 5784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5769,
											"end": 5801,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5766,
											"end": 5885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5804,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5804,
											"end": 5883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5883,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5804,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5885,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5766,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6005,
											"end": 6012,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6002,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5985,
											"end": 5994,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5949,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5949,
											"end": 6013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5949,
											"end": 6013,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5949,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 6013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 6013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5895,
											"end": 6023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6030,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6030,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6368,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6036,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6157,
											"end": 6161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6261,
											"end": 6278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6258,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6208,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6279,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6208,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6289,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6357,
											"end": 6359,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6346,
											"end": 6355,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6342,
											"end": 6360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6333,
											"end": 6339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6289,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6289,
											"end": 6361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6289,
											"end": 6361,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6289,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6368,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6368,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6374,
											"end": 6464,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6374,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6444,
											"end": 6457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6458,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6426,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6374,
											"end": 6464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6374,
											"end": 6464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6374,
											"end": 6464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6374,
											"end": 6464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6470,
											"end": 6586,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6470,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6540,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6555,
											"end": 6560,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6540,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6540,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6540,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6540,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6530,
											"end": 6562,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6520,
											"end": 6580,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6577,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6578,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6520,
											"end": 6580,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6520,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6470,
											"end": 6586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6470,
											"end": 6586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6729,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6592,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6646,
											"end": 6651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6671,
											"end": 6684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6662,
											"end": 6684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6662,
											"end": 6684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6717,
											"end": 6722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6693,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6723,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6693,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6729,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 7080,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6735,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6802,
											"end": 6808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6819,
											"end": 6938,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6819,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6819,
											"end": 6938,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6857,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 6857,
											"end": 6936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 6936,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6857,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6819,
											"end": 6938,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6819,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7055,
											"end": 7062,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7044,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7002,
											"end": 7063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7063,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7002,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7063,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6992,
											"end": 7063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6948,
											"end": 7073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 7080,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 7080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 7080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 7080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6735,
											"end": 7080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7256,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7086,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7226,
											"end": 7248,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F74206465706C6F7965722041646472657373000000000000000000000000"
										},
										{
											"begin": 7222,
											"end": 7223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7210,
											"end": 7224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7203,
											"end": 7249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7628,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 7262,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7404,
											"end": 7407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7489,
											"end": 7491,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7484,
											"end": 7487,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7425,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7425,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7492,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7501,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7590,
											"end": 7593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7501,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7501,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7501,
											"end": 7594,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7501,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7621,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7614,
											"end": 7617,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7610,
											"end": 7622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7603,
											"end": 7622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7603,
											"end": 7622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7634,
											"end": 8053,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7634,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7827,
											"end": 7836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 7897,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 7874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7858,
											"end": 7875,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8041,
											"end": 8045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 7915,
											"end": 8046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 8046,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7915,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 8046,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 8046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7634,
											"end": 8053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7634,
											"end": 8053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7634,
											"end": 8053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7634,
											"end": 8053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8059,
											"end": 8239,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8059,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8107,
											"end": 8184,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8204,
											"end": 8208,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8201,
											"end": 8202,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8194,
											"end": 8209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8228,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8233,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8655,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 8245,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8285,
											"end": 8292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8308,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8326,
											"end": 8327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8308,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8308,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8308,
											"end": 8328,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8308,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8303,
											"end": 8328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8360,
											"end": 8361,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8342,
											"end": 8362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8397,
											"end": 8398,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8395,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8390,
											"end": 8399,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8437,
											"end": 8448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8419,
											"end": 8449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8589,
											"end": 8596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8585,
											"end": 8600,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8579,
											"end": 8601,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8559,
											"end": 8560,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8552,
											"end": 8561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8532,
											"end": 8615,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 8509,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8509,
											"end": 8648,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8628,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8628,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8509,
											"end": 8648,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8509,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8293,
											"end": 8655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 8841,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8661,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8709,
											"end": 8786,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8806,
											"end": 8810,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 8803,
											"end": 8804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8796,
											"end": 8811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8827,
											"end": 8828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8820,
											"end": 8835,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 9032,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 8847,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8887,
											"end": 8888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8922,
											"end": 8923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8904,
											"end": 8924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8938,
											"end": 8958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8933,
											"end": 8958,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8933,
											"end": 8958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8977,
											"end": 8978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8982,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9024,
											"end": 9025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9017,
											"end": 9026,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9012,
											"end": 9026,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9012,
											"end": 9026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 9032,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 9032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 9032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 9032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 9032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9038,
											"end": 9218,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 9038,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9163,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9083,
											"end": 9084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9183,
											"end": 9187,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 9180,
											"end": 9181,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9173,
											"end": 9188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9207,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9204,
											"end": 9205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9224,
											"end": 9328,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9224,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9289,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9317,
											"end": 9321,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9307,
											"end": 9321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9224,
											"end": 9328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9224,
											"end": 9328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9224,
											"end": 9328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9224,
											"end": 9328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9477,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 9334,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9431,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9471,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9477,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9477,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9334,
											"end": 9477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9483,
											"end": 9581,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 9483,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9548,
											"end": 9552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9563,
											"end": 9574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9563,
											"end": 9574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9483,
											"end": 9581,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9483,
											"end": 9581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9483,
											"end": 9581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9483,
											"end": 9581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9695,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9587,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9664,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9682,
											"end": 9687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9664,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 9664,
											"end": 9688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9664,
											"end": 9688,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9664,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9659,
											"end": 9662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9652,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9880,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 9701,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9770,
											"end": 9780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9791,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9833,
											"end": 9836,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9831,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9791,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9791,
											"end": 9837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9791,
											"end": 9837,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 9791,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9873,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9864,
											"end": 9867,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9860,
											"end": 9874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9846,
											"end": 9874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9846,
											"end": 9874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9880,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 9886,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9954,
											"end": 9958,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 9990,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9981,
											"end": 9984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 9991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9969,
											"end": 9991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9969,
											"end": 9991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 9997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10035,
											"end": 10729,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 10035,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10217,
											"end": 10222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 10171,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10223,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 10171,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10239,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10316,
											"end": 10322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10311,
											"end": 10314,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10239,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10239,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10239,
											"end": 10323,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10239,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10232,
											"end": 10323,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10232,
											"end": 10323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10347,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 10395,
											"end": 10400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10347,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 10347,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10347,
											"end": 10401,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 10347,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10424,
											"end": 10431,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10465,
											"end": 10471,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10462,
											"end": 10463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10459,
											"end": 10472,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10535,
											"end": 10548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10568,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 10627,
											"end": 10630,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10612,
											"end": 10625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10568,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 10568,
											"end": 10631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10568,
											"end": 10631,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 10568,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 10631,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 10631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10654,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10654,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 10654,
											"end": 10712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10654,
											"end": 10712,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 10654,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10644,
											"end": 10712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10489,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10475,
											"end": 10489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10475,
											"end": 10489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10440,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10444,
											"end": 10458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10147,
											"end": 10729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10147,
											"end": 10729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10147,
											"end": 10729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10035,
											"end": 10729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10035,
											"end": 10729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10035,
											"end": 10729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10839,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 10735,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10828,
											"end": 10832,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10818,
											"end": 10832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10818,
											"end": 10832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10845,
											"end": 10988,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 10845,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10942,
											"end": 10953,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 10982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10845,
											"end": 10988,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10845,
											"end": 10988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10845,
											"end": 10988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10845,
											"end": 10988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10845,
											"end": 10988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10994,
											"end": 11092,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 10994,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11059,
											"end": 11063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10994,
											"end": 11092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10994,
											"end": 11092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10994,
											"end": 11092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10994,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11098,
											"end": 11206,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 11098,
											"end": 11206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11175,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 11193,
											"end": 11198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11175,
											"end": 11199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 11175,
											"end": 11199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11175,
											"end": 11199,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 11175,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11163,
											"end": 11200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11098,
											"end": 11206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11098,
											"end": 11206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11098,
											"end": 11206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11391,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 11212,
											"end": 11391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11281,
											"end": 11291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 11344,
											"end": 11347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11336,
											"end": 11342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11302,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 11302,
											"end": 11348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11302,
											"end": 11348,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 11302,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11380,
											"end": 11384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11375,
											"end": 11378,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11371,
											"end": 11385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11357,
											"end": 11385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11357,
											"end": 11385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11391,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11397,
											"end": 11508,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 11397,
											"end": 11508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11465,
											"end": 11469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11497,
											"end": 11501,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11492,
											"end": 11495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11488,
											"end": 11502,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11397,
											"end": 11508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11397,
											"end": 11508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11397,
											"end": 11508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11397,
											"end": 11508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11546,
											"end": 12240,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 11546,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11682,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 11728,
											"end": 11733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11682,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11682,
											"end": 11734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11682,
											"end": 11734,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 11682,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11750,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 11827,
											"end": 11833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11822,
											"end": 11825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11750,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 11750,
											"end": 11834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11750,
											"end": 11834,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 11750,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11834,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11743,
											"end": 11834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11858,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 11906,
											"end": 11911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11858,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 11858,
											"end": 11912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11858,
											"end": 11912,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 11858,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11935,
											"end": 11942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11966,
											"end": 11967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11976,
											"end": 11982,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11973,
											"end": 11974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11970,
											"end": 11983,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12052,
											"end": 12058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12046,
											"end": 12059,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12079,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 12138,
											"end": 12141,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12123,
											"end": 12136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12079,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 12079,
											"end": 12142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12079,
											"end": 12142,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 12079,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12072,
											"end": 12142,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 12072,
											"end": 12142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12165,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 12216,
											"end": 12222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12165,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 12165,
											"end": 12223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12165,
											"end": 12223,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 12165,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12155,
											"end": 12223,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12155,
											"end": 12223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12011,
											"end": 12233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11998,
											"end": 11999,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11995,
											"end": 11996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11991,
											"end": 12000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 12000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 12000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 11951,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 12240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 12240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 12240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11546,
											"end": 12240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11546,
											"end": 12240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11546,
											"end": 12240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12763,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 12246,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12459,
											"end": 12463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12497,
											"end": 12500,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 12486,
											"end": 12495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12482,
											"end": 12501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12511,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12601,
											"end": 12607,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12511,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 12511,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12511,
											"end": 12628,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 12511,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12638,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 12752,
											"end": 12754,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12741,
											"end": 12750,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12728,
											"end": 12734,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12638,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 12638,
											"end": 12756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12638,
											"end": 12756,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 12638,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12763,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12763,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/effct3testnet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"EmergencyWithdrawalAdmin()": "90decdae",
							"ReturnContractBalnc()": "b321e227",
							"RewardWinners(address[3])": "fe272fd9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientContractBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"winners\",\"type\":\"address[3]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"rewards\",\"type\":\"uint256[3]\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EmergencyWithdrawalAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ReturnContractBalnc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[3]\",\"name\":\"_users\",\"type\":\"address[3]\"}],\"name\":\"RewardWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/effct3testnet.sol\":\"TriviaBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188\",\"dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/effct3testnet.sol\":{\"keccak256\":\"0xa62e007f3f74ddaeeaece786ee0d18c2028f173027527c09ed2657103a842819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1502676bf29d05925970c85bb163603a7c6998dde56ca7edc8dedeeb0202beb8\",\"dweb:/ipfs/QmV1dNtEscwmkjhoUGYRDmtNnNVQH92n496DsDzDAcythT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TriviaBaseFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_TriviaBase",
									"type": "address"
								}
							],
							"name": "EmitNewTriviaContract",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "createTriviaContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/effct3testnet.sol\":2352:2732  contract TriviaBaseFactory {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/effct3testnet.sol\":2420:2462  0xa0302bF514b261bB46403d8C3044e7Ef1565C1E6 */\n  0xa0302bf514b261bb46403d8c3044e7ef1565c1e6\n    /* \"contracts/effct3testnet.sol\":2385:2462  address private immutable TRIVIA = 0xa0302bF514b261bB46403d8C3044e7Ef1565C1E6 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/effct3testnet.sol\":2352:2732  contract TriviaBaseFactory {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x71bbe7127bd89df6ce330052997b281f376d38e52391bc5027e65591cccf12c9\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/effct3testnet.sol\":2352:2732  contract TriviaBaseFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc313889c\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/effct3testnet.sol\":2526:2730  function createTriviaContract() external returns (address) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/effct3testnet.sol\":2576:2583  address */\n      0x00\n        /* \"contracts/effct3testnet.sol\":2595:2617  address newconstTrivia */\n      dup1\n        /* \"contracts/effct3testnet.sol\":2620:2640  Clones.clone(TRIVIA) */\n      tag_9\n        /* \"contracts/effct3testnet.sol\":2633:2639  TRIVIA */\n      immutable(\"0x71bbe7127bd89df6ce330052997b281f376d38e52391bc5027e65591cccf12c9\")\n        /* \"contracts/effct3testnet.sol\":2620:2632  Clones.clone */\n      tag_10\n        /* \"contracts/effct3testnet.sol\":2620:2640  Clones.clone(TRIVIA) */\n      jump\t// in\n    tag_9:\n        /* \"contracts/effct3testnet.sol\":2595:2640  address newconstTrivia = Clones.clone(TRIVIA) */\n      swap1\n      pop\n        /* \"contracts/effct3testnet.sol\":2655:2692  EmitNewTriviaContract(newconstTrivia) */\n      0x456f613c0980b2ac67372535d8b1cd435b82dc1d50d713328c70ca9a28ccb1af\n        /* \"contracts/effct3testnet.sol\":2677:2691  newconstTrivia */\n      dup2\n        /* \"contracts/effct3testnet.sol\":2655:2692  EmitNewTriviaContract(newconstTrivia) */\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/effct3testnet.sol\":2709:2723  newconstTrivia */\n      dup1\n        /* \"contracts/effct3testnet.sol\":2702:2723  return newconstTrivia */\n      swap2\n      pop\n      pop\n        /* \"contracts/effct3testnet.sol\":2526:2730  function createTriviaContract() external returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1071:1194  function clone(address implementation) internal returns (address instance) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1128:1144  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1163:1187  clone(implementation, 0) */\n      tag_13\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1169:1183  implementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1185:1186  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1163:1168  clone */\n      tag_14\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1163:1187  clone(implementation, 0) */\n      jump\t// in\n    tag_13:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1156:1187  return clone(implementation, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1071:1194  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1586:2496  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1658:1674  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1714:1719  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1690:1711  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1690:1719  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1686:1809  if (address(this).balance < value) {... */\n      iszero\n      tag_16\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1769:1790  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1792:1797  value */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1742:1798  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1686:1809  if (address(this).balance < value) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2095:2143  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2077:2091  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2071:2075  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2067:2092  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2061:2065  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2057:2093  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2054:2144  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2048:2052  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2041:2145  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2302:2334  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2285:2299  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2279:2283  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2275:2300  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2272:2335  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2266:2270  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2259:2336  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2381:2385  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2375:2379  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2368:2373  value */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2361:2386  create(value, 0x09, 0x37) */\n      create\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2349:2386  instance := create(value, 0x09, 0x37) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2429:2430  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2409:2431  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2409:2417  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2409:2431  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2405:2490  if (instance == address(0)) {... */\n      tag_19\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2454:2479  Errors.FailedDeployment() */\n      mload(0x40)\n      0xb06ebf3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2405:2490  if (instance == address(0)) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1586:2496  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_20:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_21:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_28\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_22:\n        /* \"#utility.yul\":328:352   */\n      tag_30\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_21\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_32\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_22\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_23:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_24:\n        /* \"#utility.yul\":763:787   */\n      tag_35\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_23\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1132   */\n    tag_18:\n        /* \"#utility.yul\":921:925   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x40\n        /* \"#utility.yul\":948:957   */\n      dup3\n        /* \"#utility.yul\":944:962   */\n      add\n        /* \"#utility.yul\":936:962   */\n      swap1\n      pop\n        /* \"#utility.yul\":972:1043   */\n      tag_37\n        /* \"#utility.yul\":1040:1041   */\n      0x00\n        /* \"#utility.yul\":1029:1038   */\n      dup4\n        /* \"#utility.yul\":1025:1042   */\n      add\n        /* \"#utility.yul\":1016:1022   */\n      dup6\n        /* \"#utility.yul\":972:1043   */\n      tag_24\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1053:1125   */\n      tag_38\n        /* \"#utility.yul\":1121:1123   */\n      0x20\n        /* \"#utility.yul\":1110:1119   */\n      dup4\n        /* \"#utility.yul\":1106:1124   */\n      add\n        /* \"#utility.yul\":1097:1103   */\n      dup5\n        /* \"#utility.yul\":1053:1125   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":800:1132   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122095fb9bf15e634c2252ef4aa9044f91fdb77b192213c1efadcc9aa482940de81864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405273a0302bf514b261bb46403d8c3044e7ef1565c1e673ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156055575f80fd5b5060805161028a61006d5f395f6052015261028a5ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063c313889c1461002d575b5f80fd5b61003561004b565b60405161004291906101fc565b60405180910390f35b5f806100767f00000000000000000000000000000000000000000000000000000000000000006100b6565b90507f456f613c0980b2ac67372535d8b1cd435b82dc1d50d713328c70ca9a28ccb1af816040516100a791906101fc565b60405180910390a18091505090565b5f6100c1825f6100c8565b9050919050565b5f814710156101105747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161010792919061022d565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101b7576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e6826101bd565b9050919050565b6101f6816101dc565b82525050565b5f60208201905061020f5f8301846101ed565b92915050565b5f819050919050565b61022781610215565b82525050565b5f6040820190506102405f83018561021e565b61024d602083018461021e565b939250505056fea264697066735822122095fb9bf15e634c2252ef4aa9044f91fdb77b192213c1efadcc9aa482940de81864736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0xA0302BF514B261BB46403D8C3044E7EF1565C1E6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x55 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x28A PUSH2 0x6D PUSH0 CODECOPY PUSH0 PUSH1 0x52 ADD MSTORE PUSH2 0x28A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC313889C EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x76 PUSH32 0x0 PUSH2 0xB6 JUMP JUMPDEST SWAP1 POP PUSH32 0x456F613C0980B2AC67372535D8B1CD435B82DC1D50D713328C70CA9A28CCB1AF DUP2 PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC1 DUP3 PUSH0 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x110 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6 DUP3 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6 DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F PUSH0 DUP4 ADD DUP5 PUSH2 0x1ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x227 DUP2 PUSH2 0x215 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x240 PUSH0 DUP4 ADD DUP6 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x24D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB SWAP12 CALL MCOPY PUSH4 0x4C2252EF BLOBBASEFEE 0xA9 DIV 0x4F SWAP2 REVERT 0xB7 PUSH28 0x192213C1EFADCC9AA482940DE81864736F6C634300081A0033000000 ",
							"sourceMap": "2352:380:3:-:0;;;2420:42;2385:77;;;;;;;;;2352:380;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@clone_22": {
									"entryPoint": 182,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_67": {
									"entryPoint": 200,
									"id": 67,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createTriviaContract_778": {
									"entryPoint": 75,
									"id": 778,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1135:4",
										"nodeType": "YulBlock",
										"src": "0:1135:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nativeSrc": "638:32:4",
													"nodeType": "YulBlock",
													"src": "638:32:4",
													"statements": [
														{
															"nativeSrc": "648:16:4",
															"nodeType": "YulAssignment",
															"src": "648:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:4",
																"nodeType": "YulIdentifier",
																"src": "659:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:4",
														"nodeType": "YulTypedName",
														"src": "620:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:4",
														"nodeType": "YulTypedName",
														"src": "630:7:4",
														"type": ""
													}
												],
												"src": "593:77:4"
											},
											{
												"body": {
													"nativeSrc": "741:53:4",
													"nodeType": "YulBlock",
													"src": "741:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:4"
																		},
																		"nativeSrc": "763:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:4"
																},
																"nativeSrc": "751:37:4",
																"nodeType": "YulFunctionCall",
																"src": "751:37:4"
															},
															"nativeSrc": "751:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:4",
														"nodeType": "YulTypedName",
														"src": "729:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:4",
														"nodeType": "YulTypedName",
														"src": "736:3:4",
														"type": ""
													}
												],
												"src": "676:118:4"
											},
											{
												"body": {
													"nativeSrc": "926:206:4",
													"nodeType": "YulBlock",
													"src": "926:206:4",
													"statements": [
														{
															"nativeSrc": "936:26:4",
															"nodeType": "YulAssignment",
															"src": "936:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "948:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "959:2:4",
																		"nodeType": "YulLiteral",
																		"src": "959:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "944:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:4"
																},
																"nativeSrc": "944:18:4",
																"nodeType": "YulFunctionCall",
																"src": "944:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "936:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "936:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1016:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1016:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1029:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1029:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1040:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1040:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:4"
																		},
																		"nativeSrc": "1025:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "972:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "972:43:4"
																},
																"nativeSrc": "972:71:4",
																"nodeType": "YulFunctionCall",
																"src": "972:71:4"
															},
															"nativeSrc": "972:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "972:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1097:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1097:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1110:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1110:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1121:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1121:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1106:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:4"
																		},
																		"nativeSrc": "1106:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1106:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1053:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1053:43:4"
																},
																"nativeSrc": "1053:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1053:72:4"
															},
															"nativeSrc": "1053:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1053:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "800:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "890:9:4",
														"nodeType": "YulTypedName",
														"src": "890:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "902:6:4",
														"nodeType": "YulTypedName",
														"src": "902:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "910:6:4",
														"nodeType": "YulTypedName",
														"src": "910:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "921:4:4",
														"nodeType": "YulTypedName",
														"src": "921:4:4",
														"type": ""
													}
												],
												"src": "800:332:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"755": [
									{
										"length": 32,
										"start": 82
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063c313889c1461002d575b5f80fd5b61003561004b565b60405161004291906101fc565b60405180910390f35b5f806100767f00000000000000000000000000000000000000000000000000000000000000006100b6565b90507f456f613c0980b2ac67372535d8b1cd435b82dc1d50d713328c70ca9a28ccb1af816040516100a791906101fc565b60405180910390a18091505090565b5f6100c1825f6100c8565b9050919050565b5f814710156101105747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161010792919061022d565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101b7576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e6826101bd565b9050919050565b6101f6816101dc565b82525050565b5f60208201905061020f5f8301846101ed565b92915050565b5f819050919050565b61022781610215565b82525050565b5f6040820190506102405f83018561021e565b61024d602083018461021e565b939250505056fea264697066735822122095fb9bf15e634c2252ef4aa9044f91fdb77b192213c1efadcc9aa482940de81864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC313889C EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH2 0x76 PUSH32 0x0 PUSH2 0xB6 JUMP JUMPDEST SWAP1 POP PUSH32 0x456F613C0980B2AC67372535D8B1CD435B82DC1D50D713328C70CA9A28CCB1AF DUP2 PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC1 DUP3 PUSH0 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x110 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107 SWAP3 SWAP2 SWAP1 PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6 DUP3 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6 DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F PUSH0 DUP4 ADD DUP5 PUSH2 0x1ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x227 DUP2 PUSH2 0x215 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x240 PUSH0 DUP4 ADD DUP6 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x24D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB SWAP12 CALL MCOPY PUSH4 0x4C2252EF BLOBBASEFEE 0xA9 DIV 0x4F SWAP2 REVERT 0xB7 PUSH28 0x192213C1EFADCC9AA482940DE81864736F6C634300081A0033000000 ",
							"sourceMap": "2352:380:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:204;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2576:7;2595:22;2620:20;2633:6;2620:12;:20::i;:::-;2595:45;;2655:37;2677:14;2655:37;;;;;;:::i;:::-;;;;;;;;2709:14;2702:21;;;2526:204;:::o;1071:123:0:-;1128:16;1163:24;1169:14;1185:1;1163:5;:24::i;:::-;1156:31;;1071:123;;;:::o;1586:910::-;1658:16;1714:5;1690:21;:29;1686:123;;;1769:21;1792:5;1742:56;;;;;;;;;;;;:::i;:::-;;;;;;;;1686:123;2095:48;2077:14;2071:4;2067:25;2061:4;2057:36;2054:90;2048:4;2041:104;2302:32;2285:14;2279:4;2275:25;2272:63;2266:4;2259:77;2381:4;2375;2368:5;2361:25;2349:37;;2429:1;2409:22;;:8;:22;;;2405:85;;2454:25;;;;;;;;;;;;;;2405:85;1586:910;;;;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:332::-;921:4;959:2;948:9;944:18;936:26;;972:71;1040:1;1029:9;1025:17;1016:6;972:71;:::i;:::-;1053:72;1121:2;1110:9;1106:18;1097:6;1053:72;:::i;:::-;800:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createTriviaContract()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2420,
									"end": 2462,
									"name": "PUSH",
									"source": 3,
									"value": "A0302BF514B261BB46403D8C3044E7EF1565C1E6"
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2385,
									"end": 2462,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "755"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2732,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095fb9bf15e634c2252ef4aa9044f91fdb77b192213c1efadcc9aa482940de81864736f6c634300081a0033",
									".code": [
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "C313889C"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2732,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2526,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2526,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "755"
										},
										{
											"begin": 2620,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2620,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2620,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2620,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "456F613C0980B2AC67372535D8B1CD435B82DC1D50D713328C70CA9A28CCB1AF"
										},
										{
											"begin": 2677,
											"end": 2691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2655,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2692,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1071,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1071,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1163,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1187,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1163,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 2496,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1586,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1690,
											"end": 1719,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1686,
											"end": 1809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1790,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1742,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1809,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1686,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2077,
											"end": 2091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2067,
											"end": 2092,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2065,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2057,
											"end": 2093,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2054,
											"end": 2144,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2285,
											"end": 2299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2283,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2275,
											"end": 2300,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2335,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2385,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2405,
											"end": 2490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "PUSH",
											"source": 0,
											"value": "B06EBF3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2490,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2405,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 2496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 2496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 2496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 2496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 2496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1132,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 921,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 944,
											"end": 962,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1040,
											"end": 1041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 972,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1043,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 972,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1121,
											"end": 1123,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1119,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1106,
											"end": 1124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1053,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1053,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1132,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1132,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/effct3testnet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createTriviaContract()": "c313889c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_TriviaBase\",\"type\":\"address\"}],\"name\":\"EmitNewTriviaContract\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createTriviaContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/effct3testnet.sol\":\"TriviaBaseFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x83b10b9c4f3117f1bff30c49bc486d719de88c8425fe646bc8a5f998ee44ceb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef2774d5513d7567c3e886a875d90261e1173876324e88e5f21ce79cad14e188\",\"dweb:/ipfs/QmRDkvYwjyHCyTahZ5BqaRz64VtxSzGiYTLmDkacC5yEqr\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/effct3testnet.sol\":{\"keccak256\":\"0xa62e007f3f74ddaeeaece786ee0d18c2028f173027527c09ed2657103a842819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1502676bf29d05925970c85bb163603a7c6998dde56ca7edc8dedeeb0202beb8\",\"dweb:/ipfs/QmV1dNtEscwmkjhoUGYRDmtNnNVQH92n496DsDzDAcythT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
							"file": "../utils/Create2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 498,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Create2",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 520,
							"src": "172:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "180:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "217:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "Clones",
							"nameLocation": "825:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "94289054",
									"id": 8,
									"name": "CloneArgumentsTooLong",
									"nameLocation": "844:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"src": "838:30:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1146:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1169:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 16,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															22,
															67
														],
														"referencedDeclaration": 67,
														"src": "1163:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "1156:31:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "874:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1080:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1094:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1086:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:24:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1136:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1128:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:18:0"
									},
									"scope": 398,
									"src": "1071:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1676:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1698:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1690:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1690:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1704:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1690:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 37,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1714:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1690:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "1686:123:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "1721:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1777:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1769:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1769:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1769:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1783:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1769:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 47,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1792:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 39,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1742:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1749:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1742:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1742:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 49,
															"nodeType": "RevertStatement",
															"src": "1735:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1843:553:0",
													"nodeType": "YulBlock",
													"src": "1843:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2048:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2048:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2061:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2061:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2071:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2071:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2077:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2077:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2067:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2067:3:0"
																						},
																						"nativeSrc": "2067:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2067:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2057:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2057:3:0"
																				},
																				"nativeSrc": "2057:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2057:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2095:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2095:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2054:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2054:2:0"
																		},
																		"nativeSrc": "2054:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2054:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2041:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:0"
																},
																"nativeSrc": "2041:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2041:104:0"
															},
															"nativeSrc": "2041:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2041:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2266:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2266:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2279:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2279:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2285:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2285:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2275:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2275:3:0"
																				},
																				"nativeSrc": "2275:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2275:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2302:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2302:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2272:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2272:2:0"
																		},
																		"nativeSrc": "2272:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2259:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:0"
																},
																"nativeSrc": "2259:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2259:77:0"
															},
															"nativeSrc": "2259:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2259:77:0"
														},
														{
															"nativeSrc": "2349:37:0",
															"nodeType": "YulAssignment",
															"src": "2349:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2368:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2375:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2381:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2381:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2361:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:0"
																},
																"nativeSrc": "2361:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2361:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2349:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2349:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2077:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2285:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2349:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2368:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "1818:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2409:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2429:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2421:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2421:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2409:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "2405:85:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "2433:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2454:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2461:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2454:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2454:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "2447:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1200:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1595:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1609:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1601:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1600:39:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1666:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1658:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1657:18:0"
									},
									"scope": 398,
									"src": "1586:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2974:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3010:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3032:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 77,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84,
															131
														],
														"referencedDeclaration": 131,
														"src": "2991:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 82,
												"nodeType": "Return",
												"src": "2984:50:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2502:365:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2881:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2908:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2900:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2932:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2924:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:38:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2964:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2956:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:18:0"
									},
									"scope": 398,
									"src": "2872:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3614:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3636:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 96,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3628:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3628:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3642:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3628:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 101,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3652:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3628:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "3624:123:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "3659:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 108,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3715:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3707:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 106,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3707:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3707:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3721:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3707:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3730:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 103,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3680:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3687:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "3680:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3680:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "3673:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3781:560:0",
													"nodeType": "YulBlock",
													"src": "3781:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3986:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3986:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3999:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3999:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4009:4:0",
																								"nodeType": "YulLiteral",
																								"src": "4009:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "4015:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "4015:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4005:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "4005:3:0"
																						},
																						"nativeSrc": "4005:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "4005:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3995:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3995:3:0"
																				},
																				"nativeSrc": "3995:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3995:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4033:48:0",
																				"nodeType": "YulLiteral",
																				"src": "4033:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3992:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3992:2:0"
																		},
																		"nativeSrc": "3992:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3979:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:0"
																},
																"nativeSrc": "3979:104:0",
																"nodeType": "YulFunctionCall",
																"src": "3979:104:0"
															},
															"nativeSrc": "3979:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "3979:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4204:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4204:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4217:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4217:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4223:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4223:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4213:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4213:3:0"
																				},
																				"nativeSrc": "4213:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4213:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4240:32:0",
																				"nodeType": "YulLiteral",
																				"src": "4240:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4210:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:0"
																		},
																		"nativeSrc": "4210:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4210:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4197:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4197:6:0"
																},
																"nativeSrc": "4197:77:0",
																"nodeType": "YulFunctionCall",
																"src": "4197:77:0"
															},
															"nativeSrc": "4197:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "4197:77:0"
														},
														{
															"nativeSrc": "4287:44:0",
															"nodeType": "YulAssignment",
															"src": "4287:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4307:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4307:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4314:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4314:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4320:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4320:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4326:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4326:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4299:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4299:7:0"
																},
																"nativeSrc": "4299:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4299:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4287:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4287:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4015:14:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4223:14:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "4287:8:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "4326:4:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "4307:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "3756:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "4354:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4374:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4366:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4366:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4354:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "4350:85:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "4378:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 123,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "4399:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4406:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "4399:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "4392:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3047:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3476:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3512:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3504:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 88,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3566:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3558:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:83:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3604:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3596:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:18:0"
									},
									"scope": 398,
									"src": "3467:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "4716:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4751:496:0",
													"nodeType": "YulBlock",
													"src": "4751:496:0",
													"statements": [
														{
															"nativeSrc": "4765:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4765:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4782:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4782:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4776:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4776:5:0"
																},
																"nativeSrc": "4776:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4776:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4769:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4769:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4811:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4811:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4816:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4816:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4807:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4807:3:0"
																		},
																		"nativeSrc": "4807:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4807:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4823:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4823:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4800:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4800:6:0"
																},
																"nativeSrc": "4800:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4800:32:0"
															},
															"nativeSrc": "4800:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4800:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4856:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4856:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4861:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4861:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4852:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:0"
																		},
																		"nativeSrc": "4852:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4852:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4868:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4868:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4845:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:0"
																},
																"nativeSrc": "4845:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4845:58:0"
															},
															"nativeSrc": "4845:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4845:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4927:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4927:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4932:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4932:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4923:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:0"
																		},
																		"nativeSrc": "4923:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4923:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4939:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4939:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4916:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:0"
																},
																"nativeSrc": "4916:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4916:38:0"
															},
															"nativeSrc": "4916:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4916:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4974:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4974:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4979:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4979:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4967:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:0"
																},
																"nativeSrc": "4967:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4967:55:0"
															},
															"nativeSrc": "4967:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4967:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5046:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5046:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5051:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5051:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5042:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5042:3:0"
																		},
																		"nativeSrc": "5042:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5042:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5058:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5035:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5035:6:0"
																},
																"nativeSrc": "5035:28:0",
																"nodeType": "YulFunctionCall",
																"src": "5035:28:0"
															},
															"nativeSrc": "5035:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "5035:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5087:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5087:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5092:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5092:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5083:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5083:3:0"
																		},
																		"nativeSrc": "5083:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5083:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5113:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5113:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5118:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5118:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5109:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5109:3:0"
																				},
																				"nativeSrc": "5109:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5109:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5125:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5125:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5099:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5099:9:0"
																		},
																		"nativeSrc": "5099:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5099:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5076:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:0"
																},
																"nativeSrc": "5076:55:0",
																"nodeType": "YulFunctionCall",
																"src": "5076:55:0"
															},
															"nativeSrc": "5076:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "5076:55:0"
														},
														{
															"nativeSrc": "5144:93:0",
															"nodeType": "YulAssignment",
															"src": "5144:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5175:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5175:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5180:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5180:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5171:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5171:3:0"
																				},
																				"nativeSrc": "5171:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5171:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5187:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5187:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5161:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5161:9:0"
																		},
																		"nativeSrc": "5161:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5194:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5194:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5157:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5157:3:0"
																},
																"nativeSrc": "5157:80:0",
																"nodeType": "YulFunctionCall",
																"src": "5157:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5144:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5144:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "4823:8:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4939:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "5144:9:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "5058:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "4726:521:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4447:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4560:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4605:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4597:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4637:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4629:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:86:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4705:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4697:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4696:19:0"
									},
									"scope": 398,
									"src": "4551:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "5502:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "5547:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "5563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5577:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5569:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5569:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5569:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															145,
															165
														],
														"referencedDeclaration": 145,
														"src": "5519:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "5512:71:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5259:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5372:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5417:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5409:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5449:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5441:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:60:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5491:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5483:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5482:19:0"
									},
									"scope": 398,
									"src": "5363:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6096:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "6136:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "6152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6158:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 175,
														"name": "cloneWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															182,
															236
														],
														"referencedDeclaration": 236,
														"src": "6113:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,uint256) returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6113:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "6106:54:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "5596:384:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "5994:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6025:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6017:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6054:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6041:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6041:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6016:43:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6086:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6078:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6077:18:0"
									},
									"scope": 398,
									"src": "5985:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6755:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6777:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6769:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6769:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6783:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "6769:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "6793:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6769:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6765:123:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6800:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 206,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "6856:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6848:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6848:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6848:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6862:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "6848:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "6871:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "6821:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6828:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "6821:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6821:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "6814:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "6910:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "6897:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6897:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"arguments": [
														{
															"id": 217,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6949:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "6965:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 216,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "6921:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6921:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6897:73:0"
											},
											{
												"AST": {
													"nativeSrc": "7005:87:0",
													"nodeType": "YulBlock",
													"src": "7005:87:0",
													"statements": [
														{
															"nativeSrc": "7019:63:0",
															"nodeType": "YulAssignment",
															"src": "7019:63:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7038:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "7038:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7049:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7049:8:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7059:4:0",
																				"nodeType": "YulLiteral",
																				"src": "7059:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7045:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:0"
																		},
																		"nativeSrc": "7045:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7045:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7072:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7072:8:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7066:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7066:5:0"
																		},
																		"nativeSrc": "7066:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7066:15:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "7031:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "7031:6:0"
																},
																"nativeSrc": "7031:51:0",
																"nodeType": "YulFunctionCall",
																"src": "7031:51:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "7019:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "7019:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7049:8:0",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7072:8:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "7019:8:0",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "7038:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "6980:112:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7105:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7125:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7117:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7117:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7105:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "7101:85:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "7129:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "7150:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7157:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "7150:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7150:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "7143:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6173:421:0",
										"text": " @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "6608:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6648:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6640:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6707:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6699:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:88:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6745:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6737:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6736:18:0"
									},
									"scope": 398,
									"src": "6599:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7937:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "7990:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "8006:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 251,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "8012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 248,
														"name": "cloneDeterministicWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															285
														],
														"referencedDeclaration": 285,
														"src": "7954:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,uint256) returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7954:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "7947:73:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "7198:566:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "7778:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "7831:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7823:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "7868:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7855:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7855:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "7890:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7882:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7813:87:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "7927:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7919:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7918:18:0"
									},
									"scope": 398,
									"src": "7769:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "8684:144:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "8707:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "8694:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 270,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8746:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8762:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 272,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8718:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8694:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "8799:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "8806:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 281,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8812:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 277,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8792:6:0",
														"memberName": "deploy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "8784:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (uint256,bytes32,bytes memory) returns (address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8784:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 269,
												"id": 283,
												"nodeType": "Return",
												"src": "8777:44:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "8033:455:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "8502:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "8555:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8547:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "8592:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8579:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8579:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "8614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8636:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8628:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8537:110:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "8674:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8666:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:18:0"
									},
									"scope": 398,
									"src": "8493:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "9164:166:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "9187:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "9174:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9174:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "9226:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "9242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "9198:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9198:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9174:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9287:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 310,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "9303:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 309,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "9293:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9293:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 312,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "9314:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 306,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "9264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9272:14:0",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "9264:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 314,
												"nodeType": "Return",
												"src": "9257:66:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "8834:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "8964:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9026:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9018:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9063:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9050:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9050:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9085:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9077:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "9107:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9099:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9008:113:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9153:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9145:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9144:19:0"
									},
									"scope": 398,
									"src": "8955:375:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "9640:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "9702:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9718:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9738:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9730:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9730:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9730:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "predictDeterministicAddressWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															339
														],
														"referencedDeclaration": 316,
														"src": "9657:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,address) pure returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9657:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 337,
												"nodeType": "Return",
												"src": "9650:94:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "9336:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "9466:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9528:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9520:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9565:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9552:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9552:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9587:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9579:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9510:87:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9629:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9621:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9620:19:0"
									},
									"scope": 398,
									"src": "9457:294:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "10444:246:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10467:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "10454:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10454:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "instance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "10486:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10495:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "10486:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10500:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10486:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "3435",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10509:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"src": "10486:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10476:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10480:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10476:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10454:58:0"
											},
											{
												"AST": {
													"nativeSrc": "10580:81:0",
													"nodeType": "YulBlock",
													"src": "10580:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "instance",
																		"nativeSrc": "10606:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "10606:8:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10620:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10620:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10628:2:0",
																				"nodeType": "YulLiteral",
																				"src": "10628:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10616:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10616:3:0"
																		},
																		"nativeSrc": "10616:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10616:15:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:2:0",
																		"nodeType": "YulLiteral",
																		"src": "10633:2:0",
																		"type": "",
																		"value": "45"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10643:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10643:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10637:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "10637:5:0"
																		},
																		"nativeSrc": "10637:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10637:13:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nativeSrc": "10594:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "10594:11:0"
																},
																"nativeSrc": "10594:57:0",
																"nodeType": "YulFunctionCall",
																"src": "10594:57:0"
															},
															"nativeSrc": "10594:57:0",
															"nodeType": "YulExpressionStatement",
															"src": "10594:57:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "10606:8:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10620:6:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10643:6:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 358,
												"nodeType": "InlineAssembly",
												"src": "10555:106:0"
											},
											{
												"expression": {
													"id": 359,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "10677:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "10670:13:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "9757:603:0",
										"text": " @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchCloneArgs",
									"nameLocation": "10374:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "10397:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10389:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10388:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10430:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10430:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10429:14:0"
									},
									"scope": 398,
									"src": "10365:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "11479:362:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 372,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11493:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11498:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11493:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3234353331",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11507:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24531_by_1",
															"typeString": "int_const 24531"
														},
														"value": "24531"
													},
													"src": "11493:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "11489:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "CloneArgumentsTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "11521:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11521:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 378,
													"nodeType": "RevertStatement",
													"src": "11514:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "61",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11607:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															"value": "a"
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 385,
																			"name": "args",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "11639:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11644:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "11639:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3435",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11653:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_45_by_1",
																			"typeString": "int_const 45"
																		},
																		"value": "45"
																	},
																	"src": "11639:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11632:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "11632:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11632:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "3d81600a3d39f3363d3d373d3d3d363d73",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11674:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 391,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11731:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11763:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"id": 393,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11816:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 380,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "11573:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11577:12:0",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "11573:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11573:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 395,
												"nodeType": "Return",
												"src": "11554:280:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "10696:640:0",
										"text": " @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cloneCodeWithImmutableArgs",
									"nameLocation": "11350:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11395:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11387:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11419:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11419:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11377:65:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11465:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11465:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11464:14:0"
									},
									"scope": 398,
									"src": "11341:500:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 399,
							"src": "817:11026:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "100:11744:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 520,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:367:1",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Create2",
							"nameLocation": "541:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "555:50:1",
										"text": " @dev There's no code to deploy."
									},
									"errorSelector": "4ca249dc",
									"id": 406,
									"name": "Create2EmptyBytecode",
									"nameLocation": "616:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:1"
									},
									"src": "610:29:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1311:746:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1321:125:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1357:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1413:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				],
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1405:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1405:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1419:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1405:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1378:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1385:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1378:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 435,
															"nodeType": "RevertStatement",
															"src": "1371:64:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1459:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1468:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1459:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1455:80:1",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1481:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 442,
																	"name": "Create2EmptyBytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1502:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1495:29:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1569:392:1",
													"nodeType": "YulBlock",
													"src": "1569:392:1",
													"statements": [
														{
															"nativeSrc": "1583:67:1",
															"nodeType": "YulAssignment",
															"src": "1583:67:1",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1611:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nativeSrc": "1607:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1634:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1628:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:1"
																		},
																		"nativeSrc": "1628:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:15:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "1645:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																},
																"nativeSrc": "1591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:59:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "1583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:151:1",
																"nodeType": "YulBlock",
																"src": "1800:151:1",
																"statements": [
																	{
																		"nativeSrc": "1818:20:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1818:20:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:4:1",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:5:1"
																			},
																			"nativeSrc": "1827:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:11:1"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "1822:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1822:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1870:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1870:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1876:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1876:14:1"
																					},
																					"nativeSrc": "1876:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1876:16:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1855:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:14:1"
																			},
																			"nativeSrc": "1855:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:38:1"
																		},
																		"nativeSrc": "1855:38:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:38:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1917:1:1"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1920:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:1"
																					},
																					"nativeSrc": "1920:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:1"
																			},
																			"nativeSrc": "1910:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:1"
																		},
																		"nativeSrc": "1910:27:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1762:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:4:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:1"
																		},
																		"nativeSrc": "1755:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "1780:14:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:14:1"
																						},
																						"nativeSrc": "1780:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:16:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1773:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1773:6:1"
																				},
																				"nativeSrc": "1773:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:1"
																		},
																		"nativeSrc": "1769:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:29:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:1"
																},
																"nativeSrc": "1751:48:1",
																"nodeType": "YulFunctionCall",
																"src": "1751:48:1"
															},
															"nativeSrc": "1748:203:1",
															"nodeType": "YulIf",
															"src": "1748:203:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:4:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:4:1",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "1599:6:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1611:8:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1634:8:1",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 447,
												"nodeType": "InlineAssembly",
												"src": "1544:417:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1974:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 449,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1982:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1982:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "1970:81:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "1994:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 454,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2022:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2015:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "2008:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "645:560:1",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1219:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1242:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1269:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:53:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:1"
									},
									"scope": 497,
									"src": "1210:847:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2353:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2385:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2391:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 472,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															482,
															496
														],
														"referencedDeclaration": 496,
														"src": "2370:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 480,
												"nodeType": "Return",
												"src": "2363:56:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2063:193:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2270:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2293:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2285:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2299:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:36:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2344:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:1"
									},
									"scope": 497,
									"src": "2261:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2784:1679:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2819:1638:1",
													"nodeType": "YulBlock",
													"src": "2819:1638:1",
													"statements": [
														{
															"nativeSrc": "2833:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																},
																"nativeSrc": "2844:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2844:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "2837:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2837:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4057:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4057:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4062:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4062:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:1"
																		},
																		"nativeSrc": "4053:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:14:1"
																	},
																	{
																		"name": "bytecodeHash",
																		"nativeSrc": "4069:12:1",
																		"nodeType": "YulIdentifier",
																		"src": "4069:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nativeSrc": "4046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:36:1"
															},
															"nativeSrc": "4046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4106:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nativeSrc": "4102:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:1"
																},
																"nativeSrc": "4095:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:28:1"
															},
															"nativeSrc": "4095:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4095:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4143:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4148:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:1"
																},
																"nativeSrc": "4136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:21:1"
															},
															"nativeSrc": "4136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4136:21:1"
														},
														{
															"nativeSrc": "4219:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4241:4:1",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:1"
																},
																"nativeSrc": "4232:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:14:1"
															},
															"variables": [
																{
																	"name": "start",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4223:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "4337:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:7:1"
																},
																"nativeSrc": "4337:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:20:1"
															},
															"nativeSrc": "4337:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:20:1"
														},
														{
															"nativeSrc": "4370:77:1",
															"nodeType": "YulAssignment",
															"src": "4370:77:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nativeSrc": "4392:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "85"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4382:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "4382:9:1"
																		},
																		"nativeSrc": "4382:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:1"
																},
																"nativeSrc": "4378:69:1",
																"nodeType": "YulFunctionCall",
																"src": "4378:69:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "4370:4:1",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:12:1",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "4148:8:1",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "2794:1663:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2432:232:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2678:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2701:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2693:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2715:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2707:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2737:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2729:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:54:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2770:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:14:1"
									},
									"scope": 497,
									"src": "2669:1794:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "533:3932:1",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "101:4365:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:2",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "Errors",
							"nameLocation": "419:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:2",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 507,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:2"
									},
									"src": "531:59:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:2",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 510,
									"name": "FailedCall",
									"nameLocation": "696:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"src": "690:19:2"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:2",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 513,
									"name": "FailedDeployment",
									"nameLocation": "772:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "766:25:2"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:2",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 518,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"src": "860:33:2"
								}
							],
							"scope": 520,
							"src": "411:484:2",
							"usedErrors": [
								507,
								510,
								513,
								518
							],
							"usedEvents": []
						}
					],
					"src": "100:796:2"
				},
				"id": 2
			},
			"contracts/effct3testnet.sol": {
				"ast": {
					"absolutePath": "contracts/effct3testnet.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						],
						"IERC20": [
							549
						],
						"TriviaBase": [
							751
						],
						"TriviaBaseFactory": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 549,
							"linearizedBaseContracts": [
								549
							],
							"name": "IERC20",
							"nameLocation": "69:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "91:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "112:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "104:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "128:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "120:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "147:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "139:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:51:3"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "173:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:6:3"
									},
									"scope": 549,
									"src": "82:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "193:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:17:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "243:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:9:3"
									},
									"scope": 549,
									"src": "184:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "266:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "283:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "275:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "302:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "294:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:35:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "328:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "328:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:6:3"
									},
									"scope": 549,
									"src": "257:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 780,
							"src": "59:277:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TriviaBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 751,
							"linearizedBaseContracts": [
								751
							],
							"name": "TriviaBase",
							"nameLocation": "347:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 551,
									"mutability": "immutable",
									"name": "ADMIN",
									"nameLocation": "411:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "385:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 550,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 553,
									"mutability": "immutable",
									"name": "MOCK_USDC",
									"nameLocation": "448:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "422:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 552,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 555,
									"mutability": "immutable",
									"name": "BANK_ADMIN",
									"nameLocation": "489:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "463:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 554,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 557,
									"mutability": "immutable",
									"name": "deployer",
									"nameLocation": "531:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "505:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 556,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "505:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "559:260:3",
										"statements": [
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 560,
														"name": "ADMIN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "569:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307837306361346134344132323736343542423438313541453464363830393865413638614239323646",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "577:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x70ca4a44A227645BB4815AE4d68098eA68aB926F"
													},
													"src": "569:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "569:50:3"
											},
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 564,
														"name": "MOCK_USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "629:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307831323431363736643435623143623542353733623632353843344138333865313439413144313931",
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "641:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x1241676d45b1Cb5B573b6258C4A838e149A1D191"
													},
													"src": "629:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "629:54:3"
											},
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 568,
														"name": "BANK_ADMIN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "693:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307838313838316439374541396138353530323542643045333843374343433244453730373441314237",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "707:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x81881d97EA9a855025Bd0E38C7CCC2DE7074A1B7"
													},
													"src": "693:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "693:56:3"
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "759:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835326330343343373132306437444133356646644446364335633233353964353033636545354638",
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "770:42:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x52c043C7120d7DA35fFdDF6C5c2359d503ceE5F8"
													},
													"src": "759:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "759:53:3"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:0:3"
									},
									"scope": 751,
									"src": "546:273:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6b6ef27261dfd975a881981cb28adc6afe7963673c859bce73d79e0e09be34b0",
									"id": 587,
									"name": "RewardsDistributed",
									"nameLocation": "832:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"indexed": false,
												"mutability": "mutable",
												"name": "winners",
												"nameLocation": "862:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "851:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
													"typeString": "address[3]"
												},
												"typeName": {
													"baseType": {
														"id": 578,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "851:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 580,
													"length": {
														"hexValue": "33",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "859:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "851:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
														"typeString": "address[3]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "879:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "871:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
													"typeString": "uint256[3]"
												},
												"typeName": {
													"baseType": {
														"id": 582,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "871:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 584,
													"length": {
														"hexValue": "33",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "876:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "871:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
														"typeString": "uint256[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:37:3"
									},
									"src": "826:62:3"
								},
								{
									"errorSelector": "786e0a99",
									"id": 589,
									"name": "InsufficientContractBalance",
									"nameLocation": "900:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:2:3"
									},
									"src": "894:36:3"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "992:142:3",
										"statements": [
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "1007:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "1002:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 594,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1002:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 602,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1061:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TriviaBase_$751",
																		"typeString": "contract TriviaBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TriviaBase_$751",
																		"typeString": "contract TriviaBase"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1053:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1053:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1053:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "MOCK_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1032:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 596,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "1025:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$549_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1043:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "1025:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1002:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "1104:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "1111:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "MOCK_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1084:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 606,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "1077:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$549_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1095:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1077:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "1077:50:3"
											}
										]
									},
									"functionSelector": "90decdae",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 592,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 591,
												"name": "onlyAddress",
												"nameLocations": [
													"981:11:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 750,
												"src": "981:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "981:11:3"
										}
									],
									"name": "EmergencyWithdrawalAdmin",
									"nameLocation": "945:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:0:3"
									},
									"scope": 751,
									"src": "936:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "1198:66:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 626,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1251:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TriviaBase_$751",
																		"typeString": "contract TriviaBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TriviaBase_$751",
																		"typeString": "contract TriviaBase"
																	}
																],
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1243:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 624,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1243:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1243:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 621,
																	"name": "MOCK_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1222:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 620,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "1215:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$549_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1215:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1233:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "1215:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1215:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 619,
												"id": 629,
												"nodeType": "Return",
												"src": "1208:49:3"
											}
										]
									},
									"functionSelector": "b321e227",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ReturnContractBalnc",
									"nameLocation": "1149:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:2:3"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1193:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1193:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:6:3"
									},
									"scope": 751,
									"src": "1140:124:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "1327:728:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 639,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1378:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1382:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1378:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 641,
																"name": "deployer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "1392:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1378:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206465706c6f7965722041646472657373",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da",
																"typeString": "literal_string \"Not deployer Address\""
															},
															"value": "Not deployer Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82fb71f53b0a4b16b872682f602bca21b6d8c7ce45e9c6aafb76f71afede19da",
																"typeString": "literal_string \"Not deployer Address\""
															}
														],
														"id": 638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1370:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1370:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "1370:55:3"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "1440:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "1435:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1435:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 654,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1494:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TriviaBase_$751",
																		"typeString": "contract TriviaBase"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TriviaBase_$751",
																		"typeString": "contract TriviaBase"
																	}
																],
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1486:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 652,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1486:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1486:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 649,
																	"name": "MOCK_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1465:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 648,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "1458:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$549_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1458:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1476:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "1458:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1435:65:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 658,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "1514:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1533:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1514:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 664,
												"nodeType": "IfStatement",
												"src": "1510:62:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 661,
															"name": "InsufficientContractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "1543:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1543:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 663,
													"nodeType": "RevertStatement",
													"src": "1536:36:3"
												}
											},
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "user_reward",
														"nameLocation": "1598:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "1583:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
															"typeString": "uint256[3]"
														},
														"typeName": {
															"baseType": {
																"id": 668,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1583:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 669,
															"length": {
																"hexValue": "33",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1588:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"nodeType": "ArrayTypeName",
															"src": "1583:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
																"typeString": "uint256[3]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 690,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3438",
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1627:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_48_by_1",
																				"typeString": "int_const 48"
																			},
																			"value": "48"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 672,
																			"name": "contractBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "1632:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1627:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 674,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1626:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1651:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1626:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3239",
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1669:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_29_by_1",
																				"typeString": "int_const 29"
																			},
																			"value": "29"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 678,
																			"name": "contractBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "1674:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1669:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 680,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1668:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1693:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1668:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3139",
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1711:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_19_by_1",
																				"typeString": "int_const 19"
																			},
																			"value": "19"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 684,
																			"name": "contractBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "1716:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1711:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 686,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1710:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1735:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1710:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 689,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1612:136:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
														"typeString": "uint256[3] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1583:165:3"
											},
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "admin_reward",
														"nameLocation": "1764:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "1759:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 691,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1759:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1780:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 694,
																	"name": "contractBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "1784:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1780:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 696,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1779:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1803:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1779:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1759:47:3"
											},
											{
												"body": {
													"id": 722,
													"nodeType": "Block",
													"src": "1846:78:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 714,
																			"name": "_users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "1887:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
																				"typeString": "address[3] memory"
																			}
																		},
																		"id": 716,
																		"indexExpression": {
																			"id": 715,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "1894:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1887:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 717,
																			"name": "user_reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 670,
																			"src": "1898:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
																				"typeString": "uint256[3] memory"
																			}
																		},
																		"id": 719,
																		"indexExpression": {
																			"id": 718,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 701,
																			"src": "1910:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1898:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 711,
																				"name": "MOCK_USDC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 553,
																				"src": "1867:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 710,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 549,
																			"src": "1860:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$549_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1860:17:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$549",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1878:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 548,
																	"src": "1860:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1860:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "1860:53:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1834:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1838:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1834:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"initializationExpression": {
													"assignments": [
														701
													],
													"declarations": [
														{
															"constant": false,
															"id": 701,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1827:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 723,
															"src": "1822:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 700,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1822:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 703,
													"initialValue": {
														"hexValue": "30",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1831:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1822:10:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1841:3:3",
														"subExpression": {
															"id": 707,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1841:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 709,
													"nodeType": "ExpressionStatement",
													"src": "1841:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1817:107:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "BANK_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "1969:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "admin_reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "1981:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 725,
																	"name": "MOCK_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "1949:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 724,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "1942:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$549_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1942:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1960:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1942:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "1942:52:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 733,
															"name": "_users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "2028:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
																"typeString": "address[3] memory"
															}
														},
														{
															"id": 734,
															"name": "user_reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "2036:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
																"typeString": "uint256[3] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
																"typeString": "address[3] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
																"typeString": "uint256[3] memory"
															}
														],
														"id": 732,
														"name": "RewardsDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "2009:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$3_memory_ptr_$_t_array$_t_uint256_$3_memory_ptr_$returns$__$",
															"typeString": "function (address[3] memory,uint256[3] memory)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "EmitStatement",
												"src": "2004:44:3"
											}
										]
									},
									"functionSelector": "fe272fd9",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "RewardWinners",
									"nameLocation": "1279:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "_users",
												"nameLocation": "1311:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "1293:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
													"typeString": "address[3]"
												},
												"typeName": {
													"baseType": {
														"id": 632,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1293:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 634,
													"length": {
														"hexValue": "33",
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1301:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "1293:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
														"typeString": "address[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:26:3"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:3"
									},
									"scope": 751,
									"src": "1270:785:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2084:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 741,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2102:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2106:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2102:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 743,
																"name": "ADMIN",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "2116:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2102:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2077616c6c657421",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5",
																"typeString": "literal_string \"Only admin wallet!\""
															},
															"value": "Only admin wallet!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20b6f445c6d3e8bd5c90811887c3d91a379895e524450bfce2a34c827ee95ee5",
																"typeString": "literal_string \"Only admin wallet!\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2094:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2094:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "2094:50:3"
											},
											{
												"id": 748,
												"nodeType": "PlaceholderStatement",
												"src": "2154:1:3"
											}
										]
									},
									"id": 750,
									"name": "onlyAddress",
									"nameLocation": "2070:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:3"
									},
									"src": "2061:101:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 780,
							"src": "338:1826:3",
							"usedErrors": [
								589
							],
							"usedEvents": [
								587
							]
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 399,
							"src": "2300:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TriviaBaseFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "TriviaBaseFactory",
							"nameLocation": "2361:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 755,
									"mutability": "immutable",
									"name": "TRIVIA",
									"nameLocation": "2411:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "2385:77:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 753,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2385:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861303330326246353134623236316242343634303364384333303434653745663135363543314536",
										"id": 754,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2420:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xa0302bF514b261bB46403d8C3044e7Ef1565C1E6"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "456f613c0980b2ac67372535d8b1cd435b82dc1d50d713328c70ca9a28ccb1af",
									"id": 759,
									"name": "EmitNewTriviaContract",
									"nameLocation": "2475:21:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"indexed": false,
												"mutability": "mutable",
												"name": "_TriviaBase",
												"nameLocation": "2506:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2498:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:23:3"
									},
									"src": "2469:51:3"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2585:145:3",
										"statements": [
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "newconstTrivia",
														"nameLocation": "2603:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "2595:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 764,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2595:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"arguments": [
														{
															"id": 768,
															"name": "TRIVIA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2633:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 766,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "2620:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$398_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2627:5:3",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "2620:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2595:45:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 772,
															"name": "newconstTrivia",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "2677:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 771,
														"name": "EmitNewTriviaContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2655:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "EmitStatement",
												"src": "2650:42:3"
											},
											{
												"expression": {
													"id": 775,
													"name": "newconstTrivia",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "2709:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 763,
												"id": 776,
												"nodeType": "Return",
												"src": "2702:21:3"
											}
										]
									},
									"functionSelector": "c313889c",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createTriviaContract",
									"nameLocation": "2535:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:2:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2576:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2575:9:3"
									},
									"scope": 779,
									"src": "2526:204:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 780,
							"src": "2352:380:3",
							"usedErrors": [
								507,
								513
							],
							"usedEvents": [
								759
							]
						}
					],
					"src": "32:2701:3"
				},
				"id": 3
			}
		}
	}
}